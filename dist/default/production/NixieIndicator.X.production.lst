

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 26 15:51:22 2023

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1939 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0110                     	;# 
   129  0111                     	;# 
   130  0112                     	;# 
   131  0113                     	;# 
   132  0114                     	;# 
   133  0115                     	;# 
   134  0116                     	;# 
   135  0117                     	;# 
   136  0118                     	;# 
   137  0119                     	;# 
   138  011A                     	;# 
   139  011B                     	;# 
   140  011D                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  018F                     	;# 
   144  0190                     	;# 
   145  0191                     	;# 
   146  0191                     	;# 
   147  0192                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0199                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019F                     	;# 
   165  020D                     	;# 
   166  0210                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0291                     	;# 
   176  0291                     	;# 
   177  0292                     	;# 
   178  0293                     	;# 
   179  0294                     	;# 
   180  0295                     	;# 
   181  0295                     	;# 
   182  0296                     	;# 
   183  0298                     	;# 
   184  0298                     	;# 
   185  0299                     	;# 
   186  029A                     	;# 
   187  029B                     	;# 
   188  029C                     	;# 
   189  029C                     	;# 
   190  029D                     	;# 
   191  029E                     	;# 
   192  029F                     	;# 
   193  0311                     	;# 
   194  0311                     	;# 
   195  0312                     	;# 
   196  0313                     	;# 
   197  0314                     	;# 
   198  0315                     	;# 
   199  0315                     	;# 
   200  0316                     	;# 
   201  0318                     	;# 
   202  0318                     	;# 
   203  0319                     	;# 
   204  031A                     	;# 
   205  031C                     	;# 
   206  031C                     	;# 
   207  031D                     	;# 
   208  031E                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  0415                     	;# 
   213  0416                     	;# 
   214  0417                     	;# 
   215  041C                     	;# 
   216  041D                     	;# 
   217  041E                     	;# 
   218  0791                     	;# 
   219  0792                     	;# 
   220  0793                     	;# 
   221  0794                     	;# 
   222  0795                     	;# 
   223  0798                     	;# 
   224  0799                     	;# 
   225  079A                     	;# 
   226  07A0                     	;# 
   227  07A1                     	;# 
   228  07A2                     	;# 
   229  07A3                     	;# 
   230  07A4                     	;# 
   231  07A5                     	;# 
   232  07A6                     	;# 
   233  07A7                     	;# 
   234  07A8                     	;# 
   235  07A9                     	;# 
   236  07AA                     	;# 
   237  07AB                     	;# 
   238  0FE4                     	;# 
   239  0FE5                     	;# 
   240  0FE6                     	;# 
   241  0FE7                     	;# 
   242  0FE8                     	;# 
   243  0FE9                     	;# 
   244  0FEA                     	;# 
   245  0FEB                     	;# 
   246  0FED                     	;# 
   247  0FEE                     	;# 
   248  0FEF                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  008F                     	;# 
   284  0090                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0110                     	;# 
   304  0111                     	;# 
   305  0112                     	;# 
   306  0113                     	;# 
   307  0114                     	;# 
   308  0115                     	;# 
   309  0116                     	;# 
   310  0117                     	;# 
   311  0118                     	;# 
   312  0119                     	;# 
   313  011A                     	;# 
   314  011B                     	;# 
   315  011D                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318  018F                     	;# 
   319  0190                     	;# 
   320  0191                     	;# 
   321  0191                     	;# 
   322  0192                     	;# 
   323  0193                     	;# 
   324  0193                     	;# 
   325  0193                     	;# 
   326  0194                     	;# 
   327  0195                     	;# 
   328  0196                     	;# 
   329  0199                     	;# 
   330  019A                     	;# 
   331  019B                     	;# 
   332  019B                     	;# 
   333  019B                     	;# 
   334  019B                     	;# 
   335  019C                     	;# 
   336  019C                     	;# 
   337  019D                     	;# 
   338  019E                     	;# 
   339  019F                     	;# 
   340  020D                     	;# 
   341  0210                     	;# 
   342  0211                     	;# 
   343  0212                     	;# 
   344  0213                     	;# 
   345  0214                     	;# 
   346  0215                     	;# 
   347  0215                     	;# 
   348  0216                     	;# 
   349  0217                     	;# 
   350  0291                     	;# 
   351  0291                     	;# 
   352  0292                     	;# 
   353  0293                     	;# 
   354  0294                     	;# 
   355  0295                     	;# 
   356  0295                     	;# 
   357  0296                     	;# 
   358  0298                     	;# 
   359  0298                     	;# 
   360  0299                     	;# 
   361  029A                     	;# 
   362  029B                     	;# 
   363  029C                     	;# 
   364  029C                     	;# 
   365  029D                     	;# 
   366  029E                     	;# 
   367  029F                     	;# 
   368  0311                     	;# 
   369  0311                     	;# 
   370  0312                     	;# 
   371  0313                     	;# 
   372  0314                     	;# 
   373  0315                     	;# 
   374  0315                     	;# 
   375  0316                     	;# 
   376  0318                     	;# 
   377  0318                     	;# 
   378  0319                     	;# 
   379  031A                     	;# 
   380  031C                     	;# 
   381  031C                     	;# 
   382  031D                     	;# 
   383  031E                     	;# 
   384  0394                     	;# 
   385  0395                     	;# 
   386  0396                     	;# 
   387  0415                     	;# 
   388  0416                     	;# 
   389  0417                     	;# 
   390  041C                     	;# 
   391  041D                     	;# 
   392  041E                     	;# 
   393  0791                     	;# 
   394  0792                     	;# 
   395  0793                     	;# 
   396  0794                     	;# 
   397  0795                     	;# 
   398  0798                     	;# 
   399  0799                     	;# 
   400  079A                     	;# 
   401  07A0                     	;# 
   402  07A1                     	;# 
   403  07A2                     	;# 
   404  07A3                     	;# 
   405  07A4                     	;# 
   406  07A5                     	;# 
   407  07A6                     	;# 
   408  07A7                     	;# 
   409  07A8                     	;# 
   410  07A9                     	;# 
   411  07AA                     	;# 
   412  07AB                     	;# 
   413  0FE4                     	;# 
   414  0FE5                     	;# 
   415  0FE6                     	;# 
   416  0FE7                     	;# 
   417  0FE8                     	;# 
   418  0FE9                     	;# 
   419  0FEA                     	;# 
   420  0FEB                     	;# 
   421  0FED                     	;# 
   422  0FEE                     	;# 
   423  0FEF                     	;# 
   424  0000                     	;# 
   425  0001                     	;# 
   426  0002                     	;# 
   427  0003                     	;# 
   428  0004                     	;# 
   429  0005                     	;# 
   430  0006                     	;# 
   431  0007                     	;# 
   432  0008                     	;# 
   433  0009                     	;# 
   434  000A                     	;# 
   435  000B                     	;# 
   436  000C                     	;# 
   437  000D                     	;# 
   438  000E                     	;# 
   439  000F                     	;# 
   440  0010                     	;# 
   441  0011                     	;# 
   442  0012                     	;# 
   443  0013                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0016                     	;# 
   447  0017                     	;# 
   448  0018                     	;# 
   449  0019                     	;# 
   450  001A                     	;# 
   451  001B                     	;# 
   452  001C                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  008C                     	;# 
   456  008D                     	;# 
   457  008E                     	;# 
   458  008F                     	;# 
   459  0090                     	;# 
   460  0091                     	;# 
   461  0092                     	;# 
   462  0093                     	;# 
   463  0095                     	;# 
   464  0096                     	;# 
   465  0097                     	;# 
   466  0098                     	;# 
   467  0099                     	;# 
   468  009A                     	;# 
   469  009B                     	;# 
   470  009B                     	;# 
   471  009C                     	;# 
   472  009D                     	;# 
   473  009E                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  0110                     	;# 
   479  0111                     	;# 
   480  0112                     	;# 
   481  0113                     	;# 
   482  0114                     	;# 
   483  0115                     	;# 
   484  0116                     	;# 
   485  0117                     	;# 
   486  0118                     	;# 
   487  0119                     	;# 
   488  011A                     	;# 
   489  011B                     	;# 
   490  011D                     	;# 
   491  018C                     	;# 
   492  018D                     	;# 
   493  018F                     	;# 
   494  0190                     	;# 
   495  0191                     	;# 
   496  0191                     	;# 
   497  0192                     	;# 
   498  0193                     	;# 
   499  0193                     	;# 
   500  0193                     	;# 
   501  0194                     	;# 
   502  0195                     	;# 
   503  0196                     	;# 
   504  0199                     	;# 
   505  019A                     	;# 
   506  019B                     	;# 
   507  019B                     	;# 
   508  019B                     	;# 
   509  019B                     	;# 
   510  019C                     	;# 
   511  019C                     	;# 
   512  019D                     	;# 
   513  019E                     	;# 
   514  019F                     	;# 
   515  020D                     	;# 
   516  0210                     	;# 
   517  0211                     	;# 
   518  0212                     	;# 
   519  0213                     	;# 
   520  0214                     	;# 
   521  0215                     	;# 
   522  0215                     	;# 
   523  0216                     	;# 
   524  0217                     	;# 
   525  0291                     	;# 
   526  0291                     	;# 
   527  0292                     	;# 
   528  0293                     	;# 
   529  0294                     	;# 
   530  0295                     	;# 
   531  0295                     	;# 
   532  0296                     	;# 
   533  0298                     	;# 
   534  0298                     	;# 
   535  0299                     	;# 
   536  029A                     	;# 
   537  029B                     	;# 
   538  029C                     	;# 
   539  029C                     	;# 
   540  029D                     	;# 
   541  029E                     	;# 
   542  029F                     	;# 
   543  0311                     	;# 
   544  0311                     	;# 
   545  0312                     	;# 
   546  0313                     	;# 
   547  0314                     	;# 
   548  0315                     	;# 
   549  0315                     	;# 
   550  0316                     	;# 
   551  0318                     	;# 
   552  0318                     	;# 
   553  0319                     	;# 
   554  031A                     	;# 
   555  031C                     	;# 
   556  031C                     	;# 
   557  031D                     	;# 
   558  031E                     	;# 
   559  0394                     	;# 
   560  0395                     	;# 
   561  0396                     	;# 
   562  0415                     	;# 
   563  0416                     	;# 
   564  0417                     	;# 
   565  041C                     	;# 
   566  041D                     	;# 
   567  041E                     	;# 
   568  0791                     	;# 
   569  0792                     	;# 
   570  0793                     	;# 
   571  0794                     	;# 
   572  0795                     	;# 
   573  0798                     	;# 
   574  0799                     	;# 
   575  079A                     	;# 
   576  07A0                     	;# 
   577  07A1                     	;# 
   578  07A2                     	;# 
   579  07A3                     	;# 
   580  07A4                     	;# 
   581  07A5                     	;# 
   582  07A6                     	;# 
   583  07A7                     	;# 
   584  07A8                     	;# 
   585  07A9                     	;# 
   586  07AA                     	;# 
   587  07AB                     	;# 
   588  0FE4                     	;# 
   589  0FE5                     	;# 
   590  0FE6                     	;# 
   591  0FE7                     	;# 
   592  0FE8                     	;# 
   593  0FE9                     	;# 
   594  0FEA                     	;# 
   595  0FEB                     	;# 
   596  0FED                     	;# 
   597  0FEE                     	;# 
   598  0FEF                     	;# 
   599  0000                     	;# 
   600  0001                     	;# 
   601  0002                     	;# 
   602  0003                     	;# 
   603  0004                     	;# 
   604  0005                     	;# 
   605  0006                     	;# 
   606  0007                     	;# 
   607  0008                     	;# 
   608  0009                     	;# 
   609  000A                     	;# 
   610  000B                     	;# 
   611  000C                     	;# 
   612  000D                     	;# 
   613  000E                     	;# 
   614  000F                     	;# 
   615  0010                     	;# 
   616  0011                     	;# 
   617  0012                     	;# 
   618  0013                     	;# 
   619  0015                     	;# 
   620  0016                     	;# 
   621  0016                     	;# 
   622  0017                     	;# 
   623  0018                     	;# 
   624  0019                     	;# 
   625  001A                     	;# 
   626  001B                     	;# 
   627  001C                     	;# 
   628  001E                     	;# 
   629  001F                     	;# 
   630  008C                     	;# 
   631  008D                     	;# 
   632  008E                     	;# 
   633  008F                     	;# 
   634  0090                     	;# 
   635  0091                     	;# 
   636  0092                     	;# 
   637  0093                     	;# 
   638  0095                     	;# 
   639  0096                     	;# 
   640  0097                     	;# 
   641  0098                     	;# 
   642  0099                     	;# 
   643  009A                     	;# 
   644  009B                     	;# 
   645  009B                     	;# 
   646  009C                     	;# 
   647  009D                     	;# 
   648  009E                     	;# 
   649  010C                     	;# 
   650  010D                     	;# 
   651  010E                     	;# 
   652  010F                     	;# 
   653  0110                     	;# 
   654  0111                     	;# 
   655  0112                     	;# 
   656  0113                     	;# 
   657  0114                     	;# 
   658  0115                     	;# 
   659  0116                     	;# 
   660  0117                     	;# 
   661  0118                     	;# 
   662  0119                     	;# 
   663  011A                     	;# 
   664  011B                     	;# 
   665  011D                     	;# 
   666  018C                     	;# 
   667  018D                     	;# 
   668  018F                     	;# 
   669  0190                     	;# 
   670  0191                     	;# 
   671  0191                     	;# 
   672  0192                     	;# 
   673  0193                     	;# 
   674  0193                     	;# 
   675  0193                     	;# 
   676  0194                     	;# 
   677  0195                     	;# 
   678  0196                     	;# 
   679  0199                     	;# 
   680  019A                     	;# 
   681  019B                     	;# 
   682  019B                     	;# 
   683  019B                     	;# 
   684  019B                     	;# 
   685  019C                     	;# 
   686  019C                     	;# 
   687  019D                     	;# 
   688  019E                     	;# 
   689  019F                     	;# 
   690  020D                     	;# 
   691  0210                     	;# 
   692  0211                     	;# 
   693  0212                     	;# 
   694  0213                     	;# 
   695  0214                     	;# 
   696  0215                     	;# 
   697  0215                     	;# 
   698  0216                     	;# 
   699  0217                     	;# 
   700  0291                     	;# 
   701  0291                     	;# 
   702  0292                     	;# 
   703  0293                     	;# 
   704  0294                     	;# 
   705  0295                     	;# 
   706  0295                     	;# 
   707  0296                     	;# 
   708  0298                     	;# 
   709  0298                     	;# 
   710  0299                     	;# 
   711  029A                     	;# 
   712  029B                     	;# 
   713  029C                     	;# 
   714  029C                     	;# 
   715  029D                     	;# 
   716  029E                     	;# 
   717  029F                     	;# 
   718  0311                     	;# 
   719  0311                     	;# 
   720  0312                     	;# 
   721  0313                     	;# 
   722  0314                     	;# 
   723  0315                     	;# 
   724  0315                     	;# 
   725  0316                     	;# 
   726  0318                     	;# 
   727  0318                     	;# 
   728  0319                     	;# 
   729  031A                     	;# 
   730  031C                     	;# 
   731  031C                     	;# 
   732  031D                     	;# 
   733  031E                     	;# 
   734  0394                     	;# 
   735  0395                     	;# 
   736  0396                     	;# 
   737  0415                     	;# 
   738  0416                     	;# 
   739  0417                     	;# 
   740  041C                     	;# 
   741  041D                     	;# 
   742  041E                     	;# 
   743  0791                     	;# 
   744  0792                     	;# 
   745  0793                     	;# 
   746  0794                     	;# 
   747  0795                     	;# 
   748  0798                     	;# 
   749  0799                     	;# 
   750  079A                     	;# 
   751  07A0                     	;# 
   752  07A1                     	;# 
   753  07A2                     	;# 
   754  07A3                     	;# 
   755  07A4                     	;# 
   756  07A5                     	;# 
   757  07A6                     	;# 
   758  07A7                     	;# 
   759  07A8                     	;# 
   760  07A9                     	;# 
   761  07AA                     	;# 
   762  07AB                     	;# 
   763  0FE4                     	;# 
   764  0FE5                     	;# 
   765  0FE6                     	;# 
   766  0FE7                     	;# 
   767  0FE8                     	;# 
   768  0FE9                     	;# 
   769  0FEA                     	;# 
   770  0FEB                     	;# 
   771  0FED                     	;# 
   772  0FEE                     	;# 
   773  0FEF                     	;# 
   774  0000                     	;# 
   775  0001                     	;# 
   776  0002                     	;# 
   777  0003                     	;# 
   778  0004                     	;# 
   779  0005                     	;# 
   780  0006                     	;# 
   781  0007                     	;# 
   782  0008                     	;# 
   783  0009                     	;# 
   784  000A                     	;# 
   785  000B                     	;# 
   786  000C                     	;# 
   787  000D                     	;# 
   788  000E                     	;# 
   789  000F                     	;# 
   790  0010                     	;# 
   791  0011                     	;# 
   792  0012                     	;# 
   793  0013                     	;# 
   794  0015                     	;# 
   795  0016                     	;# 
   796  0016                     	;# 
   797  0017                     	;# 
   798  0018                     	;# 
   799  0019                     	;# 
   800  001A                     	;# 
   801  001B                     	;# 
   802  001C                     	;# 
   803  001E                     	;# 
   804  001F                     	;# 
   805  008C                     	;# 
   806  008D                     	;# 
   807  008E                     	;# 
   808  008F                     	;# 
   809  0090                     	;# 
   810  0091                     	;# 
   811  0092                     	;# 
   812  0093                     	;# 
   813  0095                     	;# 
   814  0096                     	;# 
   815  0097                     	;# 
   816  0098                     	;# 
   817  0099                     	;# 
   818  009A                     	;# 
   819  009B                     	;# 
   820  009B                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009E                     	;# 
   824  010C                     	;# 
   825  010D                     	;# 
   826  010E                     	;# 
   827  010F                     	;# 
   828  0110                     	;# 
   829  0111                     	;# 
   830  0112                     	;# 
   831  0113                     	;# 
   832  0114                     	;# 
   833  0115                     	;# 
   834  0116                     	;# 
   835  0117                     	;# 
   836  0118                     	;# 
   837  0119                     	;# 
   838  011A                     	;# 
   839  011B                     	;# 
   840  011D                     	;# 
   841  018C                     	;# 
   842  018D                     	;# 
   843  018F                     	;# 
   844  0190                     	;# 
   845  0191                     	;# 
   846  0191                     	;# 
   847  0192                     	;# 
   848  0193                     	;# 
   849  0193                     	;# 
   850  0193                     	;# 
   851  0194                     	;# 
   852  0195                     	;# 
   853  0196                     	;# 
   854  0199                     	;# 
   855  019A                     	;# 
   856  019B                     	;# 
   857  019B                     	;# 
   858  019B                     	;# 
   859  019B                     	;# 
   860  019C                     	;# 
   861  019C                     	;# 
   862  019D                     	;# 
   863  019E                     	;# 
   864  019F                     	;# 
   865  020D                     	;# 
   866  0210                     	;# 
   867  0211                     	;# 
   868  0212                     	;# 
   869  0213                     	;# 
   870  0214                     	;# 
   871  0215                     	;# 
   872  0215                     	;# 
   873  0216                     	;# 
   874  0217                     	;# 
   875  0291                     	;# 
   876  0291                     	;# 
   877  0292                     	;# 
   878  0293                     	;# 
   879  0294                     	;# 
   880  0295                     	;# 
   881  0295                     	;# 
   882  0296                     	;# 
   883  0298                     	;# 
   884  0298                     	;# 
   885  0299                     	;# 
   886  029A                     	;# 
   887  029B                     	;# 
   888  029C                     	;# 
   889  029C                     	;# 
   890  029D                     	;# 
   891  029E                     	;# 
   892  029F                     	;# 
   893  0311                     	;# 
   894  0311                     	;# 
   895  0312                     	;# 
   896  0313                     	;# 
   897  0314                     	;# 
   898  0315                     	;# 
   899  0315                     	;# 
   900  0316                     	;# 
   901  0318                     	;# 
   902  0318                     	;# 
   903  0319                     	;# 
   904  031A                     	;# 
   905  031C                     	;# 
   906  031C                     	;# 
   907  031D                     	;# 
   908  031E                     	;# 
   909  0394                     	;# 
   910  0395                     	;# 
   911  0396                     	;# 
   912  0415                     	;# 
   913  0416                     	;# 
   914  0417                     	;# 
   915  041C                     	;# 
   916  041D                     	;# 
   917  041E                     	;# 
   918  0791                     	;# 
   919  0792                     	;# 
   920  0793                     	;# 
   921  0794                     	;# 
   922  0795                     	;# 
   923  0798                     	;# 
   924  0799                     	;# 
   925  079A                     	;# 
   926  07A0                     	;# 
   927  07A1                     	;# 
   928  07A2                     	;# 
   929  07A3                     	;# 
   930  07A4                     	;# 
   931  07A5                     	;# 
   932  07A6                     	;# 
   933  07A7                     	;# 
   934  07A8                     	;# 
   935  07A9                     	;# 
   936  07AA                     	;# 
   937  07AB                     	;# 
   938  0FE4                     	;# 
   939  0FE5                     	;# 
   940  0FE6                     	;# 
   941  0FE7                     	;# 
   942  0FE8                     	;# 
   943  0FE9                     	;# 
   944  0FEA                     	;# 
   945  0FEB                     	;# 
   946  0FED                     	;# 
   947  0FEE                     	;# 
   948  0FEF                     	;# 
   949  0000                     	;# 
   950  0001                     	;# 
   951  0002                     	;# 
   952  0003                     	;# 
   953  0004                     	;# 
   954  0005                     	;# 
   955  0006                     	;# 
   956  0007                     	;# 
   957  0008                     	;# 
   958  0009                     	;# 
   959  000A                     	;# 
   960  000B                     	;# 
   961  000C                     	;# 
   962  000D                     	;# 
   963  000E                     	;# 
   964  000F                     	;# 
   965  0010                     	;# 
   966  0011                     	;# 
   967  0012                     	;# 
   968  0013                     	;# 
   969  0015                     	;# 
   970  0016                     	;# 
   971  0016                     	;# 
   972  0017                     	;# 
   973  0018                     	;# 
   974  0019                     	;# 
   975  001A                     	;# 
   976  001B                     	;# 
   977  001C                     	;# 
   978  001E                     	;# 
   979  001F                     	;# 
   980  008C                     	;# 
   981  008D                     	;# 
   982  008E                     	;# 
   983  008F                     	;# 
   984  0090                     	;# 
   985  0091                     	;# 
   986  0092                     	;# 
   987  0093                     	;# 
   988  0095                     	;# 
   989  0096                     	;# 
   990  0097                     	;# 
   991  0098                     	;# 
   992  0099                     	;# 
   993  009A                     	;# 
   994  009B                     	;# 
   995  009B                     	;# 
   996  009C                     	;# 
   997  009D                     	;# 
   998  009E                     	;# 
   999  010C                     	;# 
  1000  010D                     	;# 
  1001  010E                     	;# 
  1002  010F                     	;# 
  1003  0110                     	;# 
  1004  0111                     	;# 
  1005  0112                     	;# 
  1006  0113                     	;# 
  1007  0114                     	;# 
  1008  0115                     	;# 
  1009  0116                     	;# 
  1010  0117                     	;# 
  1011  0118                     	;# 
  1012  0119                     	;# 
  1013  011A                     	;# 
  1014  011B                     	;# 
  1015  011D                     	;# 
  1016  018C                     	;# 
  1017  018D                     	;# 
  1018  018F                     	;# 
  1019  0190                     	;# 
  1020  0191                     	;# 
  1021  0191                     	;# 
  1022  0192                     	;# 
  1023  0193                     	;# 
  1024  0193                     	;# 
  1025  0193                     	;# 
  1026  0194                     	;# 
  1027  0195                     	;# 
  1028  0196                     	;# 
  1029  0199                     	;# 
  1030  019A                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019B                     	;# 
  1034  019B                     	;# 
  1035  019C                     	;# 
  1036  019C                     	;# 
  1037  019D                     	;# 
  1038  019E                     	;# 
  1039  019F                     	;# 
  1040  020D                     	;# 
  1041  0210                     	;# 
  1042  0211                     	;# 
  1043  0212                     	;# 
  1044  0213                     	;# 
  1045  0214                     	;# 
  1046  0215                     	;# 
  1047  0215                     	;# 
  1048  0216                     	;# 
  1049  0217                     	;# 
  1050  0291                     	;# 
  1051  0291                     	;# 
  1052  0292                     	;# 
  1053  0293                     	;# 
  1054  0294                     	;# 
  1055  0295                     	;# 
  1056  0295                     	;# 
  1057  0296                     	;# 
  1058  0298                     	;# 
  1059  0298                     	;# 
  1060  0299                     	;# 
  1061  029A                     	;# 
  1062  029B                     	;# 
  1063  029C                     	;# 
  1064  029C                     	;# 
  1065  029D                     	;# 
  1066  029E                     	;# 
  1067  029F                     	;# 
  1068  0311                     	;# 
  1069  0311                     	;# 
  1070  0312                     	;# 
  1071  0313                     	;# 
  1072  0314                     	;# 
  1073  0315                     	;# 
  1074  0315                     	;# 
  1075  0316                     	;# 
  1076  0318                     	;# 
  1077  0318                     	;# 
  1078  0319                     	;# 
  1079  031A                     	;# 
  1080  031C                     	;# 
  1081  031C                     	;# 
  1082  031D                     	;# 
  1083  031E                     	;# 
  1084  0394                     	;# 
  1085  0395                     	;# 
  1086  0396                     	;# 
  1087  0415                     	;# 
  1088  0416                     	;# 
  1089  0417                     	;# 
  1090  041C                     	;# 
  1091  041D                     	;# 
  1092  041E                     	;# 
  1093  0791                     	;# 
  1094  0792                     	;# 
  1095  0793                     	;# 
  1096  0794                     	;# 
  1097  0795                     	;# 
  1098  0798                     	;# 
  1099  0799                     	;# 
  1100  079A                     	;# 
  1101  07A0                     	;# 
  1102  07A1                     	;# 
  1103  07A2                     	;# 
  1104  07A3                     	;# 
  1105  07A4                     	;# 
  1106  07A5                     	;# 
  1107  07A6                     	;# 
  1108  07A7                     	;# 
  1109  07A8                     	;# 
  1110  07A9                     	;# 
  1111  07AA                     	;# 
  1112  07AB                     	;# 
  1113  0FE4                     	;# 
  1114  0FE5                     	;# 
  1115  0FE6                     	;# 
  1116  0FE7                     	;# 
  1117  0FE8                     	;# 
  1118  0FE9                     	;# 
  1119  0FEA                     	;# 
  1120  0FEB                     	;# 
  1121  0FED                     	;# 
  1122  0FEE                     	;# 
  1123  0FEF                     	;# 
  1124                           
  1125                           	psect	nvBANK0
  1126  0055                     __pnvBANK0:
  1127  0055                     _EUSART_ErrorHandler:
  1128  0055                     	ds	2
  1129  0057                     _EUSART_OverrunErrorHandler:
  1130  0057                     	ds	2
  1131  0059                     _EUSART_FramingErrorHandler:
  1132  0059                     	ds	2
  1133  005B                     _EUSART_RxDefaultInterruptHandler:
  1134  005B                     	ds	2
  1135  005D                     _EUSART_TxDefaultInterruptHandler:
  1136  005D                     	ds	2
  1137  005F                     _eusartTxBufferRemaining:
  1138  005F                     	ds	1
  1139  0011                     _PIR1bits	set	17
  1140  000B                     _INTCONbits	set	11
  1141  007E                     _RD6	set	126
  1142  007F                     _RD7	set	127
  1143  0068                     _RB0	set	104
  1144  0069                     _RB1	set	105
  1145  006A                     _RB2	set	106
  1146  006B                     _RB3	set	107
  1147  006C                     _RB4	set	108
  1148  006D                     _RB5	set	109
  1149  006E                     _RB6	set	110
  1150  006F                     _RB7	set	111
  1151  0072                     _RC2	set	114
  1152  0071                     _RC1	set	113
  1153  0070                     _RC0	set	112
  1154  0066                     _RA6	set	102
  1155  0082                     _RE2	set	130
  1156  0081                     _RE1	set	129
  1157  0080                     _RE0	set	128
  1158  0065                     _RA5	set	101
  1159  0063                     _RA3	set	99
  1160  0062                     _RA2	set	98
  1161  0061                     _RA1	set	97
  1162  0060                     _RA0	set	96
  1163  0078                     _RD0	set	120
  1164  0067                     _RA7	set	103
  1165  0064                     _RA4	set	100
  1166  0091                     _PIE1bits	set	145
  1167  0097                     _WDTCON	set	151
  1168  0098                     _OSCTUNE	set	152
  1169  0099                     _OSCCON	set	153
  1170  0095                     _OPTION_REGbits	set	149
  1171  008F                     _TRISD	set	143
  1172  008E                     _TRISC	set	142
  1173  008D                     _TRISB	set	141
  1174  008C                     _TRISA	set	140
  1175  0090                     _TRISE	set	144
  1176  0116                     _BORCON	set	278
  1177  011D                     _APFCON	set	285
  1178  010E                     _LATC	set	270
  1179  010D                     _LATB	set	269
  1180  010C                     _LATA	set	268
  1181  010F                     _LATD	set	271
  1182  0110                     _LATE	set	272
  1183  0199                     _RCREG	set	409
  1184  019D                     _RCSTAbits	set	413
  1185  019A                     _TXREG	set	410
  1186  019E                     _TXSTAbits	set	414
  1187  019C                     _SPBRGH	set	412
  1188  019B                     _SPBRGL	set	411
  1189  019E                     _TXSTA	set	414
  1190  019D                     _RCSTA	set	413
  1191  019F                     _BAUDCON	set	415
  1192  018C                     _ANSELA	set	396
  1193  0190                     _ANSELE	set	400
  1194  018D                     _ANSELB	set	397
  1195  018F                     _ANSELD	set	399
  1196  020D                     _WPUB	set	525
  1197  0210                     _WPUE	set	528
  1198                           
  1199                           	psect	cinit
  1200  002E                     start_initialization:	
  1201                           ; #config settings
  1202                           
  1203  002E                     __initialization:
  1204                           
  1205                           ; Clear objects allocated to COMMON
  1206  002E  01FA               	clrf	__pbssCOMMON& (0+127)
  1207  002F  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1208                           
  1209                           ; Clear objects allocated to BANK0
  1210  0030  3020               	movlw	low __pbssBANK0
  1211  0031  0084               	movwf	4
  1212  0032  3000               	movlw	high __pbssBANK0
  1213  0033  0085               	movwf	5
  1214  0034  301D               	movlw	29
  1215  0035  3185  25C8  3180   	fcall	clear_ram0
  1216                           
  1217                           ; Clear objects allocated to BANK1
  1218  0038  30A0               	movlw	low __pbssBANK1
  1219  0039  0084               	movwf	4
  1220  003A  3000               	movlw	high __pbssBANK1
  1221  003B  0085               	movwf	5
  1222  003C  3015               	movlw	21
  1223  003D  3185  25C8  3180   	fcall	clear_ram0
  1224  0040                     end_of_initialization:	
  1225                           ;End of C runtime variable initialization code
  1226                           
  1227  0040                     __end_of__initialization:
  1228  0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1229  0041  0020               	movlb	0
  1230  0042  3185  2D95         	ljmp	_main	;jump to C main() function
  1231                           
  1232                           	psect	bssCOMMON
  1233  007A                     __pbssCOMMON:
  1234  007A                     _eusartRxTail:
  1235  007A                     	ds	1
  1236  007B                     _eusartRxHead:
  1237  007B                     	ds	1
  1238                           
  1239                           	psect	bssBANK0
  1240  0020                     __pbssBANK0:
  1241  0020                     _eusartRxStatusBuffer:
  1242  0020                     	ds	8
  1243  0028                     _eusartRxBuffer:
  1244  0028                     	ds	8
  1245  0030                     _eusartTxBuffer:
  1246  0030                     	ds	8
  1247  0038                     _eusartRxLastError:
  1248  0038                     	ds	1
  1249  0039                     _eusartRxCount:
  1250  0039                     	ds	1
  1251  003A                     _eusartTxTail:
  1252  003A                     	ds	1
  1253  003B                     _eusartTxHead:
  1254  003B                     	ds	1
  1255  003C                     _receive_index:
  1256  003C                     	ds	1
  1257                           
  1258                           	psect	bssBANK1
  1259  00A0                     __pbssBANK1:
  1260  00A0                     _value:
  1261  00A0                     	ds	21
  1262                           
  1263                           	psect	clrtext
  1264  05C8                     clear_ram0:	
  1265                           ;	Called with FSR0 containing the base address, and
  1266                           ;	WREG with the size to clear
  1267                           
  1268  05C8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1269  05C9                     clrloop0:
  1270  05C9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1271  05CA  3101               	addfsr 0,1
  1272  05CB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1273  05CC  2DC9               	goto	clrloop0	;have we reached the end yet?
  1274  05CD  3400               	retlw	0	;all done for this memory range, return
  1275                           
  1276                           	psect	cstackCOMMON
  1277  0070                     __pcstackCOMMON:
  1278  0070                     ?_OSCILLATOR_Initialize:
  1279  0070                     ?_WDT_Initialize:	
  1280                           ; 1 bytes @ 0x0
  1281                           
  1282  0070                     ?_EUSART_Initialize:	
  1283                           ; 1 bytes @ 0x0
  1284                           
  1285  0070                     ?_EUSART_is_rx_ready:	
  1286                           ; 1 bytes @ 0x0
  1287                           
  1288  0070                     ?_receive_char_from_EUSART:	
  1289                           ; 1 bytes @ 0x0
  1290                           
  1291  0070                     ?_show:	
  1292                           ; 1 bytes @ 0x0
  1293                           
  1294  0070                     ?_off_digit:	
  1295                           ; 1 bytes @ 0x0
  1296                           
  1297  0070                     ?_on_digit:	
  1298                           ; 1 bytes @ 0x0
  1299                           
  1300  0070                     ?_EUSART_Read:	
  1301                           ; 1 bytes @ 0x0
  1302                           
  1303  0070                     ?_EUSART_Receive_ISR:	
  1304                           ; 1 bytes @ 0x0
  1305                           
  1306  0070                     ?_EUSART_Transmit_ISR:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ??_EUSART_Transmit_ISR:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ?_EUSART_DefaultErrorHandler:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ?_EUSART_RxDataHandler:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ??_EUSART_RxDataHandler:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ?_PIN_MANAGER_Initialize:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_SYSTEM_Initialize:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ?_main:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ?_INTERRUPT_InterruptManager:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345                           
  1346                           ; 1 bytes @ 0x0
  1347  0070                     	ds	1
  1348  0071                     ??_OSCILLATOR_Initialize:
  1349  0071                     ??_WDT_Initialize:	
  1350                           ; 1 bytes @ 0x1
  1351                           
  1352  0071                     ??_EUSART_is_rx_ready:	
  1353                           ; 1 bytes @ 0x1
  1354                           
  1355  0071                     ??_off_digit:	
  1356                           ; 1 bytes @ 0x1
  1357                           
  1358  0071                     ??_on_digit:	
  1359                           ; 1 bytes @ 0x1
  1360                           
  1361  0071                     ??_EUSART_Read:	
  1362                           ; 1 bytes @ 0x1
  1363                           
  1364  0071                     ?_EUSART_SetRxInterruptHandler:	
  1365                           ; 1 bytes @ 0x1
  1366                           
  1367  0071                     ??_EUSART_Receive_ISR:	
  1368                           ; 1 bytes @ 0x1
  1369                           
  1370  0071                     ?_EUSART_SetTxInterruptHandler:	
  1371                           ; 1 bytes @ 0x1
  1372                           
  1373  0071                     ?_EUSART_SetFramingErrorHandler:	
  1374                           ; 1 bytes @ 0x1
  1375                           
  1376  0071                     ?_EUSART_SetOverrunErrorHandler:	
  1377                           ; 1 bytes @ 0x1
  1378                           
  1379  0071                     ?_EUSART_SetErrorHandler:	
  1380                           ; 1 bytes @ 0x1
  1381                           
  1382  0071                     ??_EUSART_DefaultErrorHandler:	
  1383                           ; 1 bytes @ 0x1
  1384                           
  1385  0071                     ??_PIN_MANAGER_Initialize:	
  1386                           ; 1 bytes @ 0x1
  1387                           
  1388  0071                     ??_INTERRUPT_InterruptManager:	
  1389                           ; 1 bytes @ 0x1
  1390                           
  1391  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1392                           ; 1 bytes @ 0x1
  1393                           
  1394  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1395                           ; 2 bytes @ 0x1
  1396                           
  1397  0071                     EUSART_SetErrorHandler@interruptHandler:	
  1398                           ; 2 bytes @ 0x1
  1399                           
  1400  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  1401                           ; 2 bytes @ 0x1
  1402                           
  1403  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  1404                           ; 2 bytes @ 0x1
  1405                           
  1406                           
  1407                           ; 2 bytes @ 0x1
  1408  0071                     	ds	1
  1409  0072                     EUSART_Read@readValue:
  1410                           
  1411                           ; 1 bytes @ 0x2
  1412  0072                     	ds	1
  1413  0073                     ??_EUSART_Initialize:
  1414  0073                     ??_receive_char_from_EUSART:	
  1415                           ; 1 bytes @ 0x3
  1416                           
  1417  0073                     ??_EUSART_SetRxInterruptHandler:	
  1418                           ; 1 bytes @ 0x3
  1419                           
  1420  0073                     ??_EUSART_SetTxInterruptHandler:	
  1421                           ; 1 bytes @ 0x3
  1422                           
  1423  0073                     ??_EUSART_SetFramingErrorHandler:	
  1424                           ; 1 bytes @ 0x3
  1425                           
  1426  0073                     ??_EUSART_SetOverrunErrorHandler:	
  1427                           ; 1 bytes @ 0x3
  1428                           
  1429  0073                     ??_EUSART_SetErrorHandler:	
  1430                           ; 1 bytes @ 0x3
  1431                           
  1432  0073                     on_digit@digit:	
  1433                           ; 1 bytes @ 0x3
  1434                           
  1435  0073                     off_digit@digit:	
  1436                           ; 1 bytes @ 0x3
  1437                           
  1438                           
  1439                           ; 1 bytes @ 0x3
  1440  0073                     	ds	1
  1441  0074                     ?_show_character:
  1442  0074                     ??_SYSTEM_Initialize:	
  1443                           ; 1 bytes @ 0x4
  1444                           
  1445  0074                     show_character@character:	
  1446                           ; 1 bytes @ 0x4
  1447                           
  1448  0074                     receive_char_from_EUSART@receive_char:	
  1449                           ; 1 bytes @ 0x4
  1450                           
  1451                           
  1452                           ; 1 bytes @ 0x4
  1453  0074                     	ds	1
  1454  0075                     show_character@digit:
  1455  0075                     receive_char_from_EUSART@i:	
  1456                           ; 1 bytes @ 0x5
  1457                           
  1458                           
  1459                           ; 1 bytes @ 0x5
  1460  0075                     	ds	1
  1461  0076                     ??_show_character:
  1462                           
  1463                           ; 1 bytes @ 0x6
  1464  0076                     	ds	2
  1465  0078                     show_character@dot:
  1466                           
  1467                           ; 1 bytes @ 0x8
  1468  0078                     	ds	1
  1469  0079                     show_character@group:
  1470                           
  1471                           ; 1 bytes @ 0x9
  1472  0079                     	ds	1
  1473  007A                     ??_main:
  1474                           
  1475                           	psect	cstackBANK0
  1476  003D                     __pcstackBANK0:	
  1477                           ; 1 bytes @ 0xA
  1478                           
  1479  003D                     ??_show:
  1480                           
  1481                           ; 1 bytes @ 0x0
  1482  003D                     	ds	2
  1483  003F                     show@chars:
  1484                           
  1485                           ; 20 bytes @ 0x2
  1486  003F                     	ds	20
  1487  0053                     show@value_index:
  1488                           
  1489                           ; 1 bytes @ 0x16
  1490  0053                     	ds	1
  1491  0054                     show@chars_index:
  1492                           
  1493                           ; 1 bytes @ 0x17
  1494  0054                     	ds	1
  1495                           
  1496                           	psect	maintext
  1497  0595                     __pmaintext:	
  1498 ;;
  1499 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1500 ;;
  1501 ;; *************** function _main *****************
  1502 ;; Defined at:
  1503 ;;		line 98 in file "main.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : B1F/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels required when called:    7
  1523 ;; This function calls:
  1524 ;;		_EUSART_is_rx_ready
  1525 ;;		_SYSTEM_Initialize
  1526 ;;		_receive_char_from_EUSART
  1527 ;;		_show
  1528 ;; This function is called by:
  1529 ;;		Startup code after reset
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _main
  1535  0595                     _main:
  1536  0595                     l2585:	
  1537                           ;incstack = 0
  1538                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1539                           
  1540                           
  1541                           ;main.c: 101:   SYSTEM_Initialize();
  1542  0595  3185  25AB  3185   	fcall	_SYSTEM_Initialize
  1543  0598                     l2587:
  1544                           
  1545                           ;main.c: 107:   (INTCONbits.GIE = 1);
  1546  0598  178B               	bsf	11,7	;volatile
  1547  0599                     l2589:
  1548                           
  1549                           ;main.c: 110:   (INTCONbits.PEIE = 1);
  1550  0599  170B               	bsf	11,6	;volatile
  1551  059A                     l146:	
  1552                           ;main.c: 118:   while (1)
  1553                           
  1554                           
  1555                           ;main.c: 119:   {;main.c: 120:     if (EUSART_is_rx_ready())
  1556  059A  3185  25B8  3185   	fcall	_EUSART_is_rx_ready
  1557  059D  3A00               	xorlw	0
  1558  059E  1903               	skipnz
  1559  059F  2DA1               	goto	u571
  1560  05A0  2DA2               	goto	u570
  1561  05A1                     u571:
  1562  05A1  2DA5               	goto	l2593
  1563  05A2                     u570:
  1564  05A2                     l2591:
  1565                           
  1566                           ;main.c: 121:     {;main.c: 122:       receive_char_from_EUSART();
  1567  05A2  3184  24DD  3185   	fcall	_receive_char_from_EUSART
  1568  05A5                     l2593:
  1569                           
  1570                           ;main.c: 126:     show();
  1571  05A5  3182  22A1  3185   	fcall	_show
  1572  05A8  2D9A               	goto	l146
  1573  05A9  3180  282C         	ljmp	start
  1574  05AB                     __end_of_main:
  1575                           
  1576                           	psect	text1
  1577  02A1                     __ptext1:	
  1578 ;; *************** function _show *****************
  1579 ;; Defined at:
  1580 ;;		line 131 in file "main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  chars          20    2[BANK0 ] unsigned char [20]
  1585 ;;  chars_index     1   23[BANK0 ] unsigned char 
  1586 ;;  value_index     1   22[BANK0 ] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1597 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1598 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1599 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1600 ;;Total ram usage:       24 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    6
  1603 ;; This function calls:
  1604 ;;		_off_digit
  1605 ;;		_show_character
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _show
  1613  02A1                     _show:
  1614  02A1                     l2527:	
  1615                           ;incstack = 0
  1616                           ; Regs used in _show: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1617                           
  1618                           
  1619                           ;main.c: 133:   char chars[10 * 2];;main.c: 136:   unsigned char value_index = 0;
  1620  02A1  0020               	movlb	0	; select bank0
  1621  02A2  01D3               	clrf	show@value_index
  1622                           
  1623                           ;main.c: 137:   unsigned char chars_index = 0;
  1624  02A3  01D4               	clrf	show@chars_index
  1625                           
  1626                           ;main.c: 138:   while (chars_index < 10 * 2)
  1627  02A4  2AF8               	goto	l2547
  1628  02A5                     l2529:
  1629                           
  1630                           ;main.c: 139:   {;main.c: 140:     if (value[value_index] == '.')
  1631  02A5  0853               	movf	show@value_index,w
  1632  02A6  3EA0               	addlw	(low (_value| 0))& (0+255)
  1633  02A7  0086               	movwf	6
  1634  02A8  0187               	clrf	7
  1635  02A9  302E               	movlw	46
  1636  02AA  0601               	xorwf	1,w
  1637  02AB  1D03               	btfss	3,2
  1638  02AC  2AAE               	goto	u551
  1639  02AD  2AAF               	goto	u550
  1640  02AE                     u551:
  1641  02AE  2AD8               	goto	l2541
  1642  02AF                     u550:
  1643  02AF                     l2531:
  1644                           
  1645                           ;main.c: 141:     {;main.c: 142:       chars[chars_index++] = value[value_index++];
  1646  02AF  0853               	movf	show@value_index,w
  1647  02B0  3EA0               	addlw	(low (_value| 0))& (0+255)
  1648  02B1  0086               	movwf	6
  1649  02B2  0187               	clrf	7
  1650  02B3  0801               	movf	1,w
  1651  02B4  00BD               	movwf	??_show
  1652  02B5  0854               	movf	show@chars_index,w
  1653  02B6  3E3F               	addlw	(low (show@chars| 0))& (0+255)
  1654  02B7  0086               	movwf	6
  1655  02B8  0187               	clrf	7
  1656  02B9  083D               	movf	??_show,w
  1657  02BA  0081               	movwf	1
  1658  02BB                     l2533:
  1659  02BB  3001               	movlw	1
  1660  02BC  00BD               	movwf	??_show
  1661  02BD  083D               	movf	??_show,w
  1662  02BE  07D3               	addwf	show@value_index,f
  1663  02BF                     l2535:
  1664  02BF  3001               	movlw	1
  1665  02C0  00BD               	movwf	??_show
  1666  02C1  083D               	movf	??_show,w
  1667  02C2  07D4               	addwf	show@chars_index,f
  1668                           
  1669                           ;main.c: 143:       chars[chars_index++] = value[value_index++];
  1670  02C3  0853               	movf	show@value_index,w
  1671  02C4  3EA0               	addlw	(low (_value| 0))& (0+255)
  1672  02C5  0086               	movwf	6
  1673  02C6  0187               	clrf	7
  1674  02C7  0801               	movf	1,w
  1675  02C8  00BD               	movwf	??_show
  1676  02C9  0854               	movf	show@chars_index,w
  1677  02CA  3E3F               	addlw	(low (show@chars| 0))& (0+255)
  1678  02CB  0086               	movwf	6
  1679  02CC  0187               	clrf	7
  1680  02CD  083D               	movf	??_show,w
  1681  02CE  0081               	movwf	1
  1682  02CF                     l2537:
  1683  02CF  3001               	movlw	1
  1684  02D0  00BD               	movwf	??_show
  1685  02D1  083D               	movf	??_show,w
  1686  02D2  07D3               	addwf	show@value_index,f
  1687  02D3                     l2539:
  1688  02D3  3001               	movlw	1
  1689  02D4  00BD               	movwf	??_show
  1690  02D5  083D               	movf	??_show,w
  1691  02D6  07D4               	addwf	show@chars_index,f
  1692                           
  1693                           ;main.c: 144:     }
  1694  02D7  2AF8               	goto	l2547
  1695  02D8                     l2541:
  1696                           
  1697                           ;main.c: 146:     {;main.c: 147:       chars[chars_index++] = ' ';
  1698  02D8  3020               	movlw	32
  1699  02D9  00BD               	movwf	??_show
  1700  02DA  0854               	movf	show@chars_index,w
  1701  02DB  3E3F               	addlw	(low (show@chars| 0))& (0+255)
  1702  02DC  0086               	movwf	6
  1703  02DD  0187               	clrf	7
  1704  02DE  083D               	movf	??_show,w
  1705  02DF  0081               	movwf	1
  1706  02E0                     l2543:
  1707  02E0  3001               	movlw	1
  1708  02E1  00BD               	movwf	??_show
  1709  02E2  083D               	movf	??_show,w
  1710  02E3  07D4               	addwf	show@chars_index,f
  1711  02E4                     l2545:
  1712                           
  1713                           ;main.c: 148:       chars[chars_index++] = value[value_index++];
  1714  02E4  0853               	movf	show@value_index,w
  1715  02E5  3EA0               	addlw	(low (_value| 0))& (0+255)
  1716  02E6  0086               	movwf	6
  1717  02E7  0187               	clrf	7
  1718  02E8  0801               	movf	1,w
  1719  02E9  00BD               	movwf	??_show
  1720  02EA  0854               	movf	show@chars_index,w
  1721  02EB  3E3F               	addlw	(low (show@chars| 0))& (0+255)
  1722  02EC  0086               	movwf	6
  1723  02ED  0187               	clrf	7
  1724  02EE  083D               	movf	??_show,w
  1725  02EF  0081               	movwf	1
  1726  02F0  3001               	movlw	1
  1727  02F1  00BD               	movwf	??_show
  1728  02F2  083D               	movf	??_show,w
  1729  02F3  07D3               	addwf	show@value_index,f
  1730  02F4  3001               	movlw	1
  1731  02F5  00BD               	movwf	??_show
  1732  02F6  083D               	movf	??_show,w
  1733  02F7  07D4               	addwf	show@chars_index,f
  1734  02F8                     l2547:
  1735                           
  1736                           ;main.c: 138:   while (chars_index < 10 * 2)
  1737  02F8  3014               	movlw	20
  1738  02F9  0254               	subwf	show@chars_index,w
  1739  02FA  1C03               	skipc
  1740  02FB  2AFD               	goto	u561
  1741  02FC  2AFE               	goto	u560
  1742  02FD                     u561:
  1743  02FD  2AA5               	goto	l2529
  1744  02FE                     u560:
  1745  02FE                     l2549:
  1746                           
  1747                           ;main.c: 153:   show_character(chars[0], chars[1], 0);
  1748  02FE  0840               	movf	show@chars+1,w
  1749  02FF  00BD               	movwf	??_show
  1750  0300  083D               	movf	??_show,w
  1751  0301  00F4               	movwf	show_character@character
  1752  0302  01F5               	clrf	show_character@digit
  1753  0303  083F               	movf	show@chars,w
  1754  0304  3180  2044  3182   	fcall	_show_character
  1755                           
  1756                           ;main.c: 154:   show_character(chars[8], chars[9], 4);
  1757  0307  0020               	movlb	0	; select bank0
  1758  0308  0848               	movf	show@chars+9,w
  1759  0309  00BD               	movwf	??_show
  1760  030A  083D               	movf	??_show,w
  1761  030B  00F4               	movwf	show_character@character
  1762  030C  3004               	movlw	4
  1763  030D  00BE               	movwf	??_show+1
  1764  030E  083E               	movf	??_show+1,w
  1765  030F  00F5               	movwf	show_character@digit
  1766  0310  0847               	movf	show@chars+8,w
  1767  0311  3180  2044  3182   	fcall	_show_character
  1768                           
  1769                           ;main.c: 155:   show_character(chars[16], chars[17], 8);
  1770  0314  0020               	movlb	0	; select bank0
  1771  0315  0850               	movf	show@chars+17,w
  1772  0316  00BD               	movwf	??_show
  1773  0317  083D               	movf	??_show,w
  1774  0318  00F4               	movwf	show_character@character
  1775  0319  3008               	movlw	8
  1776  031A  00BE               	movwf	??_show+1
  1777  031B  083E               	movf	??_show+1,w
  1778  031C  00F5               	movwf	show_character@digit
  1779  031D  084F               	movf	show@chars+16,w
  1780  031E  3180  2044  3182   	fcall	_show_character
  1781  0321                     l2551:
  1782                           
  1783                           ;main.c: 156:   _delay((unsigned long)((800)*(8000000/4000000.0)));
  1784  0321  30E4               	movlw	228
  1785  0322                     u587:
  1786  0322  3200               	nop2
  1787  0323  3200               	nop2
  1788  0324  0B89               	decfsz	9,f
  1789  0325  2B22               	goto	u587
  1790  0326  3200               	nop2
  1791  0327  3200               	nop2
  1792  0328                     l2553:
  1793                           
  1794                           ;main.c: 157:   off_digit(0);
  1795  0328  3000               	movlw	0
  1796  0329  3184  241A  3182   	fcall	_off_digit
  1797  032C                     l2555:
  1798                           
  1799                           ;main.c: 158:   off_digit(4);
  1800  032C  3004               	movlw	4
  1801  032D  3184  241A  3182   	fcall	_off_digit
  1802  0330                     l2557:
  1803                           
  1804                           ;main.c: 159:   off_digit(8);
  1805  0330  3008               	movlw	8
  1806  0331  3184  241A  3182   	fcall	_off_digit
  1807                           
  1808                           ;main.c: 160:   _delay((unsigned long)((200)*(8000000/4000000.0)));
  1809  0334  3085               	movlw	133
  1810  0335                     u597:
  1811  0335  0B89               	decfsz	9,f
  1812  0336  2B35               	goto	u597
  1813  0337  0000               	nop
  1814  0338                     l2559:
  1815                           
  1816                           ;main.c: 162:   show_character(chars[2], chars[3], 1);
  1817  0338  0020               	movlb	0	; select bank0
  1818  0339  0842               	movf	show@chars+3,w
  1819  033A  00BD               	movwf	??_show
  1820  033B  083D               	movf	??_show,w
  1821  033C  00F4               	movwf	show_character@character
  1822  033D  01F5               	clrf	show_character@digit
  1823  033E  0AF5               	incf	show_character@digit,f
  1824  033F  0841               	movf	show@chars+2,w
  1825  0340  3180  2044  3182   	fcall	_show_character
  1826  0343                     l2561:
  1827                           
  1828                           ;main.c: 163:   show_character(chars[10], chars[11], 5);
  1829  0343  0020               	movlb	0	; select bank0
  1830  0344  084A               	movf	show@chars+11,w
  1831  0345  00BD               	movwf	??_show
  1832  0346  083D               	movf	??_show,w
  1833  0347  00F4               	movwf	show_character@character
  1834  0348  3005               	movlw	5
  1835  0349  00BE               	movwf	??_show+1
  1836  034A  083E               	movf	??_show+1,w
  1837  034B  00F5               	movwf	show_character@digit
  1838  034C  0849               	movf	show@chars+10,w
  1839  034D  3180  2044  3182   	fcall	_show_character
  1840  0350                     l2563:
  1841                           
  1842                           ;main.c: 164:   show_character(chars[18], chars[19], 9);
  1843  0350  0020               	movlb	0	; select bank0
  1844  0351  0852               	movf	show@chars+19,w
  1845  0352  00BD               	movwf	??_show
  1846  0353  083D               	movf	??_show,w
  1847  0354  00F4               	movwf	show_character@character
  1848  0355  3009               	movlw	9
  1849  0356  00BE               	movwf	??_show+1
  1850  0357  083E               	movf	??_show+1,w
  1851  0358  00F5               	movwf	show_character@digit
  1852  0359  0851               	movf	show@chars+18,w
  1853  035A  3180  2044  3182   	fcall	_show_character
  1854  035D                     l2565:
  1855                           
  1856                           ;main.c: 165:   _delay((unsigned long)((800)*(8000000/4000000.0)));
  1857  035D  30E4               	movlw	228
  1858  035E                     u607:
  1859  035E  3200               	nop2
  1860  035F  3200               	nop2
  1861  0360  0B89               	decfsz	9,f
  1862  0361  2B5E               	goto	u607
  1863  0362  3200               	nop2
  1864  0363  3200               	nop2
  1865                           
  1866                           ;main.c: 166:   off_digit(1);
  1867  0364  3001               	movlw	1
  1868  0365  3184  241A  3182   	fcall	_off_digit
  1869                           
  1870                           ;main.c: 167:   off_digit(5);
  1871  0368  3005               	movlw	5
  1872  0369  3184  241A  3182   	fcall	_off_digit
  1873                           
  1874                           ;main.c: 168:   off_digit(9);
  1875  036C  3009               	movlw	9
  1876  036D  3184  241A  3182   	fcall	_off_digit
  1877  0370                     l2567:
  1878                           
  1879                           ;main.c: 169:   _delay((unsigned long)((200)*(8000000/4000000.0)));
  1880  0370  3085               	movlw	133
  1881  0371                     u617:
  1882  0371  0B89               	decfsz	9,f
  1883  0372  2B71               	goto	u617
  1884  0373  0000               	nop
  1885  0374                     l2569:
  1886                           
  1887                           ;main.c: 171:   show_character(chars[4], chars[5], 2);
  1888  0374  0020               	movlb	0	; select bank0
  1889  0375  0844               	movf	show@chars+5,w
  1890  0376  00BD               	movwf	??_show
  1891  0377  083D               	movf	??_show,w
  1892  0378  00F4               	movwf	show_character@character
  1893  0379  3002               	movlw	2
  1894  037A  00BE               	movwf	??_show+1
  1895  037B  083E               	movf	??_show+1,w
  1896  037C  00F5               	movwf	show_character@digit
  1897  037D  0843               	movf	show@chars+4,w
  1898  037E  3180  2044  3182   	fcall	_show_character
  1899  0381                     l2571:
  1900                           
  1901                           ;main.c: 172:   show_character(chars[12], chars[13], 6);
  1902  0381  0020               	movlb	0	; select bank0
  1903  0382  084C               	movf	show@chars+13,w
  1904  0383  00BD               	movwf	??_show
  1905  0384  083D               	movf	??_show,w
  1906  0385  00F4               	movwf	show_character@character
  1907  0386  3006               	movlw	6
  1908  0387  00BE               	movwf	??_show+1
  1909  0388  083E               	movf	??_show+1,w
  1910  0389  00F5               	movwf	show_character@digit
  1911  038A  084B               	movf	show@chars+12,w
  1912  038B  3180  2044  3182   	fcall	_show_character
  1913  038E                     l2573:
  1914                           
  1915                           ;main.c: 173:   _delay((unsigned long)((800)*(8000000/4000000.0)));
  1916  038E  30E4               	movlw	228
  1917  038F                     u627:
  1918  038F  3200               	nop2
  1919  0390  3200               	nop2
  1920  0391  0B89               	decfsz	9,f
  1921  0392  2B8F               	goto	u627
  1922  0393  3200               	nop2
  1923  0394  3200               	nop2
  1924                           
  1925                           ;main.c: 174:   off_digit(2);
  1926  0395  3002               	movlw	2
  1927  0396  3184  241A  3182   	fcall	_off_digit
  1928                           
  1929                           ;main.c: 175:   off_digit(6);
  1930  0399  3006               	movlw	6
  1931  039A  3184  241A  3182   	fcall	_off_digit
  1932  039D                     l2575:
  1933                           
  1934                           ;main.c: 176:   _delay((unsigned long)((200)*(8000000/4000000.0)));
  1935  039D  3085               	movlw	133
  1936  039E                     u637:
  1937  039E  0B89               	decfsz	9,f
  1938  039F  2B9E               	goto	u637
  1939  03A0  0000               	nop
  1940  03A1                     l2577:
  1941                           
  1942                           ;main.c: 178:   show_character(chars[6], chars[7], 3);
  1943  03A1  0020               	movlb	0	; select bank0
  1944  03A2  0846               	movf	show@chars+7,w
  1945  03A3  00BD               	movwf	??_show
  1946  03A4  083D               	movf	??_show,w
  1947  03A5  00F4               	movwf	show_character@character
  1948  03A6  3003               	movlw	3
  1949  03A7  00BE               	movwf	??_show+1
  1950  03A8  083E               	movf	??_show+1,w
  1951  03A9  00F5               	movwf	show_character@digit
  1952  03AA  0845               	movf	show@chars+6,w
  1953  03AB  3180  2044  3182   	fcall	_show_character
  1954  03AE                     l2579:
  1955                           
  1956                           ;main.c: 179:   show_character(chars[14], chars[15], 7);
  1957  03AE  0020               	movlb	0	; select bank0
  1958  03AF  084E               	movf	show@chars+15,w
  1959  03B0  00BD               	movwf	??_show
  1960  03B1  083D               	movf	??_show,w
  1961  03B2  00F4               	movwf	show_character@character
  1962  03B3  3007               	movlw	7
  1963  03B4  00BE               	movwf	??_show+1
  1964  03B5  083E               	movf	??_show+1,w
  1965  03B6  00F5               	movwf	show_character@digit
  1966  03B7  084D               	movf	show@chars+14,w
  1967  03B8  3180  2044  3182   	fcall	_show_character
  1968  03BB                     l2581:
  1969                           
  1970                           ;main.c: 180:   _delay((unsigned long)((800)*(8000000/4000000.0)));
  1971  03BB  30E4               	movlw	228
  1972  03BC                     u647:
  1973  03BC  3200               	nop2
  1974  03BD  3200               	nop2
  1975  03BE  0B89               	decfsz	9,f
  1976  03BF  2BBC               	goto	u647
  1977  03C0  3200               	nop2
  1978  03C1  3200               	nop2
  1979                           
  1980                           ;main.c: 181:   off_digit(3);
  1981  03C2  3003               	movlw	3
  1982  03C3  3184  241A  3182   	fcall	_off_digit
  1983                           
  1984                           ;main.c: 182:   off_digit(7);
  1985  03C6  3007               	movlw	7
  1986  03C7  3184  241A  3182   	fcall	_off_digit
  1987  03CA                     l2583:
  1988                           
  1989                           ;main.c: 183:   _delay((unsigned long)((200)*(8000000/4000000.0)));
  1990  03CA  3085               	movlw	133
  1991  03CB                     u657:
  1992  03CB  0B89               	decfsz	9,f
  1993  03CC  2BCB               	goto	u657
  1994  03CD  0000               	nop
  1995  03CE                     l158:
  1996  03CE  0008               	return
  1997  03CF                     __end_of_show:
  1998                           
  1999                           	psect	text2
  2000  0044                     __ptext2:	
  2001 ;; *************** function _show_character *****************
  2002 ;; Defined at:
  2003 ;;		line 192 in file "main.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  dot             1    wreg     unsigned char 
  2006 ;;  character       1    4[COMMON] unsigned char 
  2007 ;;  digit           1    5[COMMON] char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  dot             1    8[COMMON] unsigned char 
  2010 ;;  group           1    9[COMMON] enum E3000
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2023 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2024 ;;Total ram usage:        6 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    5
  2027 ;; This function calls:
  2028 ;;		_on_digit
  2029 ;; This function is called by:
  2030 ;;		_show
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _show_character
  2036  0044                     _show_character:
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _show_character: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2040                           ;show_character@dot stored from wreg
  2041  0044  00F8               	movwf	show_character@dot
  2042  0045                     l1885:
  2043                           
  2044                           ;main.c: 192: void show_character(char dot, char character, signed char digit);main.c: 1
      +                          93: {;main.c: 195:   NIXIE_GLOUP group;;main.c: 196:   if (digit < 4)
  2045  0045  0875               	movf	show_character@digit,w
  2046  0046  3A80               	xorlw	128
  2047  0047  3E7C               	addlw	-132
  2048  0048  1803               	skipnc
  2049  0049  284B               	goto	u291
  2050  004A  284C               	goto	u290
  2051  004B                     u291:
  2052  004B  284E               	goto	l1889
  2053  004C                     u290:
  2054  004C                     l1887:
  2055                           
  2056                           ;main.c: 197:   {;main.c: 198:     group = UPPER;
  2057  004C  01F9               	clrf	show_character@group
  2058                           
  2059                           ;main.c: 199:   }
  2060  004D  285C               	goto	l1895
  2061  004E                     l1889:
  2062  004E  0875               	movf	show_character@digit,w
  2063  004F  3A80               	xorlw	128
  2064  0050  3E78               	addlw	-136
  2065  0051  1803               	skipnc
  2066  0052  2854               	goto	u301
  2067  0053  2855               	goto	u300
  2068  0054                     u301:
  2069  0054  2858               	goto	l1893
  2070  0055                     u300:
  2071  0055                     l1891:
  2072                           
  2073                           ;main.c: 201:   {;main.c: 202:     group = MIDDLE;
  2074  0055  01F9               	clrf	show_character@group
  2075  0056  0AF9               	incf	show_character@group,f
  2076                           
  2077                           ;main.c: 203:   }
  2078  0057  285C               	goto	l1895
  2079  0058                     l1893:
  2080                           
  2081                           ;main.c: 205:   {;main.c: 206:     group = LOWER;
  2082  0058  3002               	movlw	2
  2083  0059  00F6               	movwf	??_show_character
  2084  005A  0876               	movf	??_show_character,w
  2085  005B  00F9               	movwf	show_character@group
  2086  005C                     l1895:
  2087                           
  2088                           ;main.c: 210:   if (dot == '.')
  2089  005C  302E               	movlw	46
  2090  005D  0678               	xorwf	show_character@dot,w
  2091  005E  1D03               	btfss	3,2
  2092  005F  2861               	goto	u311
  2093  0060  2862               	goto	u310
  2094  0061                     u311:
  2095  0061  2888               	goto	l1905
  2096  0062                     u310:
  2097  0062  286C               	goto	l1901
  2098  0063                     l167:	
  2099                           ;main.c: 213:     {;main.c: 214:     case UPPER:
  2100                           
  2101                           
  2102                           ;main.c: 215:       RA4 = 1;
  2103  0063  0020               	movlb	0	; select bank0
  2104  0064  160C               	bsf	12,4	;volatile
  2105                           
  2106                           ;main.c: 216:       break;
  2107  0065  2A3B               	goto	l1953
  2108  0066                     l169:	
  2109                           ;main.c: 217:     case MIDDLE:
  2110                           
  2111                           
  2112                           ;main.c: 218:       RA7 = 1;
  2113  0066  0020               	movlb	0	; select bank0
  2114  0067  178C               	bsf	12,7	;volatile
  2115                           
  2116                           ;main.c: 219:       break;
  2117  0068  2A3B               	goto	l1953
  2118  0069                     l170:	
  2119                           ;main.c: 220:     case LOWER:
  2120                           
  2121                           
  2122                           ;main.c: 221:       RD0 = 1;
  2123  0069  0020               	movlb	0	; select bank0
  2124  006A  140F               	bsf	15,0	;volatile
  2125  006B  2A3B               	goto	l1953
  2126  006C                     l1901:
  2127  006C  0879               	movf	show_character@group,w
  2128  006D  00F6               	movwf	??_show_character
  2129  006E  01F7               	clrf	??_show_character+1
  2130                           
  2131                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2132                           ; Switch size 1, requested type "simple"
  2133                           ; Number of cases is 1, Range of values is 0 to 0
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; simple_byte            4     3 (average)
  2137                           ; direct_byte            8     6 (fixed)
  2138                           ; jumptable            260     6 (fixed)
  2139                           ;	Chosen strategy is simple_byte
  2140  006F  0877               	movf	??_show_character+1,w
  2141  0070  3A00               	xorlw	0	; case 0
  2142  0071  1903               	skipnz
  2143  0072  2874               	goto	l2915
  2144  0073  289B               	goto	l172
  2145  0074                     l2915:
  2146                           
  2147                           ; Switch size 1, requested type "simple"
  2148                           ; Number of cases is 3, Range of values is 0 to 2
  2149                           ; switch strategies available:
  2150                           ; Name         Instructions Cycles
  2151                           ; simple_byte           10     6 (average)
  2152                           ; direct_byte           12     6 (fixed)
  2153                           ; jumptable            260     6 (fixed)
  2154                           ;	Chosen strategy is simple_byte
  2155  0074  0876               	movf	??_show_character,w
  2156  0075  3A00               	xorlw	0	; case 0
  2157  0076  1903               	skipnz
  2158  0077  2863               	goto	l167
  2159  0078  3A01               	xorlw	1	; case 1
  2160  0079  1903               	skipnz
  2161  007A  2866               	goto	l169
  2162  007B  3A03               	xorlw	3	; case 2
  2163  007C  1903               	skipnz
  2164  007D  2869               	goto	l170
  2165  007E  289B               	goto	l172
  2166  007F                     l174:	
  2167                           ;main.c: 229:     {;main.c: 230:     case UPPER:
  2168                           
  2169                           
  2170                           ;main.c: 231:       RA4 = 0;
  2171  007F  0020               	movlb	0	; select bank0
  2172  0080  120C               	bcf	12,4	;volatile
  2173                           
  2174                           ;main.c: 232:       break;
  2175  0081  2A3B               	goto	l1953
  2176  0082                     l176:	
  2177                           ;main.c: 233:     case MIDDLE:
  2178                           
  2179                           
  2180                           ;main.c: 234:       RA7 = 0;
  2181  0082  0020               	movlb	0	; select bank0
  2182  0083  138C               	bcf	12,7	;volatile
  2183                           
  2184                           ;main.c: 235:       break;
  2185  0084  2A3B               	goto	l1953
  2186  0085                     l177:	
  2187                           ;main.c: 236:     case LOWER:
  2188                           
  2189                           
  2190                           ;main.c: 237:       RD0 = 0;
  2191  0085  0020               	movlb	0	; select bank0
  2192  0086  100F               	bcf	15,0	;volatile
  2193  0087  2A3B               	goto	l1953
  2194  0088                     l1905:
  2195  0088  0879               	movf	show_character@group,w
  2196  0089  00F6               	movwf	??_show_character
  2197  008A  01F7               	clrf	??_show_character+1
  2198                           
  2199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2200                           ; Switch size 1, requested type "simple"
  2201                           ; Number of cases is 1, Range of values is 0 to 0
  2202                           ; switch strategies available:
  2203                           ; Name         Instructions Cycles
  2204                           ; simple_byte            4     3 (average)
  2205                           ; direct_byte            8     6 (fixed)
  2206                           ; jumptable            260     6 (fixed)
  2207                           ;	Chosen strategy is simple_byte
  2208  008B  0877               	movf	??_show_character+1,w
  2209  008C  3A00               	xorlw	0	; case 0
  2210  008D  1903               	skipnz
  2211  008E  2890               	goto	l2917
  2212  008F  289B               	goto	l172
  2213  0090                     l2917:
  2214                           
  2215                           ; Switch size 1, requested type "simple"
  2216                           ; Number of cases is 3, Range of values is 0 to 2
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte           10     6 (average)
  2220                           ; direct_byte           12     6 (fixed)
  2221                           ; jumptable            260     6 (fixed)
  2222                           ;	Chosen strategy is simple_byte
  2223  0090  0876               	movf	??_show_character,w
  2224  0091  3A00               	xorlw	0	; case 0
  2225  0092  1903               	skipnz
  2226  0093  287F               	goto	l174
  2227  0094  3A01               	xorlw	1	; case 1
  2228  0095  1903               	skipnz
  2229  0096  2882               	goto	l176
  2230  0097  3A03               	xorlw	3	; case 2
  2231  0098  1903               	skipnz
  2232  0099  2885               	goto	l177
  2233  009A  289B               	goto	l172
  2234  009B                     l172:	
  2235                           ;main.c: 241:   }
  2236                           
  2237                           
  2238                           ;main.c: 244:   switch (character)
  2239  009B  2A3B               	goto	l1953
  2240  009C                     l182:	
  2241                           ;main.c: 248:   case 'W':
  2242                           
  2243                           
  2244                           ;main.c: 250:     switch (group)
  2245  009C  28AF               	goto	l1909
  2246  009D                     l184:	
  2247                           ;main.c: 251:     {;main.c: 252:     case UPPER:
  2248                           
  2249                           
  2250                           ;main.c: 253:       RA0 = 0;
  2251  009D  0020               	movlb	0	; select bank0
  2252  009E  100C               	bcf	12,0	;volatile
  2253                           
  2254                           ;main.c: 254:       RA1 = 0;
  2255  009F  108C               	bcf	12,1	;volatile
  2256                           
  2257                           ;main.c: 255:       RA2 = 0;
  2258  00A0  110C               	bcf	12,2	;volatile
  2259                           
  2260                           ;main.c: 256:       RA3 = 0;
  2261  00A1  118C               	bcf	12,3	;volatile
  2262                           
  2263                           ;main.c: 257:       break;
  2264  00A2  2A9C               	goto	l1955
  2265  00A3                     l186:	
  2266                           ;main.c: 259:     case MIDDLE:
  2267                           
  2268                           
  2269                           ;main.c: 260:       RA5 = 0;
  2270  00A3  0020               	movlb	0	; select bank0
  2271  00A4  128C               	bcf	12,5	;volatile
  2272                           
  2273                           ;main.c: 261:       RE0 = 0;
  2274  00A5  1010               	bcf	16,0	;volatile
  2275                           
  2276                           ;main.c: 262:       RE1 = 0;
  2277  00A6  1090               	bcf	16,1	;volatile
  2278                           
  2279                           ;main.c: 263:       RE2 = 0;
  2280  00A7  1110               	bcf	16,2	;volatile
  2281                           
  2282                           ;main.c: 264:       break;
  2283  00A8  2A9C               	goto	l1955
  2284  00A9                     l187:	
  2285                           ;main.c: 266:     case LOWER:
  2286                           
  2287                           
  2288                           ;main.c: 267:       RA6 = 0;
  2289  00A9  0020               	movlb	0	; select bank0
  2290  00AA  130C               	bcf	12,6	;volatile
  2291                           
  2292                           ;main.c: 268:       RC0 = 0;
  2293  00AB  100E               	bcf	14,0	;volatile
  2294                           
  2295                           ;main.c: 269:       RC1 = 0;
  2296  00AC  108E               	bcf	14,1	;volatile
  2297                           
  2298                           ;main.c: 270:       RC2 = 0;
  2299  00AD  110E               	bcf	14,2	;volatile
  2300                           
  2301                           ;main.c: 271:       break;
  2302  00AE  2A9C               	goto	l1955
  2303  00AF                     l1909:
  2304  00AF  0879               	movf	show_character@group,w
  2305  00B0  00F6               	movwf	??_show_character
  2306  00B1  01F7               	clrf	??_show_character+1
  2307                           
  2308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2309                           ; Switch size 1, requested type "simple"
  2310                           ; Number of cases is 1, Range of values is 0 to 0
  2311                           ; switch strategies available:
  2312                           ; Name         Instructions Cycles
  2313                           ; simple_byte            4     3 (average)
  2314                           ; direct_byte            8     6 (fixed)
  2315                           ; jumptable            260     6 (fixed)
  2316                           ;	Chosen strategy is simple_byte
  2317  00B2  0877               	movf	??_show_character+1,w
  2318  00B3  3A00               	xorlw	0	; case 0
  2319  00B4  1903               	skipnz
  2320  00B5  28B7               	goto	l2919
  2321  00B6  2A9C               	goto	l1955
  2322  00B7                     l2919:
  2323                           
  2324                           ; Switch size 1, requested type "simple"
  2325                           ; Number of cases is 3, Range of values is 0 to 2
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte           10     6 (average)
  2329                           ; direct_byte           12     6 (fixed)
  2330                           ; jumptable            260     6 (fixed)
  2331                           ;	Chosen strategy is simple_byte
  2332  00B7  0876               	movf	??_show_character,w
  2333  00B8  3A00               	xorlw	0	; case 0
  2334  00B9  1903               	skipnz
  2335  00BA  289D               	goto	l184
  2336  00BB  3A01               	xorlw	1	; case 1
  2337  00BC  1903               	skipnz
  2338  00BD  28A3               	goto	l186
  2339  00BE  3A03               	xorlw	3	; case 2
  2340  00BF  1903               	skipnz
  2341  00C0  28A9               	goto	l187
  2342  00C1  2A9C               	goto	l1955
  2343  00C2                     l192:	
  2344                           ;main.c: 280:   case 'A':
  2345                           
  2346                           
  2347                           ;main.c: 281:     switch (group)
  2348  00C2  28D5               	goto	l1913
  2349  00C3                     l194:	
  2350                           ;main.c: 282:     {;main.c: 283:     case UPPER:
  2351                           
  2352                           
  2353                           ;main.c: 284:       RA0 = 0;
  2354  00C3  0020               	movlb	0	; select bank0
  2355  00C4  100C               	bcf	12,0	;volatile
  2356                           
  2357                           ;main.c: 285:       RA1 = 0;
  2358  00C5  108C               	bcf	12,1	;volatile
  2359                           
  2360                           ;main.c: 286:       RA2 = 0;
  2361  00C6  110C               	bcf	12,2	;volatile
  2362                           
  2363                           ;main.c: 287:       RA3 = 1;
  2364  00C7  158C               	bsf	12,3	;volatile
  2365                           
  2366                           ;main.c: 288:       break;
  2367  00C8  2A9C               	goto	l1955
  2368  00C9                     l196:	
  2369                           ;main.c: 290:     case MIDDLE:
  2370                           
  2371                           
  2372                           ;main.c: 291:       RA5 = 0;
  2373  00C9  0020               	movlb	0	; select bank0
  2374  00CA  128C               	bcf	12,5	;volatile
  2375                           
  2376                           ;main.c: 292:       RE0 = 0;
  2377  00CB  1010               	bcf	16,0	;volatile
  2378                           
  2379                           ;main.c: 293:       RE1 = 0;
  2380  00CC  1090               	bcf	16,1	;volatile
  2381                           
  2382                           ;main.c: 294:       RE2 = 1;
  2383  00CD  1510               	bsf	16,2	;volatile
  2384                           
  2385                           ;main.c: 295:       break;
  2386  00CE  2A9C               	goto	l1955
  2387  00CF                     l197:	
  2388                           ;main.c: 297:     case LOWER:
  2389                           
  2390                           
  2391                           ;main.c: 298:       RA6 = 0;
  2392  00CF  0020               	movlb	0	; select bank0
  2393  00D0  130C               	bcf	12,6	;volatile
  2394                           
  2395                           ;main.c: 299:       RC0 = 0;
  2396  00D1  100E               	bcf	14,0	;volatile
  2397                           
  2398                           ;main.c: 300:       RC1 = 0;
  2399  00D2  108E               	bcf	14,1	;volatile
  2400                           
  2401                           ;main.c: 301:       RC2 = 1;
  2402  00D3  150E               	bsf	14,2	;volatile
  2403                           
  2404                           ;main.c: 302:       break;
  2405  00D4  2A9C               	goto	l1955
  2406  00D5                     l1913:
  2407  00D5  0879               	movf	show_character@group,w
  2408  00D6  00F6               	movwf	??_show_character
  2409  00D7  01F7               	clrf	??_show_character+1
  2410                           
  2411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2412                           ; Switch size 1, requested type "simple"
  2413                           ; Number of cases is 1, Range of values is 0 to 0
  2414                           ; switch strategies available:
  2415                           ; Name         Instructions Cycles
  2416                           ; simple_byte            4     3 (average)
  2417                           ; direct_byte            8     6 (fixed)
  2418                           ; jumptable            260     6 (fixed)
  2419                           ;	Chosen strategy is simple_byte
  2420  00D8  0877               	movf	??_show_character+1,w
  2421  00D9  3A00               	xorlw	0	; case 0
  2422  00DA  1903               	skipnz
  2423  00DB  28DD               	goto	l2921
  2424  00DC  2A9C               	goto	l1955
  2425  00DD                     l2921:
  2426                           
  2427                           ; Switch size 1, requested type "simple"
  2428                           ; Number of cases is 3, Range of values is 0 to 2
  2429                           ; switch strategies available:
  2430                           ; Name         Instructions Cycles
  2431                           ; simple_byte           10     6 (average)
  2432                           ; direct_byte           12     6 (fixed)
  2433                           ; jumptable            260     6 (fixed)
  2434                           ;	Chosen strategy is simple_byte
  2435  00DD  0876               	movf	??_show_character,w
  2436  00DE  3A00               	xorlw	0	; case 0
  2437  00DF  1903               	skipnz
  2438  00E0  28C3               	goto	l194
  2439  00E1  3A01               	xorlw	1	; case 1
  2440  00E2  1903               	skipnz
  2441  00E3  28C9               	goto	l196
  2442  00E4  3A03               	xorlw	3	; case 2
  2443  00E5  1903               	skipnz
  2444  00E6  28CF               	goto	l197
  2445  00E7  2A9C               	goto	l1955
  2446  00E8                     l201:	
  2447                           ;main.c: 311:   case 'O':
  2448                           
  2449                           
  2450                           ;main.c: 312:     switch (group)
  2451  00E8  28FB               	goto	l1917
  2452  00E9                     l203:	
  2453                           ;main.c: 313:     {;main.c: 314:     case UPPER:
  2454                           
  2455                           
  2456                           ;main.c: 315:       RA0 = 0;
  2457  00E9  0020               	movlb	0	; select bank0
  2458  00EA  100C               	bcf	12,0	;volatile
  2459                           
  2460                           ;main.c: 316:       RA1 = 0;
  2461  00EB  108C               	bcf	12,1	;volatile
  2462                           
  2463                           ;main.c: 317:       RA2 = 1;
  2464  00EC  150C               	bsf	12,2	;volatile
  2465                           
  2466                           ;main.c: 318:       RA3 = 0;
  2467  00ED  118C               	bcf	12,3	;volatile
  2468                           
  2469                           ;main.c: 319:       break;
  2470  00EE  2A9C               	goto	l1955
  2471  00EF                     l205:	
  2472                           ;main.c: 321:     case MIDDLE:
  2473                           
  2474                           
  2475                           ;main.c: 322:       RA5 = 0;
  2476  00EF  0020               	movlb	0	; select bank0
  2477  00F0  128C               	bcf	12,5	;volatile
  2478                           
  2479                           ;main.c: 323:       RE0 = 0;
  2480  00F1  1010               	bcf	16,0	;volatile
  2481                           
  2482                           ;main.c: 324:       RE1 = 1;
  2483  00F2  1490               	bsf	16,1	;volatile
  2484                           
  2485                           ;main.c: 325:       RE2 = 0;
  2486  00F3  1110               	bcf	16,2	;volatile
  2487                           
  2488                           ;main.c: 326:       break;
  2489  00F4  2A9C               	goto	l1955
  2490  00F5                     l206:	
  2491                           ;main.c: 328:     case LOWER:
  2492                           
  2493                           
  2494                           ;main.c: 329:       RA6 = 0;
  2495  00F5  0020               	movlb	0	; select bank0
  2496  00F6  130C               	bcf	12,6	;volatile
  2497                           
  2498                           ;main.c: 330:       RC0 = 0;
  2499  00F7  100E               	bcf	14,0	;volatile
  2500                           
  2501                           ;main.c: 331:       RC1 = 1;
  2502  00F8  148E               	bsf	14,1	;volatile
  2503                           
  2504                           ;main.c: 332:       RC2 = 0;
  2505  00F9  110E               	bcf	14,2	;volatile
  2506                           
  2507                           ;main.c: 333:       break;
  2508  00FA  2A9C               	goto	l1955
  2509  00FB                     l1917:
  2510  00FB  0879               	movf	show_character@group,w
  2511  00FC  00F6               	movwf	??_show_character
  2512  00FD  01F7               	clrf	??_show_character+1
  2513                           
  2514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2515                           ; Switch size 1, requested type "simple"
  2516                           ; Number of cases is 1, Range of values is 0 to 0
  2517                           ; switch strategies available:
  2518                           ; Name         Instructions Cycles
  2519                           ; simple_byte            4     3 (average)
  2520                           ; direct_byte            8     6 (fixed)
  2521                           ; jumptable            260     6 (fixed)
  2522                           ;	Chosen strategy is simple_byte
  2523  00FE  0877               	movf	??_show_character+1,w
  2524  00FF  3A00               	xorlw	0	; case 0
  2525  0100  1903               	skipnz
  2526  0101  2903               	goto	l2923
  2527  0102  2A9C               	goto	l1955
  2528  0103                     l2923:
  2529                           
  2530                           ; Switch size 1, requested type "simple"
  2531                           ; Number of cases is 3, Range of values is 0 to 2
  2532                           ; switch strategies available:
  2533                           ; Name         Instructions Cycles
  2534                           ; simple_byte           10     6 (average)
  2535                           ; direct_byte           12     6 (fixed)
  2536                           ; jumptable            260     6 (fixed)
  2537                           ;	Chosen strategy is simple_byte
  2538  0103  0876               	movf	??_show_character,w
  2539  0104  3A00               	xorlw	0	; case 0
  2540  0105  1903               	skipnz
  2541  0106  28E9               	goto	l203
  2542  0107  3A01               	xorlw	1	; case 1
  2543  0108  1903               	skipnz
  2544  0109  28EF               	goto	l205
  2545  010A  3A03               	xorlw	3	; case 2
  2546  010B  1903               	skipnz
  2547  010C  28F5               	goto	l206
  2548  010D  2A9C               	goto	l1955
  2549  010E                     l211:	
  2550                           ;main.c: 343:     {;main.c: 344:     case UPPER:
  2551                           
  2552                           
  2553                           ;main.c: 345:       RA0 = 0;
  2554  010E  0020               	movlb	0	; select bank0
  2555  010F  100C               	bcf	12,0	;volatile
  2556                           
  2557                           ;main.c: 346:       RA1 = 0;
  2558  0110  108C               	bcf	12,1	;volatile
  2559                           
  2560                           ;main.c: 347:       RA2 = 1;
  2561  0111  150C               	bsf	12,2	;volatile
  2562                           
  2563                           ;main.c: 348:       RA3 = 1;
  2564  0112  158C               	bsf	12,3	;volatile
  2565                           
  2566                           ;main.c: 349:       break;
  2567  0113  2A9C               	goto	l1955
  2568  0114                     l213:	
  2569                           ;main.c: 351:     case MIDDLE:
  2570                           
  2571                           
  2572                           ;main.c: 352:       RA5 = 0;
  2573  0114  0020               	movlb	0	; select bank0
  2574  0115  128C               	bcf	12,5	;volatile
  2575                           
  2576                           ;main.c: 353:       RE0 = 0;
  2577  0116  1010               	bcf	16,0	;volatile
  2578                           
  2579                           ;main.c: 354:       RE1 = 1;
  2580  0117  1490               	bsf	16,1	;volatile
  2581                           
  2582                           ;main.c: 355:       RE2 = 1;
  2583  0118  1510               	bsf	16,2	;volatile
  2584                           
  2585                           ;main.c: 356:       break;
  2586  0119  2A9C               	goto	l1955
  2587  011A                     l214:	
  2588                           ;main.c: 358:     case LOWER:
  2589                           
  2590                           
  2591                           ;main.c: 359:       RA6 = 0;
  2592  011A  0020               	movlb	0	; select bank0
  2593  011B  130C               	bcf	12,6	;volatile
  2594                           
  2595                           ;main.c: 360:       RC0 = 0;
  2596  011C  100E               	bcf	14,0	;volatile
  2597                           
  2598                           ;main.c: 361:       RC1 = 1;
  2599  011D  148E               	bsf	14,1	;volatile
  2600                           
  2601                           ;main.c: 362:       RC2 = 1;
  2602  011E  150E               	bsf	14,2	;volatile
  2603                           
  2604                           ;main.c: 363:       break;
  2605  011F  2A9C               	goto	l1955
  2606  0120                     l1921:
  2607  0120  0879               	movf	show_character@group,w
  2608  0121  00F6               	movwf	??_show_character
  2609  0122  01F7               	clrf	??_show_character+1
  2610                           
  2611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2612                           ; Switch size 1, requested type "simple"
  2613                           ; Number of cases is 1, Range of values is 0 to 0
  2614                           ; switch strategies available:
  2615                           ; Name         Instructions Cycles
  2616                           ; simple_byte            4     3 (average)
  2617                           ; direct_byte            8     6 (fixed)
  2618                           ; jumptable            260     6 (fixed)
  2619                           ;	Chosen strategy is simple_byte
  2620  0123  0877               	movf	??_show_character+1,w
  2621  0124  3A00               	xorlw	0	; case 0
  2622  0125  1903               	skipnz
  2623  0126  2928               	goto	l2925
  2624  0127  2A9C               	goto	l1955
  2625  0128                     l2925:
  2626                           
  2627                           ; Switch size 1, requested type "simple"
  2628                           ; Number of cases is 3, Range of values is 0 to 2
  2629                           ; switch strategies available:
  2630                           ; Name         Instructions Cycles
  2631                           ; simple_byte           10     6 (average)
  2632                           ; direct_byte           12     6 (fixed)
  2633                           ; jumptable            260     6 (fixed)
  2634                           ;	Chosen strategy is simple_byte
  2635  0128  0876               	movf	??_show_character,w
  2636  0129  3A00               	xorlw	0	; case 0
  2637  012A  1903               	skipnz
  2638  012B  290E               	goto	l211
  2639  012C  3A01               	xorlw	1	; case 1
  2640  012D  1903               	skipnz
  2641  012E  2914               	goto	l213
  2642  012F  3A03               	xorlw	3	; case 2
  2643  0130  1903               	skipnz
  2644  0131  291A               	goto	l214
  2645  0132  2A9C               	goto	l1955
  2646  0133                     l218:	
  2647                           ;main.c: 372:   case 'S':
  2648                           
  2649                           
  2650                           ;main.c: 373:     switch (group)
  2651  0133  2946               	goto	l1925
  2652  0134                     l220:	
  2653                           ;main.c: 374:     {;main.c: 375:     case UPPER:
  2654                           
  2655                           
  2656                           ;main.c: 376:       RA0 = 0;
  2657  0134  0020               	movlb	0	; select bank0
  2658  0135  100C               	bcf	12,0	;volatile
  2659                           
  2660                           ;main.c: 377:       RA1 = 1;
  2661  0136  148C               	bsf	12,1	;volatile
  2662                           
  2663                           ;main.c: 378:       RA2 = 0;
  2664  0137  110C               	bcf	12,2	;volatile
  2665                           
  2666                           ;main.c: 379:       RA3 = 0;
  2667  0138  118C               	bcf	12,3	;volatile
  2668                           
  2669                           ;main.c: 380:       break;
  2670  0139  2A9C               	goto	l1955
  2671  013A                     l222:	
  2672                           ;main.c: 382:     case MIDDLE:
  2673                           
  2674                           
  2675                           ;main.c: 383:       RA5 = 0;
  2676  013A  0020               	movlb	0	; select bank0
  2677  013B  128C               	bcf	12,5	;volatile
  2678                           
  2679                           ;main.c: 384:       RE0 = 1;
  2680  013C  1410               	bsf	16,0	;volatile
  2681                           
  2682                           ;main.c: 385:       RE1 = 0;
  2683  013D  1090               	bcf	16,1	;volatile
  2684                           
  2685                           ;main.c: 386:       RE2 = 0;
  2686  013E  1110               	bcf	16,2	;volatile
  2687                           
  2688                           ;main.c: 387:       break;
  2689  013F  2A9C               	goto	l1955
  2690  0140                     l223:	
  2691                           ;main.c: 389:     case LOWER:
  2692                           
  2693                           
  2694                           ;main.c: 390:       RA6 = 0;
  2695  0140  0020               	movlb	0	; select bank0
  2696  0141  130C               	bcf	12,6	;volatile
  2697                           
  2698                           ;main.c: 391:       RC0 = 1;
  2699  0142  140E               	bsf	14,0	;volatile
  2700                           
  2701                           ;main.c: 392:       RC1 = 0;
  2702  0143  108E               	bcf	14,1	;volatile
  2703                           
  2704                           ;main.c: 393:       RC2 = 0;
  2705  0144  110E               	bcf	14,2	;volatile
  2706                           
  2707                           ;main.c: 394:       break;
  2708  0145  2A9C               	goto	l1955
  2709  0146                     l1925:
  2710  0146  0879               	movf	show_character@group,w
  2711  0147  00F6               	movwf	??_show_character
  2712  0148  01F7               	clrf	??_show_character+1
  2713                           
  2714                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2715                           ; Switch size 1, requested type "simple"
  2716                           ; Number of cases is 1, Range of values is 0 to 0
  2717                           ; switch strategies available:
  2718                           ; Name         Instructions Cycles
  2719                           ; simple_byte            4     3 (average)
  2720                           ; direct_byte            8     6 (fixed)
  2721                           ; jumptable            260     6 (fixed)
  2722                           ;	Chosen strategy is simple_byte
  2723  0149  0877               	movf	??_show_character+1,w
  2724  014A  3A00               	xorlw	0	; case 0
  2725  014B  1903               	skipnz
  2726  014C  294E               	goto	l2927
  2727  014D  2A9C               	goto	l1955
  2728  014E                     l2927:
  2729                           
  2730                           ; Switch size 1, requested type "simple"
  2731                           ; Number of cases is 3, Range of values is 0 to 2
  2732                           ; switch strategies available:
  2733                           ; Name         Instructions Cycles
  2734                           ; simple_byte           10     6 (average)
  2735                           ; direct_byte           12     6 (fixed)
  2736                           ; jumptable            260     6 (fixed)
  2737                           ;	Chosen strategy is simple_byte
  2738  014E  0876               	movf	??_show_character,w
  2739  014F  3A00               	xorlw	0	; case 0
  2740  0150  1903               	skipnz
  2741  0151  2934               	goto	l220
  2742  0152  3A01               	xorlw	1	; case 1
  2743  0153  1903               	skipnz
  2744  0154  293A               	goto	l222
  2745  0155  3A03               	xorlw	3	; case 2
  2746  0156  1903               	skipnz
  2747  0157  2940               	goto	l223
  2748  0158  2A9C               	goto	l1955
  2749  0159                     l227:	
  2750                           ;main.c: 403:   case 'V':
  2751                           
  2752                           
  2753                           ;main.c: 404:     switch (group)
  2754  0159  296C               	goto	l1929
  2755  015A                     l229:	
  2756                           ;main.c: 405:     {;main.c: 406:     case UPPER:
  2757                           
  2758                           
  2759                           ;main.c: 407:       RA0 = 0;
  2760  015A  0020               	movlb	0	; select bank0
  2761  015B  100C               	bcf	12,0	;volatile
  2762                           
  2763                           ;main.c: 408:       RA1 = 1;
  2764  015C  148C               	bsf	12,1	;volatile
  2765                           
  2766                           ;main.c: 409:       RA2 = 0;
  2767  015D  110C               	bcf	12,2	;volatile
  2768                           
  2769                           ;main.c: 410:       RA3 = 1;
  2770  015E  158C               	bsf	12,3	;volatile
  2771                           
  2772                           ;main.c: 411:       break;
  2773  015F  2A9C               	goto	l1955
  2774  0160                     l231:	
  2775                           ;main.c: 413:     case MIDDLE:
  2776                           
  2777                           
  2778                           ;main.c: 414:       RA5 = 0;
  2779  0160  0020               	movlb	0	; select bank0
  2780  0161  128C               	bcf	12,5	;volatile
  2781                           
  2782                           ;main.c: 415:       RE0 = 1;
  2783  0162  1410               	bsf	16,0	;volatile
  2784                           
  2785                           ;main.c: 416:       RE1 = 0;
  2786  0163  1090               	bcf	16,1	;volatile
  2787                           
  2788                           ;main.c: 417:       RE2 = 1;
  2789  0164  1510               	bsf	16,2	;volatile
  2790                           
  2791                           ;main.c: 418:       break;
  2792  0165  2A9C               	goto	l1955
  2793  0166                     l232:	
  2794                           ;main.c: 420:     case LOWER:
  2795                           
  2796                           
  2797                           ;main.c: 421:       RA6 = 0;
  2798  0166  0020               	movlb	0	; select bank0
  2799  0167  130C               	bcf	12,6	;volatile
  2800                           
  2801                           ;main.c: 422:       RC0 = 1;
  2802  0168  140E               	bsf	14,0	;volatile
  2803                           
  2804                           ;main.c: 423:       RC1 = 0;
  2805  0169  108E               	bcf	14,1	;volatile
  2806                           
  2807                           ;main.c: 424:       RC2 = 1;
  2808  016A  150E               	bsf	14,2	;volatile
  2809                           
  2810                           ;main.c: 425:       break;
  2811  016B  2A9C               	goto	l1955
  2812  016C                     l1929:
  2813  016C  0879               	movf	show_character@group,w
  2814  016D  00F6               	movwf	??_show_character
  2815  016E  01F7               	clrf	??_show_character+1
  2816                           
  2817                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2818                           ; Switch size 1, requested type "simple"
  2819                           ; Number of cases is 1, Range of values is 0 to 0
  2820                           ; switch strategies available:
  2821                           ; Name         Instructions Cycles
  2822                           ; simple_byte            4     3 (average)
  2823                           ; direct_byte            8     6 (fixed)
  2824                           ; jumptable            260     6 (fixed)
  2825                           ;	Chosen strategy is simple_byte
  2826  016F  0877               	movf	??_show_character+1,w
  2827  0170  3A00               	xorlw	0	; case 0
  2828  0171  1903               	skipnz
  2829  0172  2974               	goto	l2929
  2830  0173  2A9C               	goto	l1955
  2831  0174                     l2929:
  2832                           
  2833                           ; Switch size 1, requested type "simple"
  2834                           ; Number of cases is 3, Range of values is 0 to 2
  2835                           ; switch strategies available:
  2836                           ; Name         Instructions Cycles
  2837                           ; simple_byte           10     6 (average)
  2838                           ; direct_byte           12     6 (fixed)
  2839                           ; jumptable            260     6 (fixed)
  2840                           ;	Chosen strategy is simple_byte
  2841  0174  0876               	movf	??_show_character,w
  2842  0175  3A00               	xorlw	0	; case 0
  2843  0176  1903               	skipnz
  2844  0177  295A               	goto	l229
  2845  0178  3A01               	xorlw	1	; case 1
  2846  0179  1903               	skipnz
  2847  017A  2960               	goto	l231
  2848  017B  3A03               	xorlw	3	; case 2
  2849  017C  1903               	skipnz
  2850  017D  2966               	goto	l232
  2851  017E  2A9C               	goto	l1955
  2852  017F                     l236:	
  2853                           ;main.c: 434:   case 'H':
  2854                           
  2855                           
  2856                           ;main.c: 435:     switch (group)
  2857  017F  2992               	goto	l1933
  2858  0180                     l238:	
  2859                           ;main.c: 436:     {;main.c: 437:     case UPPER:
  2860                           
  2861                           
  2862                           ;main.c: 438:       RA0 = 0;
  2863  0180  0020               	movlb	0	; select bank0
  2864  0181  100C               	bcf	12,0	;volatile
  2865                           
  2866                           ;main.c: 439:       RA1 = 1;
  2867  0182  148C               	bsf	12,1	;volatile
  2868                           
  2869                           ;main.c: 440:       RA2 = 1;
  2870  0183  150C               	bsf	12,2	;volatile
  2871                           
  2872                           ;main.c: 441:       RA3 = 0;
  2873  0184  118C               	bcf	12,3	;volatile
  2874                           
  2875                           ;main.c: 442:       break;
  2876  0185  2A9C               	goto	l1955
  2877  0186                     l240:	
  2878                           ;main.c: 444:     case MIDDLE:
  2879                           
  2880                           
  2881                           ;main.c: 445:       RA5 = 0;
  2882  0186  0020               	movlb	0	; select bank0
  2883  0187  128C               	bcf	12,5	;volatile
  2884                           
  2885                           ;main.c: 446:       RE0 = 1;
  2886  0188  1410               	bsf	16,0	;volatile
  2887                           
  2888                           ;main.c: 447:       RE1 = 1;
  2889  0189  1490               	bsf	16,1	;volatile
  2890                           
  2891                           ;main.c: 448:       RE2 = 0;
  2892  018A  1110               	bcf	16,2	;volatile
  2893                           
  2894                           ;main.c: 449:       break;
  2895  018B  2A9C               	goto	l1955
  2896  018C                     l241:	
  2897                           ;main.c: 451:     case LOWER:
  2898                           
  2899                           
  2900                           ;main.c: 452:       RA6 = 0;
  2901  018C  0020               	movlb	0	; select bank0
  2902  018D  130C               	bcf	12,6	;volatile
  2903                           
  2904                           ;main.c: 453:       RC0 = 1;
  2905  018E  140E               	bsf	14,0	;volatile
  2906                           
  2907                           ;main.c: 454:       RC1 = 1;
  2908  018F  148E               	bsf	14,1	;volatile
  2909                           
  2910                           ;main.c: 455:       RC2 = 0;
  2911  0190  110E               	bcf	14,2	;volatile
  2912                           
  2913                           ;main.c: 456:       break;
  2914  0191  2A9C               	goto	l1955
  2915  0192                     l1933:
  2916  0192  0879               	movf	show_character@group,w
  2917  0193  00F6               	movwf	??_show_character
  2918  0194  01F7               	clrf	??_show_character+1
  2919                           
  2920                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2921                           ; Switch size 1, requested type "simple"
  2922                           ; Number of cases is 1, Range of values is 0 to 0
  2923                           ; switch strategies available:
  2924                           ; Name         Instructions Cycles
  2925                           ; simple_byte            4     3 (average)
  2926                           ; direct_byte            8     6 (fixed)
  2927                           ; jumptable            260     6 (fixed)
  2928                           ;	Chosen strategy is simple_byte
  2929  0195  0877               	movf	??_show_character+1,w
  2930  0196  3A00               	xorlw	0	; case 0
  2931  0197  1903               	skipnz
  2932  0198  299A               	goto	l2931
  2933  0199  2A9C               	goto	l1955
  2934  019A                     l2931:
  2935                           
  2936                           ; Switch size 1, requested type "simple"
  2937                           ; Number of cases is 3, Range of values is 0 to 2
  2938                           ; switch strategies available:
  2939                           ; Name         Instructions Cycles
  2940                           ; simple_byte           10     6 (average)
  2941                           ; direct_byte           12     6 (fixed)
  2942                           ; jumptable            260     6 (fixed)
  2943                           ;	Chosen strategy is simple_byte
  2944  019A  0876               	movf	??_show_character,w
  2945  019B  3A00               	xorlw	0	; case 0
  2946  019C  1903               	skipnz
  2947  019D  2980               	goto	l238
  2948  019E  3A01               	xorlw	1	; case 1
  2949  019F  1903               	skipnz
  2950  01A0  2986               	goto	l240
  2951  01A1  3A03               	xorlw	3	; case 2
  2952  01A2  1903               	skipnz
  2953  01A3  298C               	goto	l241
  2954  01A4  2A9C               	goto	l1955
  2955  01A5                     l245:	
  2956                           ;main.c: 465:   case 'h':
  2957                           
  2958                           
  2959                           ;main.c: 466:     switch (group)
  2960  01A5  29B8               	goto	l1937
  2961  01A6                     l247:	
  2962                           ;main.c: 467:     {;main.c: 468:     case UPPER:
  2963                           
  2964                           
  2965                           ;main.c: 469:       RA0 = 0;
  2966  01A6  0020               	movlb	0	; select bank0
  2967  01A7  100C               	bcf	12,0	;volatile
  2968                           
  2969                           ;main.c: 470:       RA1 = 1;
  2970  01A8  148C               	bsf	12,1	;volatile
  2971                           
  2972                           ;main.c: 471:       RA2 = 1;
  2973  01A9  150C               	bsf	12,2	;volatile
  2974                           
  2975                           ;main.c: 472:       RA3 = 1;
  2976  01AA  158C               	bsf	12,3	;volatile
  2977                           
  2978                           ;main.c: 473:       break;
  2979  01AB  2A9C               	goto	l1955
  2980  01AC                     l249:	
  2981                           ;main.c: 475:     case MIDDLE:
  2982                           
  2983                           
  2984                           ;main.c: 476:       RA5 = 0;
  2985  01AC  0020               	movlb	0	; select bank0
  2986  01AD  128C               	bcf	12,5	;volatile
  2987                           
  2988                           ;main.c: 477:       RE0 = 1;
  2989  01AE  1410               	bsf	16,0	;volatile
  2990                           
  2991                           ;main.c: 478:       RE1 = 1;
  2992  01AF  1490               	bsf	16,1	;volatile
  2993                           
  2994                           ;main.c: 479:       RE2 = 1;
  2995  01B0  1510               	bsf	16,2	;volatile
  2996                           
  2997                           ;main.c: 480:       break;
  2998  01B1  2A9C               	goto	l1955
  2999  01B2                     l250:	
  3000                           ;main.c: 482:     case LOWER:
  3001                           
  3002                           
  3003                           ;main.c: 483:       RA6 = 0;
  3004  01B2  0020               	movlb	0	; select bank0
  3005  01B3  130C               	bcf	12,6	;volatile
  3006                           
  3007                           ;main.c: 484:       RC0 = 1;
  3008  01B4  140E               	bsf	14,0	;volatile
  3009                           
  3010                           ;main.c: 485:       RC1 = 1;
  3011  01B5  148E               	bsf	14,1	;volatile
  3012                           
  3013                           ;main.c: 486:       RC2 = 1;
  3014  01B6  150E               	bsf	14,2	;volatile
  3015                           
  3016                           ;main.c: 487:       break;
  3017  01B7  2A9C               	goto	l1955
  3018  01B8                     l1937:
  3019  01B8  0879               	movf	show_character@group,w
  3020  01B9  00F6               	movwf	??_show_character
  3021  01BA  01F7               	clrf	??_show_character+1
  3022                           
  3023                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3024                           ; Switch size 1, requested type "simple"
  3025                           ; Number of cases is 1, Range of values is 0 to 0
  3026                           ; switch strategies available:
  3027                           ; Name         Instructions Cycles
  3028                           ; simple_byte            4     3 (average)
  3029                           ; direct_byte            8     6 (fixed)
  3030                           ; jumptable            260     6 (fixed)
  3031                           ;	Chosen strategy is simple_byte
  3032  01BB  0877               	movf	??_show_character+1,w
  3033  01BC  3A00               	xorlw	0	; case 0
  3034  01BD  1903               	skipnz
  3035  01BE  29C0               	goto	l2933
  3036  01BF  2A9C               	goto	l1955
  3037  01C0                     l2933:
  3038                           
  3039                           ; Switch size 1, requested type "simple"
  3040                           ; Number of cases is 3, Range of values is 0 to 2
  3041                           ; switch strategies available:
  3042                           ; Name         Instructions Cycles
  3043                           ; simple_byte           10     6 (average)
  3044                           ; direct_byte           12     6 (fixed)
  3045                           ; jumptable            260     6 (fixed)
  3046                           ;	Chosen strategy is simple_byte
  3047  01C0  0876               	movf	??_show_character,w
  3048  01C1  3A00               	xorlw	0	; case 0
  3049  01C2  1903               	skipnz
  3050  01C3  29A6               	goto	l247
  3051  01C4  3A01               	xorlw	1	; case 1
  3052  01C5  1903               	skipnz
  3053  01C6  29AC               	goto	l249
  3054  01C7  3A03               	xorlw	3	; case 2
  3055  01C8  1903               	skipnz
  3056  01C9  29B2               	goto	l250
  3057  01CA  2A9C               	goto	l1955
  3058  01CB                     l255:	
  3059                           ;main.c: 497:     {;main.c: 498:     case UPPER:
  3060                           
  3061                           
  3062                           ;main.c: 499:       RA0 = 1;
  3063  01CB  0020               	movlb	0	; select bank0
  3064  01CC  140C               	bsf	12,0	;volatile
  3065                           
  3066                           ;main.c: 500:       RA1 = 0;
  3067  01CD  108C               	bcf	12,1	;volatile
  3068                           
  3069                           ;main.c: 501:       RA2 = 0;
  3070  01CE  110C               	bcf	12,2	;volatile
  3071                           
  3072                           ;main.c: 502:       RA3 = 0;
  3073  01CF  118C               	bcf	12,3	;volatile
  3074                           
  3075                           ;main.c: 503:       break;
  3076  01D0  2A9C               	goto	l1955
  3077  01D1                     l257:	
  3078                           ;main.c: 505:     case MIDDLE:
  3079                           
  3080                           
  3081                           ;main.c: 506:       RA5 = 1;
  3082  01D1  0020               	movlb	0	; select bank0
  3083  01D2  168C               	bsf	12,5	;volatile
  3084                           
  3085                           ;main.c: 507:       RE0 = 0;
  3086  01D3  1010               	bcf	16,0	;volatile
  3087                           
  3088                           ;main.c: 508:       RE1 = 0;
  3089  01D4  1090               	bcf	16,1	;volatile
  3090                           
  3091                           ;main.c: 509:       RE2 = 0;
  3092  01D5  1110               	bcf	16,2	;volatile
  3093                           
  3094                           ;main.c: 510:       break;
  3095  01D6  2A9C               	goto	l1955
  3096  01D7                     l258:	
  3097                           ;main.c: 512:     case LOWER:
  3098                           
  3099                           
  3100                           ;main.c: 513:       RA6 = 1;
  3101  01D7  0020               	movlb	0	; select bank0
  3102  01D8  170C               	bsf	12,6	;volatile
  3103                           
  3104                           ;main.c: 514:       RC0 = 0;
  3105  01D9  100E               	bcf	14,0	;volatile
  3106                           
  3107                           ;main.c: 515:       RC1 = 0;
  3108  01DA  108E               	bcf	14,1	;volatile
  3109                           
  3110                           ;main.c: 516:       RC2 = 0;
  3111  01DB  110E               	bcf	14,2	;volatile
  3112                           
  3113                           ;main.c: 517:       break;
  3114  01DC  2A9C               	goto	l1955
  3115  01DD                     l1941:
  3116  01DD  0879               	movf	show_character@group,w
  3117  01DE  00F6               	movwf	??_show_character
  3118  01DF  01F7               	clrf	??_show_character+1
  3119                           
  3120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3121                           ; Switch size 1, requested type "simple"
  3122                           ; Number of cases is 1, Range of values is 0 to 0
  3123                           ; switch strategies available:
  3124                           ; Name         Instructions Cycles
  3125                           ; simple_byte            4     3 (average)
  3126                           ; direct_byte            8     6 (fixed)
  3127                           ; jumptable            260     6 (fixed)
  3128                           ;	Chosen strategy is simple_byte
  3129  01E0  0877               	movf	??_show_character+1,w
  3130  01E1  3A00               	xorlw	0	; case 0
  3131  01E2  1903               	skipnz
  3132  01E3  29E5               	goto	l2935
  3133  01E4  2A9C               	goto	l1955
  3134  01E5                     l2935:
  3135                           
  3136                           ; Switch size 1, requested type "simple"
  3137                           ; Number of cases is 3, Range of values is 0 to 2
  3138                           ; switch strategies available:
  3139                           ; Name         Instructions Cycles
  3140                           ; simple_byte           10     6 (average)
  3141                           ; direct_byte           12     6 (fixed)
  3142                           ; jumptable            260     6 (fixed)
  3143                           ;	Chosen strategy is simple_byte
  3144  01E5  0876               	movf	??_show_character,w
  3145  01E6  3A00               	xorlw	0	; case 0
  3146  01E7  1903               	skipnz
  3147  01E8  29CB               	goto	l255
  3148  01E9  3A01               	xorlw	1	; case 1
  3149  01EA  1903               	skipnz
  3150  01EB  29D1               	goto	l257
  3151  01EC  3A03               	xorlw	3	; case 2
  3152  01ED  1903               	skipnz
  3153  01EE  29D7               	goto	l258
  3154  01EF  2A9C               	goto	l1955
  3155  01F0                     l262:	
  3156                           ;main.c: 526:   case 'F':
  3157                           
  3158                           
  3159                           ;main.c: 527:     switch (group)
  3160  01F0  2A03               	goto	l1945
  3161  01F1                     l264:	
  3162                           ;main.c: 528:     {;main.c: 529:     case UPPER:
  3163                           
  3164                           
  3165                           ;main.c: 530:       RA0 = 1;
  3166  01F1  0020               	movlb	0	; select bank0
  3167  01F2  140C               	bsf	12,0	;volatile
  3168                           
  3169                           ;main.c: 531:       RA1 = 0;
  3170  01F3  108C               	bcf	12,1	;volatile
  3171                           
  3172                           ;main.c: 532:       RA2 = 0;
  3173  01F4  110C               	bcf	12,2	;volatile
  3174                           
  3175                           ;main.c: 533:       RA3 = 1;
  3176  01F5  158C               	bsf	12,3	;volatile
  3177                           
  3178                           ;main.c: 534:       break;
  3179  01F6  2A9C               	goto	l1955
  3180  01F7                     l266:	
  3181                           ;main.c: 536:     case MIDDLE:
  3182                           
  3183                           
  3184                           ;main.c: 537:       RA5 = 1;
  3185  01F7  0020               	movlb	0	; select bank0
  3186  01F8  168C               	bsf	12,5	;volatile
  3187                           
  3188                           ;main.c: 538:       RE0 = 0;
  3189  01F9  1010               	bcf	16,0	;volatile
  3190                           
  3191                           ;main.c: 539:       RE1 = 0;
  3192  01FA  1090               	bcf	16,1	;volatile
  3193                           
  3194                           ;main.c: 540:       RE2 = 1;
  3195  01FB  1510               	bsf	16,2	;volatile
  3196                           
  3197                           ;main.c: 541:       break;
  3198  01FC  2A9C               	goto	l1955
  3199  01FD                     l267:	
  3200                           ;main.c: 543:     case LOWER:
  3201                           
  3202                           
  3203                           ;main.c: 544:       RA6 = 1;
  3204  01FD  0020               	movlb	0	; select bank0
  3205  01FE  170C               	bsf	12,6	;volatile
  3206                           
  3207                           ;main.c: 545:       RC0 = 0;
  3208  01FF  100E               	bcf	14,0	;volatile
  3209                           
  3210                           ;main.c: 546:       RC1 = 0;
  3211  0200  108E               	bcf	14,1	;volatile
  3212                           
  3213                           ;main.c: 547:       RC2 = 1;
  3214  0201  150E               	bsf	14,2	;volatile
  3215                           
  3216                           ;main.c: 548:       break;
  3217  0202  2A9C               	goto	l1955
  3218  0203                     l1945:
  3219  0203  0879               	movf	show_character@group,w
  3220  0204  00F6               	movwf	??_show_character
  3221  0205  01F7               	clrf	??_show_character+1
  3222                           
  3223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3224                           ; Switch size 1, requested type "simple"
  3225                           ; Number of cases is 1, Range of values is 0 to 0
  3226                           ; switch strategies available:
  3227                           ; Name         Instructions Cycles
  3228                           ; simple_byte            4     3 (average)
  3229                           ; direct_byte            8     6 (fixed)
  3230                           ; jumptable            260     6 (fixed)
  3231                           ;	Chosen strategy is simple_byte
  3232  0206  0877               	movf	??_show_character+1,w
  3233  0207  3A00               	xorlw	0	; case 0
  3234  0208  1903               	skipnz
  3235  0209  2A0B               	goto	l2937
  3236  020A  2A9C               	goto	l1955
  3237  020B                     l2937:
  3238                           
  3239                           ; Switch size 1, requested type "simple"
  3240                           ; Number of cases is 3, Range of values is 0 to 2
  3241                           ; switch strategies available:
  3242                           ; Name         Instructions Cycles
  3243                           ; simple_byte           10     6 (average)
  3244                           ; direct_byte           12     6 (fixed)
  3245                           ; jumptable            260     6 (fixed)
  3246                           ;	Chosen strategy is simple_byte
  3247  020B  0876               	movf	??_show_character,w
  3248  020C  3A00               	xorlw	0	; case 0
  3249  020D  1903               	skipnz
  3250  020E  29F1               	goto	l264
  3251  020F  3A01               	xorlw	1	; case 1
  3252  0210  1903               	skipnz
  3253  0211  29F7               	goto	l266
  3254  0212  3A03               	xorlw	3	; case 2
  3255  0213  1903               	skipnz
  3256  0214  29FD               	goto	l267
  3257  0215  2A9C               	goto	l1955
  3258  0216                     l272:	
  3259                           ;main.c: 558:     {;main.c: 559:     case UPPER:
  3260                           
  3261                           
  3262                           ;main.c: 560:       RA0 = 1;
  3263  0216  0020               	movlb	0	; select bank0
  3264  0217  140C               	bsf	12,0	;volatile
  3265                           
  3266                           ;main.c: 561:       RA1 = 1;
  3267  0218  148C               	bsf	12,1	;volatile
  3268                           
  3269                           ;main.c: 562:       RA2 = 1;
  3270  0219  150C               	bsf	12,2	;volatile
  3271                           
  3272                           ;main.c: 563:       RA3 = 1;
  3273  021A  158C               	bsf	12,3	;volatile
  3274                           
  3275                           ;main.c: 564:       break;
  3276  021B  2A9C               	goto	l1955
  3277  021C                     l274:	
  3278                           ;main.c: 566:     case MIDDLE:
  3279                           
  3280                           
  3281                           ;main.c: 567:       RA5 = 1;
  3282  021C  0020               	movlb	0	; select bank0
  3283  021D  168C               	bsf	12,5	;volatile
  3284                           
  3285                           ;main.c: 568:       RE0 = 1;
  3286  021E  1410               	bsf	16,0	;volatile
  3287                           
  3288                           ;main.c: 569:       RE1 = 1;
  3289  021F  1490               	bsf	16,1	;volatile
  3290                           
  3291                           ;main.c: 570:       RE2 = 1;
  3292  0220  1510               	bsf	16,2	;volatile
  3293                           
  3294                           ;main.c: 571:       break;
  3295  0221  2A9C               	goto	l1955
  3296  0222                     l275:	
  3297                           ;main.c: 573:     case LOWER:
  3298                           
  3299                           
  3300                           ;main.c: 574:       RA6 = 1;
  3301  0222  0020               	movlb	0	; select bank0
  3302  0223  170C               	bsf	12,6	;volatile
  3303                           
  3304                           ;main.c: 575:       RC0 = 1;
  3305  0224  140E               	bsf	14,0	;volatile
  3306                           
  3307                           ;main.c: 576:       RC1 = 1;
  3308  0225  148E               	bsf	14,1	;volatile
  3309                           
  3310                           ;main.c: 577:       RC2 = 1;
  3311  0226  150E               	bsf	14,2	;volatile
  3312                           
  3313                           ;main.c: 578:       break;
  3314  0227  2A9C               	goto	l1955
  3315  0228                     l1949:
  3316  0228  0879               	movf	show_character@group,w
  3317  0229  00F6               	movwf	??_show_character
  3318  022A  01F7               	clrf	??_show_character+1
  3319                           
  3320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3321                           ; Switch size 1, requested type "simple"
  3322                           ; Number of cases is 1, Range of values is 0 to 0
  3323                           ; switch strategies available:
  3324                           ; Name         Instructions Cycles
  3325                           ; simple_byte            4     3 (average)
  3326                           ; direct_byte            8     6 (fixed)
  3327                           ; jumptable            260     6 (fixed)
  3328                           ;	Chosen strategy is simple_byte
  3329  022B  0877               	movf	??_show_character+1,w
  3330  022C  3A00               	xorlw	0	; case 0
  3331  022D  1903               	skipnz
  3332  022E  2A30               	goto	l2939
  3333  022F  2A9C               	goto	l1955
  3334  0230                     l2939:
  3335                           
  3336                           ; Switch size 1, requested type "simple"
  3337                           ; Number of cases is 3, Range of values is 0 to 2
  3338                           ; switch strategies available:
  3339                           ; Name         Instructions Cycles
  3340                           ; simple_byte           10     6 (average)
  3341                           ; direct_byte           12     6 (fixed)
  3342                           ; jumptable            260     6 (fixed)
  3343                           ;	Chosen strategy is simple_byte
  3344  0230  0876               	movf	??_show_character,w
  3345  0231  3A00               	xorlw	0	; case 0
  3346  0232  1903               	skipnz
  3347  0233  2A16               	goto	l272
  3348  0234  3A01               	xorlw	1	; case 1
  3349  0235  1903               	skipnz
  3350  0236  2A1C               	goto	l274
  3351  0237  3A03               	xorlw	3	; case 2
  3352  0238  1903               	skipnz
  3353  0239  2A22               	goto	l275
  3354  023A  2A9C               	goto	l1955
  3355  023B                     l1953:
  3356  023B  0874               	movf	show_character@character,w
  3357  023C  00F6               	movwf	??_show_character
  3358  023D  01F7               	clrf	??_show_character+1
  3359                           
  3360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3361                           ; Switch size 1, requested type "simple"
  3362                           ; Number of cases is 1, Range of values is 0 to 0
  3363                           ; switch strategies available:
  3364                           ; Name         Instructions Cycles
  3365                           ; simple_byte            4     3 (average)
  3366                           ; direct_byte            8     6 (fixed)
  3367                           ; jumptable            260     6 (fixed)
  3368                           ;	Chosen strategy is simple_byte
  3369  023E  0877               	movf	??_show_character+1,w
  3370  023F  3A00               	xorlw	0	; case 0
  3371  0240  1903               	skipnz
  3372  0241  2A43               	goto	l2941
  3373  0242  2A28               	goto	l1949
  3374  0243                     l2941:
  3375                           
  3376                           ; Switch size 1, requested type "simple"
  3377                           ; Number of cases is 29, Range of values is 32 to 117
  3378                           ; switch strategies available:
  3379                           ; Name         Instructions Cycles
  3380                           ; simple_byte           88    45 (average)
  3381                           ; direct_byte          181     9 (fixed)
  3382                           ; jumptable            263     9 (fixed)
  3383                           ;	Chosen strategy is simple_byte
  3384  0243  0876               	movf	??_show_character,w
  3385  0244  3A20               	xorlw	32	; case 32
  3386  0245  1903               	skipnz
  3387  0246  2A28               	goto	l1949
  3388  0247  3A05               	xorlw	5	; case 37
  3389  0248  1903               	skipnz
  3390  0249  28FB               	goto	l1917
  3391  024A  3A0E               	xorlw	14	; case 43
  3392  024B  1903               	skipnz
  3393  024C  29B8               	goto	l1937
  3394  024D  3A06               	xorlw	6	; case 45
  3395  024E  1903               	skipnz
  3396  024F  29DD               	goto	l1941
  3397  0250  3A1D               	xorlw	29	; case 48
  3398  0251  1903               	skipnz
  3399  0252  289C               	goto	l182
  3400  0253  3A01               	xorlw	1	; case 49
  3401  0254  1903               	skipnz
  3402  0255  28C2               	goto	l192
  3403  0256  3A03               	xorlw	3	; case 50
  3404  0257  1903               	skipnz
  3405  0258  28E8               	goto	l201
  3406  0259  3A01               	xorlw	1	; case 51
  3407  025A  1903               	skipnz
  3408  025B  2920               	goto	l1921
  3409  025C  3A07               	xorlw	7	; case 52
  3410  025D  1903               	skipnz
  3411  025E  2933               	goto	l218
  3412  025F  3A01               	xorlw	1	; case 53
  3413  0260  1903               	skipnz
  3414  0261  2959               	goto	l227
  3415  0262  3A03               	xorlw	3	; case 54
  3416  0263  1903               	skipnz
  3417  0264  297F               	goto	l236
  3418  0265  3A01               	xorlw	1	; case 55
  3419  0266  1903               	skipnz
  3420  0267  29A5               	goto	l245
  3421  0268  3A0F               	xorlw	15	; case 56
  3422  0269  1903               	skipnz
  3423  026A  29DD               	goto	l1941
  3424  026B  3A01               	xorlw	1	; case 57
  3425  026C  1903               	skipnz
  3426  026D  29F0               	goto	l262
  3427  026E  3A78               	xorlw	120	; case 65
  3428  026F  1903               	skipnz
  3429  0270  28D5               	goto	l1913
  3430  0271  3A07               	xorlw	7	; case 70
  3431  0272  1903               	skipnz
  3432  0273  2A03               	goto	l1945
  3433  0274  3A0E               	xorlw	14	; case 72
  3434  0275  1903               	skipnz
  3435  0276  2992               	goto	l1933
  3436  0277  3A05               	xorlw	5	; case 77
  3437  0278  1903               	skipnz
  3438  0279  296C               	goto	l1929
  3439  027A  3A02               	xorlw	2	; case 79
  3440  027B  1903               	skipnz
  3441  027C  28FB               	goto	l1917
  3442  027D  3A1F               	xorlw	31	; case 80
  3443  027E  1903               	skipnz
  3444  027F  2A03               	goto	l1945
  3445  0280  3A03               	xorlw	3	; case 83
  3446  0281  1903               	skipnz
  3447  0282  2946               	goto	l1925
  3448  0283  3A05               	xorlw	5	; case 86
  3449  0284  1903               	skipnz
  3450  0285  296C               	goto	l1929
  3451  0286  3A01               	xorlw	1	; case 87
  3452  0287  1903               	skipnz
  3453  0288  28AF               	goto	l1909
  3454  0289  3A3F               	xorlw	63	; case 104
  3455  028A  1903               	skipnz
  3456  028B  29B8               	goto	l1937
  3457  028C  3A03               	xorlw	3	; case 107
  3458  028D  1903               	skipnz
  3459  028E  2946               	goto	l1925
  3460  028F  3A06               	xorlw	6	; case 109
  3461  0290  1903               	skipnz
  3462  0291  2992               	goto	l1933
  3463  0292  3A03               	xorlw	3	; case 110
  3464  0293  1903               	skipnz
  3465  0294  28D5               	goto	l1913
  3466  0295  3A1E               	xorlw	30	; case 112
  3467  0296  1903               	skipnz
  3468  0297  2920               	goto	l1921
  3469  0298  3A05               	xorlw	5	; case 117
  3470  0299  1903               	skipnz
  3471  029A  28AF               	goto	l1909
  3472  029B  2A28               	goto	l1949
  3473  029C                     l1955:
  3474                           
  3475                           ;main.c: 587:   on_digit(digit);
  3476  029C  0875               	movf	show_character@digit,w
  3477  029D  3183  23CF  3180   	fcall	_on_digit
  3478  02A0                     l277:
  3479  02A0  0008               	return
  3480  02A1                     __end_of_show_character:
  3481                           
  3482                           	psect	text3
  3483  03CF                     __ptext3:	
  3484 ;; *************** function _on_digit *****************
  3485 ;; Defined at:
  3486 ;;		line 594 in file "main.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  digit           1    wreg     char 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  digit           1    3[COMMON] char 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;Total ram usage:        3 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; Hardware stack levels required when called:    4
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		_show_character
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           
  3515                           ;psect for function _on_digit
  3516  03CF                     _on_digit:
  3517                           
  3518                           ;incstack = 0
  3519                           ; Regs used in _on_digit: [wreg-fsr0h+status,2+status,0]
  3520                           ;on_digit@digit stored from wreg
  3521  03CF  00F3               	movwf	on_digit@digit
  3522  03D0                     l1823:
  3523                           
  3524                           ;main.c: 594: void on_digit(signed char digit);main.c: 595: {;main.c: 596:   switch (dig
      +                          it)
  3525  03D0  2BEF               	goto	l1827
  3526  03D1                     l281:	
  3527                           ;main.c: 597:   {;main.c: 598:   case 0:
  3528                           
  3529                           
  3530                           ;main.c: 599:     RB7 = 1;
  3531  03D1  0020               	movlb	0	; select bank0
  3532  03D2  178D               	bsf	13,7	;volatile
  3533                           
  3534                           ;main.c: 600:     break;
  3535  03D3  2C19               	goto	l293
  3536  03D4                     l283:	
  3537                           ;main.c: 601:   case 1:
  3538                           
  3539                           
  3540                           ;main.c: 602:     RB6 = 1;
  3541  03D4  0020               	movlb	0	; select bank0
  3542  03D5  170D               	bsf	13,6	;volatile
  3543                           
  3544                           ;main.c: 603:     break;
  3545  03D6  2C19               	goto	l293
  3546  03D7                     l284:	
  3547                           ;main.c: 604:   case 2:
  3548                           
  3549                           
  3550                           ;main.c: 605:     RB5 = 1;
  3551  03D7  0020               	movlb	0	; select bank0
  3552  03D8  168D               	bsf	13,5	;volatile
  3553                           
  3554                           ;main.c: 606:     break;
  3555  03D9  2C19               	goto	l293
  3556  03DA                     l285:	
  3557                           ;main.c: 607:   case 3:
  3558                           
  3559                           
  3560                           ;main.c: 608:     RB4 = 1;
  3561  03DA  0020               	movlb	0	; select bank0
  3562  03DB  160D               	bsf	13,4	;volatile
  3563                           
  3564                           ;main.c: 609:     break;
  3565  03DC  2C19               	goto	l293
  3566  03DD                     l286:	
  3567                           ;main.c: 610:   case 4:
  3568                           
  3569                           
  3570                           ;main.c: 611:     RB3 = 1;
  3571  03DD  0020               	movlb	0	; select bank0
  3572  03DE  158D               	bsf	13,3	;volatile
  3573                           
  3574                           ;main.c: 612:     break;
  3575  03DF  2C19               	goto	l293
  3576  03E0                     l287:	
  3577                           ;main.c: 613:   case 5:
  3578                           
  3579                           
  3580                           ;main.c: 614:     RB2 = 1;
  3581  03E0  0020               	movlb	0	; select bank0
  3582  03E1  150D               	bsf	13,2	;volatile
  3583                           
  3584                           ;main.c: 615:     break;
  3585  03E2  2C19               	goto	l293
  3586  03E3                     l288:	
  3587                           ;main.c: 616:   case 6:
  3588                           
  3589                           
  3590                           ;main.c: 617:     RB1 = 1;
  3591  03E3  0020               	movlb	0	; select bank0
  3592  03E4  148D               	bsf	13,1	;volatile
  3593                           
  3594                           ;main.c: 618:     break;
  3595  03E5  2C19               	goto	l293
  3596  03E6                     l289:	
  3597                           ;main.c: 619:   case 7:
  3598                           
  3599                           
  3600                           ;main.c: 620:     RB0 = 1;
  3601  03E6  0020               	movlb	0	; select bank0
  3602  03E7  140D               	bsf	13,0	;volatile
  3603                           
  3604                           ;main.c: 621:     break;
  3605  03E8  2C19               	goto	l293
  3606  03E9                     l290:	
  3607                           ;main.c: 622:   case 8:
  3608                           
  3609                           
  3610                           ;main.c: 623:     RD7 = 1;
  3611  03E9  0020               	movlb	0	; select bank0
  3612  03EA  178F               	bsf	15,7	;volatile
  3613                           
  3614                           ;main.c: 624:     break;
  3615  03EB  2C19               	goto	l293
  3616  03EC                     l291:	
  3617                           ;main.c: 625:   case 9:
  3618                           
  3619                           
  3620                           ;main.c: 626:     RD6 = 1;
  3621  03EC  0020               	movlb	0	; select bank0
  3622  03ED  170F               	bsf	15,6	;volatile
  3623                           
  3624                           ;main.c: 627:     break;
  3625  03EE  2C19               	goto	l293
  3626  03EF                     l1827:
  3627  03EF  0873               	movf	on_digit@digit,w
  3628  03F0  00F1               	movwf	??_on_digit
  3629  03F1  01F2               	clrf	??_on_digit+1
  3630  03F2  1BF1               	btfsc	??_on_digit,7
  3631  03F3  03F2               	decf	??_on_digit+1,f
  3632                           
  3633                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3634                           ; Switch size 1, requested type "simple"
  3635                           ; Number of cases is 1, Range of values is 0 to 0
  3636                           ; switch strategies available:
  3637                           ; Name         Instructions Cycles
  3638                           ; simple_byte            4     3 (average)
  3639                           ; direct_byte            8     6 (fixed)
  3640                           ; jumptable            260     6 (fixed)
  3641                           ;	Chosen strategy is simple_byte
  3642  03F4  0872               	movf	??_on_digit+1,w
  3643  03F5  3A00               	xorlw	0	; case 0
  3644  03F6  1903               	skipnz
  3645  03F7  2BF9               	goto	l2943
  3646  03F8  2C19               	goto	l293
  3647  03F9                     l2943:
  3648                           
  3649                           ; Switch size 1, requested type "simple"
  3650                           ; Number of cases is 10, Range of values is 0 to 9
  3651                           ; switch strategies available:
  3652                           ; Name         Instructions Cycles
  3653                           ; direct_byte           26     6 (fixed)
  3654                           ; simple_byte           31    16 (average)
  3655                           ; jumptable            260     6 (fixed)
  3656                           ;	Chosen strategy is simple_byte
  3657  03F9  0871               	movf	??_on_digit,w
  3658  03FA  3A00               	xorlw	0	; case 0
  3659  03FB  1903               	skipnz
  3660  03FC  2BD1               	goto	l281
  3661  03FD  3A01               	xorlw	1	; case 1
  3662  03FE  1903               	skipnz
  3663  03FF  2BD4               	goto	l283
  3664  0400  3A03               	xorlw	3	; case 2
  3665  0401  1903               	skipnz
  3666  0402  2BD7               	goto	l284
  3667  0403  3A01               	xorlw	1	; case 3
  3668  0404  1903               	skipnz
  3669  0405  2BDA               	goto	l285
  3670  0406  3A07               	xorlw	7	; case 4
  3671  0407  1903               	skipnz
  3672  0408  2BDD               	goto	l286
  3673  0409  3A01               	xorlw	1	; case 5
  3674  040A  1903               	skipnz
  3675  040B  2BE0               	goto	l287
  3676  040C  3A03               	xorlw	3	; case 6
  3677  040D  1903               	skipnz
  3678  040E  2BE3               	goto	l288
  3679  040F  3A01               	xorlw	1	; case 7
  3680  0410  1903               	skipnz
  3681  0411  2BE6               	goto	l289
  3682  0412  3A0F               	xorlw	15	; case 8
  3683  0413  1903               	skipnz
  3684  0414  2BE9               	goto	l290
  3685  0415  3A01               	xorlw	1	; case 9
  3686  0416  1903               	skipnz
  3687  0417  2BEC               	goto	l291
  3688  0418  2C19               	goto	l293
  3689  0419                     l293:
  3690  0419  0008               	return
  3691  041A                     __end_of_on_digit:
  3692                           
  3693                           	psect	text4
  3694  041A                     __ptext4:	
  3695 ;; *************** function _off_digit *****************
  3696 ;; Defined at:
  3697 ;;		line 637 in file "main.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  digit           1    wreg     char 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  digit           1    3[COMMON] char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3714 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3715 ;;Total ram usage:        3 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    4
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_show
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function _off_digit
  3727  041A                     _off_digit:
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in _off_digit: [wreg-fsr0h+status,2+status,0]
  3731                           ;off_digit@digit stored from wreg
  3732  041A  00F3               	movwf	off_digit@digit
  3733  041B                     l2013:
  3734                           
  3735                           ;main.c: 637: void off_digit(signed char digit);main.c: 638: {;main.c: 639:   switch (di
      +                          git)
  3736  041B  2C3A               	goto	l2017
  3737  041C                     l297:	
  3738                           ;main.c: 640:   {;main.c: 641:   case 0:
  3739                           
  3740                           
  3741                           ;main.c: 642:     RB7 = 0;
  3742  041C  0020               	movlb	0	; select bank0
  3743  041D  138D               	bcf	13,7	;volatile
  3744                           
  3745                           ;main.c: 643:     break;
  3746  041E  2C64               	goto	l309
  3747  041F                     l299:	
  3748                           ;main.c: 644:   case 1:
  3749                           
  3750                           
  3751                           ;main.c: 645:     RB6 = 0;
  3752  041F  0020               	movlb	0	; select bank0
  3753  0420  130D               	bcf	13,6	;volatile
  3754                           
  3755                           ;main.c: 646:     break;
  3756  0421  2C64               	goto	l309
  3757  0422                     l300:	
  3758                           ;main.c: 647:   case 2:
  3759                           
  3760                           
  3761                           ;main.c: 648:     RB5 = 0;
  3762  0422  0020               	movlb	0	; select bank0
  3763  0423  128D               	bcf	13,5	;volatile
  3764                           
  3765                           ;main.c: 649:     break;
  3766  0424  2C64               	goto	l309
  3767  0425                     l301:	
  3768                           ;main.c: 650:   case 3:
  3769                           
  3770                           
  3771                           ;main.c: 651:     RB4 = 0;
  3772  0425  0020               	movlb	0	; select bank0
  3773  0426  120D               	bcf	13,4	;volatile
  3774                           
  3775                           ;main.c: 652:     break;
  3776  0427  2C64               	goto	l309
  3777  0428                     l302:	
  3778                           ;main.c: 653:   case 4:
  3779                           
  3780                           
  3781                           ;main.c: 654:     RB3 = 0;
  3782  0428  0020               	movlb	0	; select bank0
  3783  0429  118D               	bcf	13,3	;volatile
  3784                           
  3785                           ;main.c: 655:     break;
  3786  042A  2C64               	goto	l309
  3787  042B                     l303:	
  3788                           ;main.c: 656:   case 5:
  3789                           
  3790                           
  3791                           ;main.c: 657:     RB2 = 0;
  3792  042B  0020               	movlb	0	; select bank0
  3793  042C  110D               	bcf	13,2	;volatile
  3794                           
  3795                           ;main.c: 658:     break;
  3796  042D  2C64               	goto	l309
  3797  042E                     l304:	
  3798                           ;main.c: 659:   case 6:
  3799                           
  3800                           
  3801                           ;main.c: 660:     RB1 = 0;
  3802  042E  0020               	movlb	0	; select bank0
  3803  042F  108D               	bcf	13,1	;volatile
  3804                           
  3805                           ;main.c: 661:     break;
  3806  0430  2C64               	goto	l309
  3807  0431                     l305:	
  3808                           ;main.c: 662:   case 7:
  3809                           
  3810                           
  3811                           ;main.c: 663:     RB0 = 0;
  3812  0431  0020               	movlb	0	; select bank0
  3813  0432  100D               	bcf	13,0	;volatile
  3814                           
  3815                           ;main.c: 664:     break;
  3816  0433  2C64               	goto	l309
  3817  0434                     l306:	
  3818                           ;main.c: 665:   case 8:
  3819                           
  3820                           
  3821                           ;main.c: 666:     RD7 = 0;
  3822  0434  0020               	movlb	0	; select bank0
  3823  0435  138F               	bcf	15,7	;volatile
  3824                           
  3825                           ;main.c: 667:     break;
  3826  0436  2C64               	goto	l309
  3827  0437                     l307:	
  3828                           ;main.c: 668:   case 9:
  3829                           
  3830                           
  3831                           ;main.c: 669:     RD6 = 0;
  3832  0437  0020               	movlb	0	; select bank0
  3833  0438  130F               	bcf	15,6	;volatile
  3834                           
  3835                           ;main.c: 670:     break;
  3836  0439  2C64               	goto	l309
  3837  043A                     l2017:
  3838  043A  0873               	movf	off_digit@digit,w
  3839  043B  00F1               	movwf	??_off_digit
  3840  043C  01F2               	clrf	??_off_digit+1
  3841  043D  1BF1               	btfsc	??_off_digit,7
  3842  043E  03F2               	decf	??_off_digit+1,f
  3843                           
  3844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3845                           ; Switch size 1, requested type "simple"
  3846                           ; Number of cases is 1, Range of values is 0 to 0
  3847                           ; switch strategies available:
  3848                           ; Name         Instructions Cycles
  3849                           ; simple_byte            4     3 (average)
  3850                           ; direct_byte            8     6 (fixed)
  3851                           ; jumptable            260     6 (fixed)
  3852                           ;	Chosen strategy is simple_byte
  3853  043F  0872               	movf	??_off_digit+1,w
  3854  0440  3A00               	xorlw	0	; case 0
  3855  0441  1903               	skipnz
  3856  0442  2C44               	goto	l2945
  3857  0443  2C64               	goto	l309
  3858  0444                     l2945:
  3859                           
  3860                           ; Switch size 1, requested type "simple"
  3861                           ; Number of cases is 10, Range of values is 0 to 9
  3862                           ; switch strategies available:
  3863                           ; Name         Instructions Cycles
  3864                           ; direct_byte           26     6 (fixed)
  3865                           ; simple_byte           31    16 (average)
  3866                           ; jumptable            260     6 (fixed)
  3867                           ;	Chosen strategy is simple_byte
  3868  0444  0871               	movf	??_off_digit,w
  3869  0445  3A00               	xorlw	0	; case 0
  3870  0446  1903               	skipnz
  3871  0447  2C1C               	goto	l297
  3872  0448  3A01               	xorlw	1	; case 1
  3873  0449  1903               	skipnz
  3874  044A  2C1F               	goto	l299
  3875  044B  3A03               	xorlw	3	; case 2
  3876  044C  1903               	skipnz
  3877  044D  2C22               	goto	l300
  3878  044E  3A01               	xorlw	1	; case 3
  3879  044F  1903               	skipnz
  3880  0450  2C25               	goto	l301
  3881  0451  3A07               	xorlw	7	; case 4
  3882  0452  1903               	skipnz
  3883  0453  2C28               	goto	l302
  3884  0454  3A01               	xorlw	1	; case 5
  3885  0455  1903               	skipnz
  3886  0456  2C2B               	goto	l303
  3887  0457  3A03               	xorlw	3	; case 6
  3888  0458  1903               	skipnz
  3889  0459  2C2E               	goto	l304
  3890  045A  3A01               	xorlw	1	; case 7
  3891  045B  1903               	skipnz
  3892  045C  2C31               	goto	l305
  3893  045D  3A0F               	xorlw	15	; case 8
  3894  045E  1903               	skipnz
  3895  045F  2C34               	goto	l306
  3896  0460  3A01               	xorlw	1	; case 9
  3897  0461  1903               	skipnz
  3898  0462  2C37               	goto	l307
  3899  0463  2C64               	goto	l309
  3900  0464                     l309:
  3901  0464  0008               	return
  3902  0465                     __end_of_off_digit:
  3903                           
  3904                           	psect	text5
  3905  04DD                     __ptext5:	
  3906 ;; *************** function _receive_char_from_EUSART *****************
  3907 ;; Defined at:
  3908 ;;		line 677 in file "main.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  i               1    5[COMMON] unsigned char 
  3913 ;;  receive_char    1    4[COMMON] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3926 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;Total ram usage:        3 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    5
  3930 ;; This function calls:
  3931 ;;		_EUSART_Read
  3932 ;; This function is called by:
  3933 ;;		_main
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           
  3938                           ;psect for function _receive_char_from_EUSART
  3939  04DD                     _receive_char_from_EUSART:
  3940  04DD                     l2055:	
  3941                           ;incstack = 0
  3942                           ; Regs used in _receive_char_from_EUSART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  3943                           
  3944                           
  3945                           ;main.c: 679:   char receive_char = EUSART_Read();
  3946  04DD  3185  2514  3184   	fcall	_EUSART_Read
  3947  04E0  00F3               	movwf	??_receive_char_from_EUSART
  3948  04E1  0873               	movf	??_receive_char_from_EUSART,w
  3949  04E2  00F4               	movwf	receive_char_from_EUSART@receive_char
  3950  04E3                     l2057:
  3951                           
  3952                           ;main.c: 680:   if ((receive_char == '$') || (receive_index > 10 * 2))
  3953  04E3  3024               	movlw	36
  3954  04E4  0674               	xorwf	receive_char_from_EUSART@receive_char,w
  3955  04E5  1903               	btfsc	3,2
  3956  04E6  2CE8               	goto	u361
  3957  04E7  2CE9               	goto	u360
  3958  04E8                     u361:
  3959  04E8  2CF1               	goto	l2061
  3960  04E9                     u360:
  3961  04E9                     l2059:
  3962  04E9  0020               	movlb	0	; select bank0
  3963  04EA  083C               	movf	_receive_index,w
  3964  04EB  3A80               	xorlw	128
  3965  04EC  3E6B               	addlw	-149
  3966  04ED  1C03               	skipc
  3967  04EE  2CF0               	goto	u371
  3968  04EF  2CF1               	goto	u370
  3969  04F0                     u371:
  3970  04F0  2D07               	goto	l2073
  3971  04F1                     u370:
  3972  04F1                     l2061:
  3973                           
  3974                           ;main.c: 681:   {;main.c: 683:     receive_index = 0;
  3975  04F1  0020               	movlb	0	; select bank0
  3976  04F2  01BC               	clrf	_receive_index
  3977                           
  3978                           ;main.c: 684:     for (unsigned char i = 0; i < 10 * 2; i++)
  3979  04F3  01F5               	clrf	receive_char_from_EUSART@i
  3980  04F4                     l2067:
  3981                           
  3982                           ;main.c: 685:     {;main.c: 686:       value[i] = ' ';
  3983  04F4  3020               	movlw	32
  3984  04F5  00F3               	movwf	??_receive_char_from_EUSART
  3985  04F6  0875               	movf	receive_char_from_EUSART@i,w
  3986  04F7  3EA0               	addlw	(low (_value| 0))& (0+255)
  3987  04F8  0086               	movwf	6
  3988  04F9  0187               	clrf	7
  3989  04FA  0873               	movf	??_receive_char_from_EUSART,w
  3990  04FB  0081               	movwf	1
  3991  04FC                     l2069:
  3992                           
  3993                           ;main.c: 687:     }
  3994  04FC  3001               	movlw	1
  3995  04FD  00F3               	movwf	??_receive_char_from_EUSART
  3996  04FE  0873               	movf	??_receive_char_from_EUSART,w
  3997  04FF  07F5               	addwf	receive_char_from_EUSART@i,f
  3998  0500                     l2071:
  3999  0500  3014               	movlw	20
  4000  0501  0275               	subwf	receive_char_from_EUSART@i,w
  4001  0502  1C03               	skipc
  4002  0503  2D05               	goto	u381
  4003  0504  2D06               	goto	u380
  4004  0505                     u381:
  4005  0505  2CF4               	goto	l2067
  4006  0506                     u380:
  4007  0506  2D13               	goto	l318
  4008  0507                     l2073:
  4009                           
  4010                           ;main.c: 690:   {;main.c: 691:     value[receive_index] = receive_char;
  4011  0507  0874               	movf	receive_char_from_EUSART@receive_char,w
  4012  0508  00F3               	movwf	??_receive_char_from_EUSART
  4013  0509  083C               	movf	_receive_index,w
  4014  050A  3EA0               	addlw	(low (_value| 0))& (0+255)
  4015  050B  0086               	movwf	6
  4016  050C  0187               	clrf	7
  4017  050D  0873               	movf	??_receive_char_from_EUSART,w
  4018  050E  0081               	movwf	1
  4019  050F                     l2075:
  4020                           
  4021                           ;main.c: 692:     receive_index++;
  4022  050F  3001               	movlw	1
  4023  0510  00F3               	movwf	??_receive_char_from_EUSART
  4024  0511  0873               	movf	??_receive_char_from_EUSART,w
  4025  0512  07BC               	addwf	_receive_index,f
  4026  0513                     l318:
  4027  0513  0008               	return
  4028  0514                     __end_of_receive_char_from_EUSART:
  4029                           
  4030                           	psect	text6
  4031  0514                     __ptext6:	
  4032 ;; *************** function _EUSART_Read *****************
  4033 ;; Defined at:
  4034 ;;		line 151 in file "mcc_generated_files/eusart.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  readValue       1    2[COMMON] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      unsigned char 
  4041 ;; Registers used:
  4042 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;Total ram usage:        2 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    4
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_receive_char_from_EUSART
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           
  4063                           ;psect for function _EUSART_Read
  4064  0514                     _EUSART_Read:
  4065  0514                     l2023:	
  4066                           ;incstack = 0
  4067                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4068                           
  4069  0514                     l2025:	
  4070                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  4071                           
  4072                           
  4073                           ;mcc_generated_files/eusart.c: 155:     while(0 == eusartRxCount)
  4074  0514  0020               	movlb	0	; select bank0
  4075  0515  0839               	movf	_eusartRxCount,w	;volatile
  4076  0516  1903               	btfsc	3,2
  4077  0517  2D19               	goto	u321
  4078  0518  2D1A               	goto	u320
  4079  0519                     u321:
  4080  0519  2D14               	goto	l2025
  4081  051A                     u320:
  4082  051A                     l2027:
  4083                           
  4084                           ;mcc_generated_files/eusart.c: 159:     eusartRxLastError = eusartRxStatusBuffer[eusartR
      +                          xTail];
  4085  051A  087A               	movf	_eusartRxTail,w	;volatile
  4086  051B  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4087  051C  0086               	movwf	6
  4088  051D  0187               	clrf	7
  4089  051E  0801               	movf	1,w
  4090  051F  00F1               	movwf	??_EUSART_Read
  4091  0520  0871               	movf	??_EUSART_Read,w
  4092  0521  00B8               	movwf	_eusartRxLastError	;volatile
  4093                           
  4094                           ;mcc_generated_files/eusart.c: 161:     readValue = eusartRxBuffer[eusartRxTail++];
  4095  0522  087A               	movf	_eusartRxTail,w
  4096  0523  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4097  0524  0086               	movwf	6
  4098  0525  0187               	clrf	7
  4099  0526  0801               	movf	1,w
  4100  0527  00F1               	movwf	??_EUSART_Read
  4101  0528  0871               	movf	??_EUSART_Read,w
  4102  0529  00F2               	movwf	EUSART_Read@readValue
  4103  052A                     l2029:
  4104  052A  3001               	movlw	1
  4105  052B  00F1               	movwf	??_EUSART_Read
  4106  052C  0871               	movf	??_EUSART_Read,w
  4107  052D  07FA               	addwf	_eusartRxTail,f	;volatile
  4108  052E                     l2031:
  4109                           
  4110                           ;mcc_generated_files/eusart.c: 162:     if(sizeof(eusartRxBuffer) <= eusartRxTail)
  4111  052E  3008               	movlw	8
  4112  052F  027A               	subwf	_eusartRxTail,w	;volatile
  4113  0530  1C03               	skipc
  4114  0531  2D33               	goto	u331
  4115  0532  2D34               	goto	u330
  4116  0533                     u331:
  4117  0533  2D35               	goto	l2035
  4118  0534                     u330:
  4119  0534                     l2033:
  4120                           
  4121                           ;mcc_generated_files/eusart.c: 163:     {;mcc_generated_files/eusart.c: 164:         eus
      +                          artRxTail = 0;
  4122  0534  01FA               	clrf	_eusartRxTail	;volatile
  4123  0535                     l2035:
  4124                           
  4125                           ;mcc_generated_files/eusart.c: 166:     PIE1bits.RCIE = 0;
  4126  0535  0021               	movlb	1	; select bank1
  4127  0536  1291               	bcf	17,5	;volatile
  4128  0537                     l2037:
  4129                           
  4130                           ;mcc_generated_files/eusart.c: 167:     eusartRxCount--;
  4131  0537  3001               	movlw	1
  4132  0538  0020               	movlb	0	; select bank0
  4133  0539  02B9               	subwf	_eusartRxCount,f	;volatile
  4134  053A                     l2039:
  4135                           
  4136                           ;mcc_generated_files/eusart.c: 168:     PIE1bits.RCIE = 1;
  4137  053A  0021               	movlb	1	; select bank1
  4138  053B  1691               	bsf	17,5	;volatile
  4139  053C                     l2041:
  4140                           
  4141                           ;mcc_generated_files/eusart.c: 170:     return readValue;
  4142  053C  0872               	movf	EUSART_Read@readValue,w
  4143  053D                     l412:
  4144  053D  0008               	return
  4145  053E                     __end_of_EUSART_Read:
  4146                           
  4147                           	psect	text7
  4148  05AB                     __ptext7:	
  4149 ;; *************** function _SYSTEM_Initialize *****************
  4150 ;; Defined at:
  4151 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;		None
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, status,2, status,0, pclath, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4169 ;;Total ram usage:        0 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    6
  4172 ;; This function calls:
  4173 ;;		_EUSART_Initialize
  4174 ;;		_OSCILLATOR_Initialize
  4175 ;;		_PIN_MANAGER_Initialize
  4176 ;;		_WDT_Initialize
  4177 ;; This function is called by:
  4178 ;;		_main
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           
  4183                           ;psect for function _SYSTEM_Initialize
  4184  05AB                     _SYSTEM_Initialize:
  4185  05AB                     l2049:	
  4186                           ;incstack = 0
  4187                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4188                           
  4189                           
  4190                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4191  05AB  3185  2560  3185   	fcall	_PIN_MANAGER_Initialize
  4192                           
  4193                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4194  05AE  3185  25C1  3185   	fcall	_OSCILLATOR_Initialize
  4195                           
  4196                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4197  05B1  3185  25EC  3185   	fcall	_WDT_Initialize
  4198                           
  4199                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  4200  05B4  3184  2465  3185   	fcall	_EUSART_Initialize
  4201  05B7                     l61:
  4202  05B7  0008               	return
  4203  05B8                     __end_of_SYSTEM_Initialize:
  4204                           
  4205                           	psect	text8
  4206  05EC                     __ptext8:	
  4207 ;; *************** function _WDT_Initialize *****************
  4208 ;; Defined at:
  4209 ;;		line 69 in file "mcc_generated_files/mcc.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;		None
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;Total ram usage:        0 bytes
  4228 ;; Hardware stack levels used:    1
  4229 ;; Hardware stack levels required when called:    4
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_SYSTEM_Initialize
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _WDT_Initialize
  4239  05EC                     _WDT_Initialize:
  4240  05EC                     l1139:	
  4241                           ;incstack = 0
  4242                           ; Regs used in _WDT_Initialize: [wreg]
  4243                           
  4244                           
  4245                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  4246  05EC  3016               	movlw	22
  4247  05ED  0021               	movlb	1	; select bank1
  4248  05EE  0097               	movwf	23	;volatile
  4249  05EF                     l67:
  4250  05EF  0008               	return
  4251  05F0                     __end_of_WDT_Initialize:
  4252                           
  4253                           	psect	text9
  4254  0560                     __ptext9:	
  4255 ;; *************** function _PIN_MANAGER_Initialize *****************
  4256 ;; Defined at:
  4257 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;		None
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;		None
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  1    wreg      void 
  4264 ;; Registers used:
  4265 ;;		wreg, status,2
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;Total ram usage:        0 bytes
  4276 ;; Hardware stack levels used:    1
  4277 ;; Hardware stack levels required when called:    4
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_SYSTEM_Initialize
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           
  4286                           ;psect for function _PIN_MANAGER_Initialize
  4287  0560                     _PIN_MANAGER_Initialize:
  4288  0560                     l1121:	
  4289                           ;incstack = 0
  4290                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4291                           
  4292                           
  4293                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4294  0560  0022               	movlb	2	; select bank2
  4295  0561  0190               	clrf	16	;volatile
  4296                           
  4297                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4298  0562  018F               	clrf	15	;volatile
  4299                           
  4300                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4301  0563  018C               	clrf	12	;volatile
  4302                           
  4303                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  4304  0564  018D               	clrf	13	;volatile
  4305                           
  4306                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  4307  0565  018E               	clrf	14	;volatile
  4308  0566                     l1123:
  4309                           
  4310                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x08;
  4311  0566  3008               	movlw	8
  4312  0567  0021               	movlb	1	; select bank1
  4313  0568  0090               	movwf	16	;volatile
  4314  0569                     l1125:
  4315                           
  4316                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x00;
  4317  0569  018C               	clrf	12	;volatile
  4318  056A                     l1127:
  4319                           
  4320                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0x00;
  4321  056A  018D               	clrf	13	;volatile
  4322  056B                     l1129:
  4323                           
  4324                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x80;
  4325  056B  3080               	movlw	128
  4326  056C  008E               	movwf	14	;volatile
  4327                           
  4328                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x00;
  4329  056D  018F               	clrf	15	;volatile
  4330                           
  4331                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x00;
  4332  056E  0023               	movlb	3	; select bank3
  4333  056F  018F               	clrf	15	;volatile
  4334                           
  4335                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x00;
  4336  0570  018D               	clrf	13	;volatile
  4337                           
  4338                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x00;
  4339  0571  0190               	clrf	16	;volatile
  4340                           
  4341                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x00;
  4342  0572  018C               	clrf	12	;volatile
  4343                           
  4344                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  4345  0573  0024               	movlb	4	; select bank4
  4346  0574  0190               	clrf	16	;volatile
  4347                           
  4348                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  4349  0575  018D               	clrf	13	;volatile
  4350  0576                     l1131:
  4351                           
  4352                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  4353  0576  0021               	movlb	1	; select bank1
  4354  0577  1795               	bsf	21,7	;volatile
  4355                           
  4356                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  4357  0578  0022               	movlb	2	; select bank2
  4358  0579  019D               	clrf	29	;volatile
  4359  057A                     l39:
  4360  057A  0008               	return
  4361  057B                     __end_of_PIN_MANAGER_Initialize:
  4362                           
  4363                           	psect	text10
  4364  05C1                     __ptext10:	
  4365 ;; *************** function _OSCILLATOR_Initialize *****************
  4366 ;; Defined at:
  4367 ;;		line 59 in file "mcc_generated_files/mcc.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;Total ram usage:        0 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    4
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_SYSTEM_Initialize
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           
  4396                           ;psect for function _OSCILLATOR_Initialize
  4397  05C1                     _OSCILLATOR_Initialize:
  4398  05C1                     l1133:	
  4399                           ;incstack = 0
  4400                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4401                           
  4402                           
  4403                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x72;
  4404  05C1  3072               	movlw	114
  4405  05C2  0021               	movlb	1	; select bank1
  4406  05C3  0099               	movwf	25	;volatile
  4407  05C4                     l1135:
  4408                           
  4409                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  4410  05C4  0198               	clrf	24	;volatile
  4411  05C5                     l1137:
  4412                           
  4413                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  4414  05C5  0022               	movlb	2	; select bank2
  4415  05C6  0196               	clrf	22	;volatile
  4416  05C7                     l64:
  4417  05C7  0008               	return
  4418  05C8                     __end_of_OSCILLATOR_Initialize:
  4419                           
  4420                           	psect	text11
  4421  0465                     __ptext11:	
  4422 ;; *************** function _EUSART_Initialize *****************
  4423 ;; Defined at:
  4424 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;		None
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;		None
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		wreg, status,2, status,0, pclath, cstack
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;Total ram usage:        1 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; Hardware stack levels required when called:    5
  4445 ;; This function calls:
  4446 ;;		_EUSART_SetErrorHandler
  4447 ;;		_EUSART_SetFramingErrorHandler
  4448 ;;		_EUSART_SetOverrunErrorHandler
  4449 ;;		_EUSART_SetRxInterruptHandler
  4450 ;;		_EUSART_SetTxInterruptHandler
  4451 ;; This function is called by:
  4452 ;;		_SYSTEM_Initialize
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           
  4457                           ;psect for function _EUSART_Initialize
  4458  0465                     _EUSART_Initialize:
  4459  0465                     l1853:	
  4460                           ;incstack = 0
  4461                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4462                           
  4463                           
  4464                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4465  0465  0021               	movlb	1	; select bank1
  4466  0466  1291               	bcf	17,5	;volatile
  4467  0467                     l1855:
  4468                           
  4469                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4470  0467  30A4               	movlw	low _EUSART_Receive_ISR
  4471  0468  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4472  0469  3004               	movlw	high _EUSART_Receive_ISR
  4473  046A  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4474  046B  3185  25D4  3184   	fcall	_EUSART_SetRxInterruptHandler
  4475  046E                     l1857:
  4476                           
  4477                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4478  046E  0021               	movlb	1	; select bank1
  4479  046F  1211               	bcf	17,4	;volatile
  4480                           
  4481                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4482  0470  303E               	movlw	low _EUSART_Transmit_ISR
  4483  0471  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4484  0472  3005               	movlw	high _EUSART_Transmit_ISR
  4485  0473  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4486  0474  3185  25CE  3184   	fcall	_EUSART_SetTxInterruptHandler
  4487  0477                     l1859:
  4488                           
  4489                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  4490  0477  3008               	movlw	8
  4491  0478  0023               	movlb	3	; select bank3
  4492  0479  009F               	movwf	31	;volatile
  4493  047A                     l1861:
  4494                           
  4495                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  4496  047A  3090               	movlw	144
  4497  047B  009D               	movwf	29	;volatile
  4498  047C                     l1863:
  4499                           
  4500                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  4501  047C  3024               	movlw	36
  4502  047D  009E               	movwf	30	;volatile
  4503  047E                     l1865:
  4504                           
  4505                           ;mcc_generated_files/eusart.c: 107:     SPBRGL = 0xCF;
  4506  047E  30CF               	movlw	207
  4507  047F  009B               	movwf	27	;volatile
  4508  0480                     l1867:
  4509                           
  4510                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  4511  0480  019C               	clrf	28	;volatile
  4512  0481                     l1869:
  4513                           
  4514                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4515  0481  30F8               	movlw	low _EUSART_DefaultFramingErrorHandler
  4516  0482  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4517  0483  3005               	movlw	high _EUSART_DefaultFramingErrorHandler
  4518  0484  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4519  0485  3185  25E0  3184   	fcall	_EUSART_SetFramingErrorHandler
  4520  0488                     l1871:
  4521                           
  4522                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4523  0488  30F0               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4524  0489  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4525  048A  3005               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4526  048B  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4527  048C  3185  25DA  3184   	fcall	_EUSART_SetOverrunErrorHandler
  4528  048F                     l1873:
  4529                           
  4530                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4531  048F  30F4               	movlw	low _EUSART_DefaultErrorHandler
  4532  0490  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
  4533  0491  3005               	movlw	high _EUSART_DefaultErrorHandler
  4534  0492  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4535  0493  3185  25E6  3184   	fcall	_EUSART_SetErrorHandler
  4536                           
  4537                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4538  0496  0020               	movlb	0	; select bank0
  4539  0497  01B8               	clrf	_eusartRxLastError	;volatile
  4540                           
  4541                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4542  0498  01BB               	clrf	_eusartTxHead	;volatile
  4543                           
  4544                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4545  0499  01BA               	clrf	_eusartTxTail	;volatile
  4546  049A                     l1875:
  4547                           
  4548                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4549  049A  3008               	movlw	8
  4550  049B  00F3               	movwf	??_EUSART_Initialize
  4551  049C  0873               	movf	??_EUSART_Initialize,w
  4552  049D  00DF               	movwf	_eusartTxBufferRemaining	;volatile
  4553  049E                     l1877:
  4554                           
  4555                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4556  049E  01FB               	clrf	_eusartRxHead	;volatile
  4557  049F                     l1879:
  4558                           
  4559                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4560  049F  01FA               	clrf	_eusartRxTail	;volatile
  4561  04A0                     l1881:
  4562                           
  4563                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4564  04A0  01B9               	clrf	_eusartRxCount	;volatile
  4565  04A1                     l1883:
  4566                           
  4567                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4568  04A1  0021               	movlb	1	; select bank1
  4569  04A2  1691               	bsf	17,5	;volatile
  4570  04A3                     l393:
  4571  04A3  0008               	return
  4572  04A4                     __end_of_EUSART_Initialize:
  4573                           
  4574                           	psect	text12
  4575  05CE                     __ptext12:	
  4576 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4577 ;; Defined at:
  4578 ;;		line 276 in file "mcc_generated_files/eusart.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4581 ;;		 -> EUSART_Transmit_ISR(1), 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;Total ram usage:        2 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    4
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_EUSART_Initialize
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _EUSART_SetTxInterruptHandler
  4609  05CE                     _EUSART_SetTxInterruptHandler:
  4610  05CE                     l1835:	
  4611                           ;incstack = 0
  4612                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4613                           
  4614                           
  4615                           ;mcc_generated_files/eusart.c: 277:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4616  05CE  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4617  05CF  0020               	movlb	0	; select bank0
  4618  05D0  00DE               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4619  05D1  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4620  05D2  00DD               	movwf	_EUSART_TxDefaultInterruptHandler
  4621  05D3                     l459:
  4622  05D3  0008               	return
  4623  05D4                     __end_of_EUSART_SetTxInterruptHandler:
  4624                           
  4625                           	psect	text13
  4626  05D4                     __ptext13:	
  4627 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4628 ;; Defined at:
  4629 ;;		line 280 in file "mcc_generated_files/eusart.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4632 ;;		 -> EUSART_Receive_ISR(1), 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;Total ram usage:        2 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    4
  4651 ;; This function calls:
  4652 ;;		Nothing
  4653 ;; This function is called by:
  4654 ;;		_EUSART_Initialize
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           
  4659                           ;psect for function _EUSART_SetRxInterruptHandler
  4660  05D4                     _EUSART_SetRxInterruptHandler:
  4661  05D4                     l1833:	
  4662                           ;incstack = 0
  4663                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4664                           
  4665                           
  4666                           ;mcc_generated_files/eusart.c: 281:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4667  05D4  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4668  05D5  0020               	movlb	0	; select bank0
  4669  05D6  00DC               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4670  05D7  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4671  05D8  00DB               	movwf	_EUSART_RxDefaultInterruptHandler
  4672  05D9                     l462:
  4673  05D9  0008               	return
  4674  05DA                     __end_of_EUSART_SetRxInterruptHandler:
  4675                           
  4676                           	psect	text14
  4677  05DA                     __ptext14:	
  4678 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4679 ;; Defined at:
  4680 ;;		line 268 in file "mcc_generated_files/eusart.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4683 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      void 
  4688 ;; Registers used:
  4689 ;;		wreg
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4695 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;Total ram usage:        2 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; Hardware stack levels required when called:    4
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_EUSART_Initialize
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _EUSART_SetOverrunErrorHandler
  4711  05DA                     _EUSART_SetOverrunErrorHandler:
  4712  05DA                     l1839:	
  4713                           ;incstack = 0
  4714                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4715                           
  4716                           
  4717                           ;mcc_generated_files/eusart.c: 269:     EUSART_OverrunErrorHandler = interruptHandler;
  4718  05DA  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4719  05DB  0020               	movlb	0	; select bank0
  4720  05DC  00D8               	movwf	_EUSART_OverrunErrorHandler+1
  4721  05DD  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4722  05DE  00D7               	movwf	_EUSART_OverrunErrorHandler
  4723  05DF                     l453:
  4724  05DF  0008               	return
  4725  05E0                     __end_of_EUSART_SetOverrunErrorHandler:
  4726                           
  4727                           	psect	text15
  4728  05E0                     __ptext15:	
  4729 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4730 ;; Defined at:
  4731 ;;		line 264 in file "mcc_generated_files/eusart.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4734 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;		None
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4750 ;;Total ram usage:        2 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    4
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_EUSART_Initialize
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           
  4761                           ;psect for function _EUSART_SetFramingErrorHandler
  4762  05E0                     _EUSART_SetFramingErrorHandler:
  4763  05E0                     l1837:	
  4764                           ;incstack = 0
  4765                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4766                           
  4767                           
  4768                           ;mcc_generated_files/eusart.c: 265:     EUSART_FramingErrorHandler = interruptHandler;
  4769  05E0  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4770  05E1  0020               	movlb	0	; select bank0
  4771  05E2  00DA               	movwf	_EUSART_FramingErrorHandler+1
  4772  05E3  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4773  05E4  00D9               	movwf	_EUSART_FramingErrorHandler
  4774  05E5                     l450:
  4775  05E5  0008               	return
  4776  05E6                     __end_of_EUSART_SetFramingErrorHandler:
  4777                           
  4778                           	psect	text16
  4779  05E6                     __ptext16:	
  4780 ;; *************** function _EUSART_SetErrorHandler *****************
  4781 ;; Defined at:
  4782 ;;		line 272 in file "mcc_generated_files/eusart.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4785 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4801 ;;Total ram usage:        2 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    4
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_EUSART_Initialize
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _EUSART_SetErrorHandler
  4813  05E6                     _EUSART_SetErrorHandler:
  4814  05E6                     l1841:	
  4815                           ;incstack = 0
  4816                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4817                           
  4818                           
  4819                           ;mcc_generated_files/eusart.c: 273:     EUSART_ErrorHandler = interruptHandler;
  4820  05E6  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4821  05E7  0020               	movlb	0	; select bank0
  4822  05E8  00D6               	movwf	_EUSART_ErrorHandler+1
  4823  05E9  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4824  05EA  00D5               	movwf	_EUSART_ErrorHandler
  4825  05EB                     l456:
  4826  05EB  0008               	return
  4827  05EC                     __end_of_EUSART_SetErrorHandler:
  4828                           
  4829                           	psect	text17
  4830  05B8                     __ptext17:	
  4831 ;; *************** function _EUSART_is_rx_ready *****************
  4832 ;; Defined at:
  4833 ;;		line 137 in file "mcc_generated_files/eusart.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;		None
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1    wreg      _Bool 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2, status,0
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4851 ;;Total ram usage:        0 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:    4
  4854 ;; This function calls:
  4855 ;;		Nothing
  4856 ;; This function is called by:
  4857 ;;		_main
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           
  4862                           ;psect for function _EUSART_is_rx_ready
  4863  05B8                     _EUSART_is_rx_ready:
  4864  05B8                     l2051:	
  4865                           ;incstack = 0
  4866                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  4867                           
  4868                           
  4869                           ;mcc_generated_files/eusart.c: 139:     return (eusartRxCount ? 1 : 0);
  4870  05B8  0020               	movlb	0	; select bank0
  4871  05B9  0839               	movf	_eusartRxCount,w	;volatile
  4872  05BA  1D03               	btfss	3,2
  4873  05BB  2DBD               	goto	u341
  4874  05BC  2DBF               	goto	u340
  4875  05BD                     u341:
  4876  05BD  3001               	movlw	1
  4877  05BE  2DC0               	goto	u350
  4878  05BF                     u340:
  4879  05BF  3000               	movlw	0
  4880  05C0                     u350:
  4881  05C0                     l399:
  4882  05C0  0008               	return
  4883  05C1                     __end_of_EUSART_is_rx_ready:
  4884                           
  4885                           	psect	intentry
  4886  0004                     __pintentry:	
  4887 ;; *************** function _INTERRUPT_InterruptManager *****************
  4888 ;; Defined at:
  4889 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;		None
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      void 
  4896 ;; Registers used:
  4897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4907 ;;Total ram usage:        0 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    3
  4910 ;; This function calls:
  4911 ;;		Absolute function
  4912 ;;		_EUSART_Receive_ISR
  4913 ;;		_EUSART_Transmit_ISR
  4914 ;; This function is called by:
  4915 ;;		Interrupt level 1
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919  0004                     _INTERRUPT_InterruptManager:
  4920                           
  4921                           ;incstack = 0
  4922  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4923                           
  4924                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4925  0005  3180               	pagesel	$
  4926  0006                     i1l2195:
  4927                           
  4928                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4929  0006  1F0B               	btfss	11,6	;volatile
  4930  0007  2809               	goto	u50_21
  4931  0008  280A               	goto	u50_20
  4932  0009                     u50_21:
  4933  0009  282A               	goto	i1l483
  4934  000A                     u50_20:
  4935  000A                     i1l2197:
  4936                           
  4937                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4938  000A  0021               	movlb	1	; select bank1
  4939  000B  1E11               	btfss	17,4	;volatile
  4940  000C  280E               	goto	u51_21
  4941  000D  280F               	goto	u51_20
  4942  000E                     u51_21:
  4943  000E  281A               	goto	i1l478
  4944  000F                     u51_20:
  4945  000F                     i1l2199:
  4946  000F  0020               	movlb	0	; select bank0
  4947  0010  1E11               	btfss	17,4	;volatile
  4948  0011  2813               	goto	u52_21
  4949  0012  2814               	goto	u52_20
  4950  0013                     u52_21:
  4951  0013  281A               	goto	i1l478
  4952  0014                     u52_20:
  4953  0014                     i1l2201:
  4954                           
  4955                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  4956  0014  085E               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4957  0015  008A               	movwf	10
  4958  0016  085D               	movf	_EUSART_TxDefaultInterruptHandler,w
  4959  0017  000A               	callw
  4960  0018  3180               	pagesel	$
  4961                           
  4962                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4963  0019  282A               	goto	i1l483
  4964  001A                     i1l478:	
  4965                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  4966                           
  4967  001A  0021               	movlb	1	; select bank1
  4968  001B  1E91               	btfss	17,5	;volatile
  4969  001C  281E               	goto	u53_21
  4970  001D  281F               	goto	u53_20
  4971  001E                     u53_21:
  4972  001E  282A               	goto	i1l479
  4973  001F                     u53_20:
  4974  001F                     i1l2203:
  4975  001F  0020               	movlb	0	; select bank0
  4976  0020  1E91               	btfss	17,5	;volatile
  4977  0021  2823               	goto	u54_21
  4978  0022  2824               	goto	u54_20
  4979  0023                     u54_21:
  4980  0023  282A               	goto	i1l479
  4981  0024                     u54_20:
  4982  0024                     i1l2205:
  4983                           
  4984                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  4985  0024  085C               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4986  0025  008A               	movwf	10
  4987  0026  085B               	movf	_EUSART_RxDefaultInterruptHandler,w
  4988  0027  000A               	callw
  4989  0028  3180               	pagesel	$
  4990                           
  4991                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4992  0029  282A               	goto	i1l483
  4993  002A                     i1l479:
  4994  002A                     i1l483:	
  4995                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  4996                           
  4997  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4998  002B  0009               	retfie
  4999  002C                     __end_of_INTERRUPT_InterruptManager:
  5000                           
  5001                           	psect	text19
  5002  053E                     __ptext19:	
  5003 ;; *************** function _EUSART_Transmit_ISR *****************
  5004 ;; Defined at:
  5005 ;;		line 197 in file "mcc_generated_files/eusart.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;		None
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;		None
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      void 
  5012 ;; Registers used:
  5013 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;Total ram usage:        1 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_EUSART_Initialize
  5029 ;;		_INTERRUPT_InterruptManager
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _EUSART_Transmit_ISR
  5035  053E                     _EUSART_Transmit_ISR:
  5036  053E                     i1l2135:	
  5037                           ;incstack = 0
  5038                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5039                           
  5040                           
  5041                           ;mcc_generated_files/eusart.c: 201:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  5042  053E  3008               	movlw	8
  5043  053F  0020               	movlb	0	; select bank0
  5044  0540  025F               	subwf	_eusartTxBufferRemaining,w	;volatile
  5045  0541  1803               	skipnc
  5046  0542  2D44               	goto	u41_21
  5047  0543  2D45               	goto	u41_20
  5048  0544                     u41_21:
  5049  0544  2D5D               	goto	i1l424
  5050  0545                     u41_20:
  5051  0545                     i1l2137:
  5052                           
  5053                           ;mcc_generated_files/eusart.c: 202:     {;mcc_generated_files/eusart.c: 203:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
  5054  0545  083A               	movf	_eusartTxTail,w
  5055  0546  3E30               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5056  0547  0086               	movwf	6
  5057  0548  0187               	clrf	7
  5058  0549  0801               	movf	1,w
  5059  054A  0023               	movlb	3	; select bank3
  5060  054B  009A               	movwf	26	;volatile
  5061  054C                     i1l2139:
  5062  054C  3001               	movlw	1
  5063  054D  00F0               	movwf	??_EUSART_Transmit_ISR
  5064  054E  0870               	movf	??_EUSART_Transmit_ISR,w
  5065  054F  0020               	movlb	0	; select bank0
  5066  0550  07BA               	addwf	_eusartTxTail,f	;volatile
  5067  0551                     i1l2141:
  5068                           
  5069                           ;mcc_generated_files/eusart.c: 204:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  5070  0551  3008               	movlw	8
  5071  0552  023A               	subwf	_eusartTxTail,w	;volatile
  5072  0553  1C03               	skipc
  5073  0554  2D56               	goto	u42_21
  5074  0555  2D57               	goto	u42_20
  5075  0556                     u42_21:
  5076  0556  2D58               	goto	i1l2145
  5077  0557                     u42_20:
  5078  0557                     i1l2143:
  5079                           
  5080                           ;mcc_generated_files/eusart.c: 205:         {;mcc_generated_files/eusart.c: 206:        
      +                               eusartTxTail = 0;
  5081  0557  01BA               	clrf	_eusartTxTail	;volatile
  5082  0558                     i1l2145:
  5083                           
  5084                           ;mcc_generated_files/eusart.c: 208:         eusartTxBufferRemaining++;
  5085  0558  3001               	movlw	1
  5086  0559  00F0               	movwf	??_EUSART_Transmit_ISR
  5087  055A  0870               	movf	??_EUSART_Transmit_ISR,w
  5088  055B  07DF               	addwf	_eusartTxBufferRemaining,f	;volatile
  5089                           
  5090                           ;mcc_generated_files/eusart.c: 209:     }
  5091  055C  2D5F               	goto	i1l427
  5092  055D                     i1l424:	
  5093                           ;mcc_generated_files/eusart.c: 210:     else
  5094                           
  5095                           
  5096                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         PIE
      +                          1bits.TXIE = 0;
  5097  055D  0021               	movlb	1	; select bank1
  5098  055E  1211               	bcf	17,4	;volatile
  5099  055F                     i1l427:
  5100  055F  0008               	return
  5101  0560                     __end_of_EUSART_Transmit_ISR:
  5102                           
  5103                           	psect	text20
  5104  04A4                     __ptext20:	
  5105 ;; *************** function _EUSART_Receive_ISR *****************
  5106 ;; Defined at:
  5107 ;;		line 216 in file "mcc_generated_files/eusart.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;		None
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      void 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;Total ram usage:        0 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; Hardware stack levels required when called:    2
  5128 ;; This function calls:
  5129 ;;		Absolute function
  5130 ;;		_EUSART_DefaultErrorHandler
  5131 ;;		_EUSART_DefaultFramingErrorHandler
  5132 ;;		_EUSART_DefaultOverrunErrorHandler
  5133 ;;		_EUSART_RxDataHandler
  5134 ;; This function is called by:
  5135 ;;		_EUSART_Initialize
  5136 ;;		_INTERRUPT_InterruptManager
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           
  5141                           ;psect for function _EUSART_Receive_ISR
  5142  04A4                     _EUSART_Receive_ISR:
  5143  04A4                     i1l2147:	
  5144                           ;incstack = 0
  5145                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5146                           
  5147                           
  5148                           ;mcc_generated_files/eusart.c: 219:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  5149  04A4  087B               	movf	_eusartRxHead,w	;volatile
  5150  04A5  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5151  04A6  0086               	movwf	6
  5152  04A7  0187               	clrf	7
  5153  04A8  0181               	clrf	1
  5154  04A9                     i1l2149:
  5155                           
  5156                           ;mcc_generated_files/eusart.c: 221:     if(RCSTAbits.FERR){
  5157  04A9  0023               	movlb	3	; select bank3
  5158  04AA  1D1D               	btfss	29,2	;volatile
  5159  04AB  2CAD               	goto	u43_21
  5160  04AC  2CAE               	goto	u43_20
  5161  04AD                     u43_21:
  5162  04AD  2CB9               	goto	i1l2155
  5163  04AE                     u43_20:
  5164  04AE                     i1l2151:
  5165                           
  5166                           ;mcc_generated_files/eusart.c: 222:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5167  04AE  087B               	movf	_eusartRxHead,w	;volatile
  5168  04AF  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5169  04B0  0086               	movwf	6
  5170  04B1  0187               	clrf	7
  5171  04B2  1481               	bsf	1,1
  5172  04B3                     i1l2153:
  5173                           
  5174                           ;mcc_generated_files/eusart.c: 223:         EUSART_FramingErrorHandler();
  5175  04B3  0020               	movlb	0	; select bank0
  5176  04B4  085A               	movf	_EUSART_FramingErrorHandler+1,w
  5177  04B5  008A               	movwf	10
  5178  04B6  0859               	movf	_EUSART_FramingErrorHandler,w
  5179  04B7  000A               	callw
  5180  04B8  3184               	pagesel	$
  5181  04B9                     i1l2155:
  5182                           
  5183                           ;mcc_generated_files/eusart.c: 226:     if(RCSTAbits.OERR){
  5184  04B9  0023               	movlb	3	; select bank3
  5185  04BA  1C9D               	btfss	29,1	;volatile
  5186  04BB  2CBD               	goto	u44_21
  5187  04BC  2CBE               	goto	u44_20
  5188  04BD                     u44_21:
  5189  04BD  2CC9               	goto	i1l2161
  5190  04BE                     u44_20:
  5191  04BE                     i1l2157:
  5192                           
  5193                           ;mcc_generated_files/eusart.c: 227:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5194  04BE  087B               	movf	_eusartRxHead,w	;volatile
  5195  04BF  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5196  04C0  0086               	movwf	6
  5197  04C1  0187               	clrf	7
  5198  04C2  1501               	bsf	1,2
  5199  04C3                     i1l2159:
  5200                           
  5201                           ;mcc_generated_files/eusart.c: 228:         EUSART_OverrunErrorHandler();
  5202  04C3  0020               	movlb	0	; select bank0
  5203  04C4  0858               	movf	_EUSART_OverrunErrorHandler+1,w
  5204  04C5  008A               	movwf	10
  5205  04C6  0857               	movf	_EUSART_OverrunErrorHandler,w
  5206  04C7  000A               	callw
  5207  04C8  3184               	pagesel	$
  5208  04C9                     i1l2161:
  5209                           
  5210                           ;mcc_generated_files/eusart.c: 231:     if(eusartRxStatusBuffer[eusartRxHead].status){
  5211  04C9  087B               	movf	_eusartRxHead,w	;volatile
  5212  04CA  3E20               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5213  04CB  0086               	movwf	6
  5214  04CC  0187               	clrf	7
  5215  04CD  0801               	movf	1,w
  5216  04CE  1903               	btfsc	3,2
  5217  04CF  2CD1               	goto	u45_21
  5218  04D0  2CD2               	goto	u45_20
  5219  04D1                     u45_21:
  5220  04D1  2CD9               	goto	i1l2165
  5221  04D2                     u45_20:
  5222  04D2                     i1l2163:
  5223                           
  5224                           ;mcc_generated_files/eusart.c: 232:         EUSART_ErrorHandler();
  5225  04D2  0020               	movlb	0	; select bank0
  5226  04D3  0856               	movf	_EUSART_ErrorHandler+1,w
  5227  04D4  008A               	movwf	10
  5228  04D5  0855               	movf	_EUSART_ErrorHandler,w
  5229  04D6  000A               	callw
  5230  04D7  3184               	pagesel	$
  5231                           
  5232                           ;mcc_generated_files/eusart.c: 233:     } else {
  5233  04D8  2CDC               	goto	i1l434
  5234  04D9                     i1l2165:
  5235                           
  5236                           ;mcc_generated_files/eusart.c: 234:         EUSART_RxDataHandler();
  5237  04D9  3185  257B  3184   	fcall	_EUSART_RxDataHandler
  5238  04DC                     i1l434:
  5239  04DC  0008               	return
  5240  04DD                     __end_of_EUSART_Receive_ISR:
  5241                           
  5242                           	psect	text21
  5243  05F0                     __ptext21:	
  5244 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5245 ;; Defined at:
  5246 ;;		line 252 in file "mcc_generated_files/eusart.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  1    wreg      void 
  5253 ;; Registers used:
  5254 ;;		None
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;Total ram usage:        0 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_EUSART_Initialize
  5270 ;;		_EUSART_Receive_ISR
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           
  5275                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5276  05F0                     _EUSART_DefaultOverrunErrorHandler:
  5277  05F0                     i1l2045:	
  5278                           ;incstack = 0
  5279                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5280                           
  5281                           
  5282                           ;mcc_generated_files/eusart.c: 255:     RCSTAbits.CREN = 0;
  5283  05F0  0023               	movlb	3	; select bank3
  5284  05F1  121D               	bcf	29,4	;volatile
  5285                           
  5286                           ;mcc_generated_files/eusart.c: 256:     RCSTAbits.CREN = 1;
  5287  05F2  161D               	bsf	29,4	;volatile
  5288  05F3                     i1l444:
  5289  05F3  0008               	return
  5290  05F4                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5291                           
  5292                           	psect	text22
  5293  05F8                     __ptext22:	
  5294 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5295 ;; Defined at:
  5296 ;;		line 250 in file "mcc_generated_files/eusart.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;		None
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		None
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5314 ;;Total ram usage:        0 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; This function calls:
  5317 ;;		Nothing
  5318 ;; This function is called by:
  5319 ;;		_EUSART_Initialize
  5320 ;;		_EUSART_Receive_ISR
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           
  5325                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5326  05F8                     _EUSART_DefaultFramingErrorHandler:
  5327  05F8                     i1l441:	
  5328                           ;incstack = 0
  5329                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5330                           
  5331  05F8  0008               	return
  5332  05F9                     __end_of_EUSART_DefaultFramingErrorHandler:
  5333                           
  5334                           	psect	text23
  5335  05F4                     __ptext23:	
  5336 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5337 ;; Defined at:
  5338 ;;		line 260 in file "mcc_generated_files/eusart.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      void 
  5345 ;; Registers used:
  5346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    1
  5359 ;; This function calls:
  5360 ;;		_EUSART_RxDataHandler
  5361 ;; This function is called by:
  5362 ;;		_EUSART_Initialize
  5363 ;;		_EUSART_Receive_ISR
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           
  5368                           ;psect for function _EUSART_DefaultErrorHandler
  5369  05F4                     _EUSART_DefaultErrorHandler:
  5370  05F4                     i1l2047:	
  5371                           ;incstack = 0
  5372                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5373                           
  5374                           
  5375                           ;mcc_generated_files/eusart.c: 261:     EUSART_RxDataHandler();
  5376  05F4  3185  257B  3185   	fcall	_EUSART_RxDataHandler
  5377  05F7                     i1l447:
  5378  05F7  0008               	return
  5379  05F8                     __end_of_EUSART_DefaultErrorHandler:
  5380                           
  5381                           	psect	text24
  5382  057B                     __ptext24:	
  5383 ;; *************** function _EUSART_RxDataHandler *****************
  5384 ;; Defined at:
  5385 ;;		line 240 in file "mcc_generated_files/eusart.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  1    wreg      void 
  5392 ;; Registers used:
  5393 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5403 ;;Total ram usage:        1 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_EUSART_Receive_ISR
  5409 ;;		_EUSART_DefaultErrorHandler
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           
  5414                           ;psect for function _EUSART_RxDataHandler
  5415  057B                     _EUSART_RxDataHandler:
  5416  057B                     i1l1843:	
  5417                           ;incstack = 0
  5418                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5419                           
  5420                           
  5421                           ;mcc_generated_files/eusart.c: 242:     eusartRxBuffer[eusartRxHead++] = RCREG;
  5422  057B  0023               	movlb	3	; select bank3
  5423  057C  0819               	movf	25,w	;volatile
  5424  057D  00F0               	movwf	??_EUSART_RxDataHandler
  5425  057E  087B               	movf	_eusartRxHead,w
  5426  057F  3E28               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5427  0580  0086               	movwf	6
  5428  0581  0187               	clrf	7
  5429  0582  0870               	movf	??_EUSART_RxDataHandler,w
  5430  0583  0081               	movwf	1
  5431  0584                     i1l1845:
  5432  0584  3001               	movlw	1
  5433  0585  00F0               	movwf	??_EUSART_RxDataHandler
  5434  0586  0870               	movf	??_EUSART_RxDataHandler,w
  5435  0587  07FB               	addwf	_eusartRxHead,f	;volatile
  5436  0588                     i1l1847:
  5437                           
  5438                           ;mcc_generated_files/eusart.c: 243:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5439  0588  3008               	movlw	8
  5440  0589  027B               	subwf	_eusartRxHead,w	;volatile
  5441  058A  1C03               	skipc
  5442  058B  2D8D               	goto	u28_21
  5443  058C  2D8E               	goto	u28_20
  5444  058D                     u28_21:
  5445  058D  2D8F               	goto	i1l1851
  5446  058E                     u28_20:
  5447  058E                     i1l1849:
  5448                           
  5449                           ;mcc_generated_files/eusart.c: 244:     {;mcc_generated_files/eusart.c: 245:         eus
      +                          artRxHead = 0;
  5450  058E  01FB               	clrf	_eusartRxHead	;volatile
  5451  058F                     i1l1851:
  5452                           
  5453                           ;mcc_generated_files/eusart.c: 247:     eusartRxCount++;
  5454  058F  3001               	movlw	1
  5455  0590  00F0               	movwf	??_EUSART_RxDataHandler
  5456  0591  0870               	movf	??_EUSART_RxDataHandler,w
  5457  0592  0020               	movlb	0	; select bank0
  5458  0593  07B9               	addwf	_eusartRxCount,f	;volatile
  5459  0594                     i1l438:
  5460  0594  0008               	return
  5461  0595                     __end_of_EUSART_RxDataHandler:
  5462  007E                     btemp	set	126	;btemp
  5463  007E                     int$flags	set	126
  5464  007E                     wtemp0	set	126
  5465                           
  5466                           	psect	config
  5467                           
  5468                           ;Config register CONFIG1 @ 0x8007
  5469                           ;	Oscillator Selection
  5470                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5471                           ;	Watchdog Timer Enable
  5472                           ;	WDTE = OFF, WDT disabled
  5473                           ;	Power-up Timer Enable
  5474                           ;	PWRTE = OFF, PWRT disabled
  5475                           ;	MCLR Pin Function Select
  5476                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5477                           ;	Flash Program Memory Code Protection
  5478                           ;	CP = OFF, Program memory code protection is disabled
  5479                           ;	Data Memory Code Protection
  5480                           ;	CPD = OFF, Data memory code protection is disabled
  5481                           ;	Brown-out Reset Enable
  5482                           ;	BOREN = ON, Brown-out Reset enabled
  5483                           ;	Clock Out Enable
  5484                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5485                           ;	Internal/External Switchover
  5486                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5487                           ;	Fail-Safe Clock Monitor Enable
  5488                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5489  8007                     	org	32775
  5490  8007  3FE4               	dw	16356
  5491                           
  5492                           ;Config register CONFIG2 @ 0x8008
  5493                           ;	Flash Memory Self-Write Protection
  5494                           ;	WRT = OFF, Write protection off
  5495                           ;	Voltage Regulator Capacitor Enable
  5496                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  5497                           ;	PLL Enable
  5498                           ;	PLLEN = OFF, 4x PLL disabled
  5499                           ;	Stack Overflow/Underflow Reset Enable
  5500                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5501                           ;	Brown-out Reset Voltage Selection
  5502                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5503                           ;	Low-Voltage Programming Enable
  5504                           ;	LVP = ON, Low-voltage programming enabled
  5505  8008                     	org	32776
  5506  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         52
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     24      64
    BANK1            80      0      21
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _show->_show_character
    _show_character->_on_digit
    _receive_char_from_EUSART->_EUSART_Read
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_show

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3721
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
           _receive_char_from_EUSART
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                24    24      0    3094
                                              0 BANK0     24    24      0
                          _off_digit
                     _show_character
 ---------------------------------------------------------------------------------
 (2) _show_character                                       6     4      2    1941
                                              4 COMMON     6     4      2
                           _on_digit
 ---------------------------------------------------------------------------------
 (3) _on_digit                                             3     3      0      22
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _off_digit                                            3     3      0      22
                                              1 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _receive_char_from_EUSART                             3     3      0     137
                                              3 COMMON     3     3      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _receive_char_from_EUSART
     _EUSART_Read
   _show
     _off_digit
     _show_character
       _on_digit

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      15       7       26.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      61      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      61      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 26 15:51:22 2023

                ?_EUSART_SetRxInterruptHandler 0071                                             l61 05B7  
                                           l39 057A                                             l64 05C7  
                                           l67 05EF                                            l201 00E8  
                                          l211 010E                                            l203 00E9  
                                          l300 0422                                            l220 0134  
                                          l301 0425                                            l213 0114  
                                          l205 00EF                                            l302 0428  
                                          l222 013A                                            l214 011A  
                                          l206 00F5                                            l303 042B  
                                          l231 0160                                            l223 0140  
                                          l304 042E                                            l240 0186  
                                          l232 0166                                            l305 0431  
                                          l241 018C                                            l306 0434  
                                          l250 01B2                                            l218 0133  
                                          l170 0069                                            l146 059A  
                                          l307 0437                                            l227 0159  
                                          l412 053D                                            l236 017F  
                                          l172 009B                                            l309 0464  
                                          l245 01A5                                            l229 015A  
                                          l318 0513                                            l262 01F0  
                                          l238 0180                                            l182 009C  
                                          l174 007F                                            l158 03CE  
                                          l255 01CB                                            l247 01A6  
                                          l167 0063                                            l272 0216  
                                          l264 01F1                                            l192 00C2  
                                          l184 009D                                            l176 0082  
                                          l281 03D1                                            l257 01D1  
                                          l249 01AC                                            l177 0085  
                                          l169 0066                                            l450 05E5  
                                          l290 03E9                                            l274 021C  
                                          l266 01F7                                            l258 01D7  
                                          l194 00C3                                            l186 00A3  
                                          l291 03EC                                            l283 03D4  
                                          l275 0222                                            l267 01FD  
                                          l187 00A9                                            l284 03D7  
                                          l196 00C9                                            l453 05DF  
                                          l285 03DA                                            l293 0419  
                                          l277 02A0                                            l197 00CF  
                                          l462 05D9                                            l286 03DD  
                                          l287 03E0                                            l456 05EB  
                                          l288 03E3                                            l393 04A3  
                                          l297 041C                                            l289 03E6  
                                          l459 05D3                                            l299 041F  
                                          l399 05C0                                            _RA0 0060  
                                          _RA1 0061                                            _RA2 0062  
                                          _RB0 0068                                            _RA3 0063  
                                          _RB1 0069                                            _RA4 0064  
                                          _RC0 0070                                            _RB2 006A  
                                          _RA5 0065                                            _RC1 0071  
                                          _RB3 006B                                            _RD0 0078  
                                          _RA6 0066                                            _RC2 0072  
                                          _RB4 006C                                            _RA7 0067  
                                          _RB5 006D                                            _RE0 0080  
                                          _RB6 006E                                            _RE1 0081  
                                          _RB7 006F                                            _RE2 0082  
                                          _RD6 007E                                            _RD7 007F  
                                          u300 0055                                            u301 0054  
                                          u310 0062                                            u311 0061  
                                          u320 051A                                            u321 0519  
                                          u330 0534                                            u331 0533  
                                          u340 05BF                                            u341 05BD  
                                          u350 05C0                                            u360 04E9  
                                          u361 04E8                                            u370 04F1  
                                          u290 004C                                            u371 04F0  
                                          u291 004B                                            u380 0506  
                                          u381 0505                                            u550 02AF  
                                          u607 035E                                            u551 02AE  
                                          u560 02FE                                            u617 0371  
                                          u561 02FD                                            u570 05A2  
                                          u627 038F                                            u571 05A1  
                                          u637 039E                                            u647 03BC  
                                          u657 03CB                                            u587 0322  
                                          u597 0335                         ??_EUSART_RxDataHandler 0070  
               ?_EUSART_SetFramingErrorHandler 0071                                            wreg 0009  
                                 ?_EUSART_Read 0070                                           l1121 0560  
                                         l1131 0576                                           l1123 0566  
                                         l1133 05C1                                           l1125 0569  
                                         l2013 041B                                           l1135 05C4  
                                         l1127 056A                                           l2031 052E  
                                         l2023 0514                                           l1137 05C5  
                                         l1129 056B                                           l2041 053C  
                                         l2033 0534                                           l2025 0514  
                                         l2017 043A                                           l2051 05B8  
                                         l1139 05EC                                           l2035 0535  
                                         l2027 051A                                           l2037 0537  
                                         l2029 052A                                           l2061 04F1  
                                         l2039 053A                                           l2071 0500  
                                         l2055 04DD                                           l2049 05AB  
                                         l2073 0507                                           l2057 04E3  
                                         l2075 050F                                           l2067 04F4  
                                         l2059 04E9                                           l2069 04FC  
                                         l2531 02AF                                           l1901 006C  
                                         l2533 02BB                                           l2541 02D8  
                                         l1823 03D0                                           l2551 0321  
                                         l2543 02E0                                           l2535 02BF  
                                         l2527 02A1                                           l1841 05E6  
                                         l1833 05D4                                           l1921 0120  
                                         l1913 00D5                                           l1905 0088  
                                         l2561 0343                                           l2553 0328  
                                         l2545 02E4                                           l2537 02CF  
                                         l2529 02A5                                           l1835 05CE  
                                         l1827 03EF                                           l2571 0381  
                                         l2563 0350                                           l2555 032C  
                                         l2539 02D3                                           l2547 02F8  
                                         l1837 05E0                                           l1861 047A  
                                         l1853 0465                                           l1941 01DD  
                                         l1933 0192                                           l1925 0146  
                                         l1917 00FB                                           l1909 00AF  
                                         l2581 03BB                                           l2573 038E  
                                         l2565 035D                                           l2557 0330  
                                         l2549 02FE                                           l1839 05DA  
                                         l1871 0488                                           l1863 047C  
                                         l1855 0467                                           l2583 03CA  
                                         l2575 039D                                           l2567 0370  
                                         l2559 0338                                           l2591 05A2  
                                         l1881 04A0                                           l1873 048F  
                                         l1865 047E                                           l1857 046E  
                                         l1945 0203                                           l1937 01B8  
                                         l1929 016C                                           l2921 00DD  
                                         l1953 023B                                           l2577 03A1  
                                         l2569 0374                                           l2593 05A5  
                                         l2585 0595                                           l1883 04A1  
                                         l1875 049A                                           l1867 0480  
                                         l1859 0477                                           l2931 019A  
                                         l2923 0103                                           l1955 029C  
                                         l2915 0074                                           l1891 0055  
                                         l2579 03AE                                           l2587 0598  
                                         l1877 049E                                           l1869 0481  
                                         l2941 0243                                           l1949 0228  
                                         l2933 01C0                                           l2925 0128  
                                         l2917 0090                                           l1893 0058  
                                         l1885 0045                                           l2589 0599  
                                         l1879 049F                                           l2943 03F9  
                                         l2935 01E5                                           l2927 014E  
                                         l2919 00B7                                           l1895 005C  
                                         l1887 004C                                           l2945 0444  
                                         l2937 020B                                           l2929 0174  
                                         l1889 004E                                           l2939 0230  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _LATD 010F  
                                         _LATE 0110                                           _WPUB 020D  
                                         _WPUE 0210                                           _main 0595  
                                         _show 02A1                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 002C                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 05C8                                          ?_main 0070  
                                        ?_show 0070                                          i1l424 055D  
                                        i1l441 05F8                                          i1l434 04DC  
                                        i1l427 055F                                          i1l444 05F3  
                                        i1l438 0594                                          i1l447 05F7  
                                        i1l483 002A                                          i1l478 001A  
                                        i1l479 002A                                          _RCREG 0199  
                                        _RCSTA 019D                                          u41_20 0545  
                                        u41_21 0544                                          u42_20 0557  
                                        u50_20 000A                                          u42_21 0556  
                                        u50_21 0009                                          u43_20 04AE  
                                        u51_20 000F                                          u43_21 04AD  
                                        u51_21 000E                                          u28_20 058E  
                                        u44_20 04BE                                          u52_20 0014  
                                        u28_21 058D                                          u44_21 04BD  
                                        u52_21 0013                                          u45_20 04D2  
                                        u53_20 001F                                          u45_21 04D1  
                                        u53_21 001E                                          u54_20 0024  
                                        u54_21 0023                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _TRISD 008F                                          _TRISE 0090  
                                        _TXREG 019A                                          _TXSTA 019E  
                               _WDT_Initialize 05EC                                          _value 00A0  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __initialization 002E  
                                 __end_of_main 05AB                                   __end_of_show 03CF  
                                on_digit@digit 0073                    ?_INTERRUPT_InterruptManager 0070  
               ??_EUSART_SetRxInterruptHandler 0073                                show@chars_index 0054  
                                       ??_main 007A                                         ??_show 003D  
                             ??_show_character 0076                       _receive_char_from_EUSART 04DD  
                       __end_of_WDT_Initialize 05F0      __end_of_EUSART_DefaultFramingErrorHandler 05F9  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 05F8  
                   _EUSART_OverrunErrorHandler 0057                                         _APFCON 011D  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELD 018F                                         _ANSELE 0190  
                   __end_of_EUSART_is_rx_ready 05C1                                         _BORCON 0116  
                                       i1l2201 0014                                         i1l2203 001F  
                                       i1l2045 05F0                                         i1l2141 0551  
                                       i1l2205 0024                                         i1l2047 05F4  
                                       i1l2151 04AE                                         i1l2143 0557  
                                       i1l2135 053E                                         i1l2161 04C9  
                                       i1l2153 04B3                                         i1l2145 0558  
                                       i1l2137 0545                                         i1l2163 04D2  
                                       i1l2155 04B9                                         i1l2147 04A4  
                                       i1l2139 054C                                         i1l2165 04D9  
                                       i1l2157 04BE                                         i1l2149 04A9  
                                       i1l2159 04C3                                         i1l2195 0006  
                                       i1l2197 000A                                         i1l2199 000F  
                                       i1l1851 058F                                         i1l1843 057B  
                                       i1l1845 0584                                         i1l1847 0588  
                                       i1l1849 058E                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                            _EUSART_Transmit_ISR 053E  
                             __end_of_on_digit 041A                                ?_WDT_Initialize 0070  
                         ?_EUSART_Transmit_ISR 0070                           __size_of_EUSART_Read 002A  
                            _SYSTEM_Initialize 05AB                        __end_of__initialization 0040  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 05D4  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 05CE  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0074  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 0020  
              ??_EUSART_SetOverrunErrorHandler 0073                      __end_of_SYSTEM_Initialize 05B8  
                        ??_EUSART_Transmit_ISR 0070                                     __pbssBANK0 0020  
                                   __pbssBANK1 00A0                             __size_of_off_digit 004B  
                  __size_of_EUSART_Receive_ISR 0039                                     __pmaintext 0595  
                ?_EUSART_SetTxInterruptHandler 0071               _EUSART_TxDefaultInterruptHandler 005D  
                                   __pintentry 0004                                        _BAUDCON 019F  
                 ??_EUSART_DefaultErrorHandler 0071                                  _eusartRxCount 0039  
                __size_of_EUSART_RxDataHandler 001A                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0073                                      ?_on_digit 0070  
          __size_of_EUSART_DefaultErrorHandler 0004                     ??_receive_char_from_EUSART 0073  
                                      __ptext1 02A1                                        __ptext2 0044  
                                      __ptext3 03CF                                        __ptext4 041A  
                                      __ptext5 04DD                                        __ptext6 0514  
                                      __ptext7 05AB                                        __ptext8 05EC  
                                      __ptext9 0560                              __end_of_off_digit 0465  
                        _OSCILLATOR_Initialize 05C1                       ??_PIN_MANAGER_Initialize 0071  
                   __size_of_SYSTEM_Initialize 000D                                        clrloop0 05C9  
                                _receive_index 003C                           end_of_initialization 0040  
                               off_digit@digit 0073          __end_of_EUSART_SetOverrunErrorHandler 05E0  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 05DA  
                              show@value_index 0053                                     ??_on_digit 0071  
                            _EUSART_Initialize 0465                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                             _EUSART_is_rx_ready 05B8  
                          ??_EUSART_Initialize 0073                               ??_WDT_Initialize 0071  
               ??_EUSART_SetTxInterruptHandler 0073                      receive_char_from_EUSART@i 0075  
                          ?_EUSART_is_rx_ready 0070                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 04A4                           ??_EUSART_is_rx_ready 0071  
                                    _TXSTAbits 019E             __end_of_EUSART_DefaultErrorHandler 05F8  
                   _EUSART_DefaultErrorHandler 05F4                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 002E                __size_of_PIN_MANAGER_Initialize 001B  
                                ??_EUSART_Read 0071   EUSART_SetRxInterruptHandler@interruptHandler 0071  
 EUSART_SetTxInterruptHandler@interruptHandler 0071                        __size_of_show_character 025D  
               ?_EUSART_SetOverrunErrorHandler 0071                     _EUSART_FramingErrorHandler 0059  
             __end_of_receive_char_from_EUSART 0514                         _EUSART_SetErrorHandler 05E6  
                  __end_of_EUSART_Transmit_ISR 0560                                    __pbssCOMMON 007A  
                                    ___latbits 0003                                  __pcstackBANK0 003D  
                   __end_of_EUSART_Receive_ISR 04DD                     __size_of_EUSART_Initialize 003F  
             _EUSART_RxDefaultInterruptHandler 005B                            __end_of_EUSART_Read 053E  
                                    __pnvBANK0 0055                   __end_of_EUSART_RxDataHandler 0595  
                       _PIN_MANAGER_Initialize 0560                              __size_of_on_digit 004B  
                         EUSART_Read@readValue 0072                        show_character@character 0074  
                                 _eusartRxHead 007B                                   _eusartTxHead 003B  
                                 _eusartRxTail 007A                                   _eusartTxTail 003A  
                 ??_INTERRUPT_InterruptManager 0071                        _eusartTxBufferRemaining 005F  
                                    _off_digit 041A                                 _eusartRxBuffer 0028  
                               _eusartTxBuffer 0030         EUSART_SetErrorHandler@interruptHandler 0071  
         receive_char_from_EUSART@receive_char 0074                                      clear_ram0 05C8  
                                     _PIE1bits 0091                              _eusartRxLastError 0038  
          __size_of_INTERRUPT_InterruptManager 0028                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0073      __end_of_EUSART_DefaultOverrunErrorHandler 05F4  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 05F0  
                            show_character@dot 0078                                     ?_off_digit 0070  
            __size_of_receive_char_from_EUSART 0037                                    _EUSART_Read 0514  
                    ?_receive_char_from_EUSART 0070                                 _show_character 0044  
                      ??_OSCILLATOR_Initialize 0071                            _EUSART_ErrorHandler 0055  
                  ?_EUSART_DefaultErrorHandler 0070                           _EUSART_RxDataHandler 057B  
                       __end_of_show_character 02A1                                       __ptext10 05C1  
                                     __ptext11 0465                                       __ptext20 04A4  
                                     __ptext12 05CE                                       __ptext21 05F0  
                                     __ptext13 05D4                                       __ptext22 05F8  
                                     __ptext14 05DA                                       __ptext23 05F4  
                                     __ptext15 05E0                                       __ptext24 057B  
                                     __ptext16 05E6                                       __ptext17 05B8  
                                     __ptext19 053E                    __size_of_EUSART_is_rx_ready 0009  
                                __size_of_main 0016                                  __size_of_show 012E  
                                     _on_digit 03CF                                      show@chars 003F  
                      ?_EUSART_SetErrorHandler 0071  EUSART_SetOverrunErrorHandler@interruptHandler 0071  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 002C  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 05E6  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 05E0  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                                  ??_off_digit 0071                                ?_show_character 0074  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 05EC  
         __end_of_EUSART_SetRxInterruptHandler 05DA          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 05D4                             _EUSART_Receive_ISR 04A4  
EUSART_SetFramingErrorHandler@interruptHandler 0071                            ?_EUSART_Receive_ISR 0070  
                 __size_of_EUSART_Transmit_ISR 0022                 __end_of_PIN_MANAGER_Initialize 057B  
                          show_character@digit 0075                            show_character@group 0079  
                         ??_EUSART_Receive_ISR 0071  
